{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "signer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isAdmin",
						"type": "bool"
					}
				],
				"name": "AdminUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "authorizingSigner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "targetSigner",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "uint8",
								"name": "isAdmin",
								"type": "uint8"
							},
							{
								"internalType": "address[]",
								"name": "approvedTargets",
								"type": "address[]"
							},
							{
								"internalType": "uint256",
								"name": "nativeTokenLimitPerTransaction",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "permissionStartTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "permissionEndTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "reqValidityStartTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "reqValidityEndTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "bytes32",
								"name": "uid",
								"type": "bytes32"
							}
						],
						"indexed": false,
						"internalType": "struct IAccountPermissions.SignerPermissionRequest",
						"name": "permissions",
						"type": "tuple"
					}
				],
				"name": "SignerPermissionsUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getAllActiveSigners",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "address[]",
								"name": "approvedTargets",
								"type": "address[]"
							},
							{
								"internalType": "uint256",
								"name": "nativeTokenLimitPerTransaction",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "startTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "endTimestamp",
								"type": "uint128"
							}
						],
						"internalType": "struct IAccountPermissions.SignerPermissions[]",
						"name": "signers",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllAdmins",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "admins",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllSigners",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "address[]",
								"name": "approvedTargets",
								"type": "address[]"
							},
							{
								"internalType": "uint256",
								"name": "nativeTokenLimitPerTransaction",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "startTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "endTimestamp",
								"type": "uint128"
							}
						],
						"internalType": "struct IAccountPermissions.SignerPermissions[]",
						"name": "signers",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"name": "getPermissionsForSigner",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "address[]",
								"name": "approvedTargets",
								"type": "address[]"
							},
							{
								"internalType": "uint256",
								"name": "nativeTokenLimitPerTransaction",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "startTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "endTimestamp",
								"type": "uint128"
							}
						],
						"internalType": "struct IAccountPermissions.SignerPermissions",
						"name": "permissions",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"name": "isActiveSigner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"name": "isAdmin",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "uint8",
								"name": "isAdmin",
								"type": "uint8"
							},
							{
								"internalType": "address[]",
								"name": "approvedTargets",
								"type": "address[]"
							},
							{
								"internalType": "uint256",
								"name": "nativeTokenLimitPerTransaction",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "permissionStartTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "permissionEndTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "reqValidityStartTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "reqValidityEndTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "bytes32",
								"name": "uid",
								"type": "bytes32"
							}
						],
						"internalType": "struct IAccountPermissions.SignerPermissionRequest",
						"name": "req",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "setPermissionsForSigner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "uint8",
								"name": "isAdmin",
								"type": "uint8"
							},
							{
								"internalType": "address[]",
								"name": "approvedTargets",
								"type": "address[]"
							},
							{
								"internalType": "uint256",
								"name": "nativeTokenLimitPerTransaction",
								"type": "uint256"
							},
							{
								"internalType": "uint128",
								"name": "permissionStartTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "permissionEndTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "reqValidityStartTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "reqValidityEndTimestamp",
								"type": "uint128"
							},
							{
								"internalType": "bytes32",
								"name": "uid",
								"type": "bytes32"
							}
						],
						"internalType": "struct IAccountPermissions.SignerPermissionRequest",
						"name": "req",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "signature",
						"type": "bytes"
					}
				],
				"name": "verifySignerPermissionRequest",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "thirdweb",
			"kind": "dev",
			"methods": {
				"verifySignerPermissionRequest((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
					"details": "Verifies that a request is signed by an authorized account."
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"AdminUpdated(address,bool)": {
					"notice": "Emitted when an admin is set or removed."
				},
				"SignerPermissionsUpdated(address,address,(address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32))": {
					"notice": "Emitted when permissions for a signer are updated."
				}
			},
			"kind": "user",
			"methods": {
				"getAllActiveSigners()": {
					"notice": "Returns all signers with active permissions to use the account."
				},
				"getAllAdmins()": {
					"notice": "Returns all admins of the account."
				},
				"getAllSigners()": {
					"notice": "Returns all active and inactive signers of the account."
				},
				"getPermissionsForSigner(address)": {
					"notice": "Returns the restrictions under which a signer can use the smart wallet."
				},
				"isActiveSigner(address)": {
					"notice": "Returns whether the given account is an active signer on the account."
				},
				"isAdmin(address)": {
					"notice": "Returns whether the given account is an admin."
				},
				"setPermissionsForSigner((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
					"notice": "Sets the permissions for a given signer."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol": "IAccountPermissions"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol": {
			"keccak256": "0x34e998c2cfac71ae5837280e487215fc64f17c4212270192442e541527a38871",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://51d201d243ade4b6aa37f88e6dbd8f4886ef2b15a290630367b8b95f8ef1a69c",
				"dweb:/ipfs/QmfHdzvzEugZMatjex3sbp2ehjcRE3mDi7QxEHCi6A25Ww"
			]
		}
	},
	"version": 1
}