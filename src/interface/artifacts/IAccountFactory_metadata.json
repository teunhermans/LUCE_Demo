{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "accountAdmin",
						"type": "address"
					}
				],
				"name": "AccountCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"name": "SignerAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"name": "SignerRemoved",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "accountImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "createAccount",
				"outputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					}
				],
				"name": "getAccountsOfSigner",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "adminSigner",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "getAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllAccounts",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "salt",
						"type": "bytes32"
					}
				],
				"name": "onSignerAdded",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "signer",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "salt",
						"type": "bytes32"
					}
				],
				"name": "onSignerRemoved",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"events": {
				"AccountCreated(address,address)": {
					"notice": "Emitted when a new Account is created."
				},
				"SignerAdded(address,address)": {
					"notice": "Emitted when a new signer is added to an Account."
				},
				"SignerRemoved(address,address)": {
					"notice": "Emitted when a new signer is added to an Account."
				}
			},
			"kind": "user",
			"methods": {
				"accountImplementation()": {
					"notice": "Returns the address of the Account implementation."
				},
				"createAccount(address,bytes)": {
					"notice": "Deploys a new Account for admin."
				},
				"getAccountsOfSigner(address)": {
					"notice": "Returns all accounts on which a signer has (active or inactive) permissions."
				},
				"getAddress(address,bytes)": {
					"notice": "Returns the address of an Account that would be deployed with the given admin signer."
				},
				"getAllAccounts()": {
					"notice": "Returns all accounts created on the factory."
				},
				"onSignerAdded(address,bytes32)": {
					"notice": "Callback function for an Account to register its signers."
				},
				"onSignerRemoved(address,bytes32)": {
					"notice": "Callback function for an Account to un-register its signers."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol": "IAccountFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol": {
			"keccak256": "0x820f45842ad539f214db3fbca19fea58702b5ecdd496aa770951904a4938d7e4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://091e913a25e6a3cde14596525e8d5a8656275fd5fcd8fcb56ec3fd7a66d050f9",
				"dweb:/ipfs/Qmbp73fgRHMWyQ2ETsCpVanUXj6NxnzBiJxcEupZwCAKWx"
			]
		},
		".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol": {
			"keccak256": "0x65c5ed98c2b7dd9ba4f2c83eaa652b1069470999a04625e33ea197e39aff63b6",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://9a3d0c5d28efdae547f3714e341b6caf71f27358d9409a6dcc72ca569aeb9ff6",
				"dweb:/ipfs/QmUBZHg1bCsNGWrSC9d34oPDqriLregwxiRCUjmYYZeR5E"
			]
		}
	},
	"version": 1
}