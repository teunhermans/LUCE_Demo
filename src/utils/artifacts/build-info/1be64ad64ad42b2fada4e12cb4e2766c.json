{
	"id": "1be64ad64ad42b2fada4e12cb4e2766c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n// Utils\r\nimport \"../../extension/upgradeable/Multicall.sol\";\r\nimport \"../lib/Clones.sol\";\r\nimport \"../lib/EnumerableSet.sol\";\r\nimport \"../utils/BaseAccount.sol\";\r\nimport \"../interface/IAccountPermissions.sol\";\r\nimport \"../lib/BytesLib.sol\";\r\n\r\n// Interface\r\nimport \"../interface/IEntrypoint.sol\";\r\nimport \"../interface/IAccountFactory.sol\";\r\n\r\n//   $$\\     $$\\       $$\\                 $$\\                         $$\\\r\n//   $$ |    $$ |      \\__|                $$ |                        $$ |\r\n// $$$$$$\\   $$$$$$$\\  $$\\  $$$$$$\\   $$$$$$$ |$$\\  $$\\  $$\\  $$$$$$\\  $$$$$$$\\\r\n// \\_$$  _|  $$  __$$\\ $$ |$$  __$$\\ $$  __$$ |$$ | $$ | $$ |$$  __$$\\ $$  __$$\\\r\n//   $$ |    $$ |  $$ |$$ |$$ |  \\__|$$ /  $$ |$$ | $$ | $$ |$$$$$$$$ |$$ |  $$ |\r\n//   $$ |$$\\ $$ |  $$ |$$ |$$ |      $$ |  $$ |$$ | $$ | $$ |$$   ____|$$ |  $$ |\r\n//   \\$$$$  |$$ |  $$ |$$ |$$ |      \\$$$$$$$ |\\$$$$$\\$$$$  |\\$$$$$$$\\ $$$$$$$  |\r\n//    \\____/ \\__|  \\__|\\__|\\__|       \\_______| \\_____\\____/  \\_______|\\_______/\r\n\r\nabstract contract BaseAccountFactory is IAccountFactory, Multicall {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                                State\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    address public immutable accountImplementation;\r\n    address public immutable entrypoint;\r\n\r\n    EnumerableSet.AddressSet private allAccounts;\r\n    mapping(address => EnumerableSet.AddressSet) internal accountsOfSigner;\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                            Constructor\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    constructor(address _accountImpl, address _entrypoint) {\r\n        accountImplementation = _accountImpl;\r\n        entrypoint = _entrypoint;\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                        External functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Deploys a new Account for admin.\r\n    function createAccount(address _admin, bytes calldata _data) external virtual override returns (address) {\r\n        address impl = accountImplementation;\r\n        bytes32 salt = _generateSalt(_admin, _data);\r\n        address account = Clones.predictDeterministicAddress(impl, salt);\r\n\r\n        if (account.code.length > 0) {\r\n            return account;\r\n        }\r\n\r\n        account = Clones.cloneDeterministic(impl, salt);\r\n\r\n        if (msg.sender != entrypoint) {\r\n            require(allAccounts.add(account), \"AccountFactory: account already registered\");\r\n        }\r\n\r\n        _initializeAccount(account, _admin, _data);\r\n\r\n        emit AccountCreated(account, _admin);\r\n\r\n        return account;\r\n    }\r\n\r\n    /// @notice Callback function for an Account to register itself on the factory.\r\n    function onRegister(bytes32 _salt) external {\r\n        address account = msg.sender;\r\n        require(_isAccountOfFactory(account, _salt), \"AccountFactory: not an account.\");\r\n\r\n        require(allAccounts.add(account), \"AccountFactory: account already registered\");\r\n    }\r\n\r\n    function onSignerAdded(address _signer, bytes32 _salt) external {\r\n        address account = msg.sender;\r\n        require(_isAccountOfFactory(account, _salt), \"AccountFactory: not an account.\");\r\n\r\n        bool isNewSigner = accountsOfSigner[_signer].add(account);\r\n\r\n        if (isNewSigner) {\r\n            emit SignerAdded(account, _signer);\r\n        }\r\n    }\r\n\r\n    /// @notice Callback function for an Account to un-register its signers.\r\n    function onSignerRemoved(address _signer, bytes32 _salt) external {\r\n        address account = msg.sender;\r\n        require(_isAccountOfFactory(account, _salt), \"AccountFactory: not an account.\");\r\n\r\n        bool isAccount = accountsOfSigner[_signer].remove(account);\r\n\r\n        if (isAccount) {\r\n            emit SignerRemoved(account, _signer);\r\n        }\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                            View functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Returns whether an account is registered on this factory.\r\n    function isRegistered(address _account) external view returns (bool) {\r\n        return allAccounts.contains(_account);\r\n    }\r\n\r\n    /// @notice Returns the total number of accounts.\r\n    function totalAccounts() external view returns (uint256) {\r\n        return allAccounts.length();\r\n    }\r\n\r\n    /// @notice Returns all accounts between the given indices.\r\n    function getAccounts(uint256 _start, uint256 _end) external view returns (address[] memory accounts) {\r\n        require(_start < _end && _end <= allAccounts.length(), \"BaseAccountFactory: invalid indices\");\r\n\r\n        uint256 len = _end - _start;\r\n        accounts = new address[](_end - _start);\r\n\r\n        for (uint256 i = 0; i < len; i += 1) {\r\n            accounts[i] = allAccounts.at(i + _start);\r\n        }\r\n    }\r\n\r\n    /// @notice Returns all accounts created on the factory.\r\n    function getAllAccounts() external view returns (address[] memory) {\r\n        return allAccounts.values();\r\n    }\r\n\r\n    /// @notice Returns the address of an Account that would be deployed with the given admin signer.\r\n    function getAddress(address _adminSigner, bytes calldata _data) public view returns (address) {\r\n        bytes32 salt = _generateSalt(_adminSigner, _data);\r\n        return Clones.predictDeterministicAddress(accountImplementation, salt);\r\n    }\r\n\r\n    /// @notice Returns all accounts that the given address is a signer of.\r\n    function getAccountsOfSigner(address signer) external view returns (address[] memory accounts) {\r\n        return accountsOfSigner[signer].values();\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                            Internal functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @dev Returns whether the caller is an account deployed by this factory.\r\n    function _isAccountOfFactory(address _account, bytes32 _salt) internal view virtual returns (bool) {\r\n        address predicted = Clones.predictDeterministicAddress(accountImplementation, _salt);\r\n        return _account == predicted;\r\n    }\r\n\r\n    function _getImplementation(address cloneAddress) internal view returns (address) {\r\n        bytes memory code = cloneAddress.code;\r\n        return BytesLib.toAddress(code, 10);\r\n    }\r\n\r\n    /// @dev Returns the salt used when deploying an Account.\r\n    function _generateSalt(address _admin, bytes memory _data) internal view virtual returns (bytes32) {\r\n        return keccak256(abi.encode(_admin, _data));\r\n    }\r\n\r\n    /// @dev Called in `createAccount`. Initializes the account contract created in `createAccount`.\r\n    function _initializeAccount(address _account, address _admin, bytes calldata _data) internal virtual;\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"./IAccountFactoryCore.sol\";\r\n\r\ninterface IAccountFactory is IAccountFactoryCore {\r\n    /*///////////////////////////////////////////////////////////////\r\n                        Callback Functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Callback function for an Account to register its signers.\r\n    function onSignerAdded(address signer, bytes32 salt) external;\r\n\r\n    /// @notice Callback function for an Account to un-register its signers.\r\n    function onSignerRemoved(address signer, bytes32 salt) external;\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol": {
				"content": "/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"../../extension/upgradeable/UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request\r\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender - the account that generates this request.\r\n     * @param paymaster - if non-null, the paymaster that pays for this request.\r\n     * @param nonce - the nonce value from the request.\r\n     * @param success - true if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * account \"sender\" was deployed.\r\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender the account that is deployed\r\n     * @param factory the factory used to deploy this account (in the initCode)\r\n     * @param paymaster the paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\r\n     * @param userOpHash the request unique identifier.\r\n     * @param sender the sender of this request\r\n     * @param nonce the nonce used in the request\r\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * an event emitted by handleOps(), before starting the execution loop.\r\n     * any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * signature aggregator used by the following UserOperationEvents within this bundle.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * a custom revert error of handleOps, to identify the offending op.\r\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\r\n     *  @param reason - revert reason\r\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *      so a failure can be attributed to the correct entity.\r\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    /**\r\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    /**\r\n     * Successful result from simulateValidation.\r\n     * @param returnInfo gas and time-range returned values\r\n     * @param senderInfo stake information about the sender\r\n     * @param factoryInfo stake information about the factory (if any)\r\n     * @param paymasterInfo stake information about the paymaster (if any)\r\n     */\r\n    error ValidationResult(ReturnInfo returnInfo, StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\r\n\r\n    /**\r\n     * Successful result from simulateValidation, if the account returns a signature aggregator\r\n     * @param returnInfo gas and time-range returned values\r\n     * @param senderInfo stake information about the sender\r\n     * @param factoryInfo stake information about the factory (if any)\r\n     * @param paymasterInfo stake information about the paymaster (if any)\r\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\r\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\r\n     */\r\n    error ValidationResultWithAggregation(\r\n        ReturnInfo returnInfo,\r\n        StakeInfo senderInfo,\r\n        StakeInfo factoryInfo,\r\n        StakeInfo paymasterInfo,\r\n        AggregatorStakeInfo aggregatorInfo\r\n    );\r\n\r\n    /**\r\n     * return value of getSenderAddress\r\n     */\r\n    error SenderAddressResult(address sender);\r\n\r\n    /**\r\n     * return value of simulateHandleOp\r\n     */\r\n    error ExecutionResult(\r\n        uint256 preOpGas,\r\n        uint256 paid,\r\n        uint48 validAfter,\r\n        uint48 validUntil,\r\n        bool targetSuccess,\r\n        bytes targetResult\r\n    );\r\n\r\n    //UserOps handled, per aggregator\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // aggregator address\r\n        IAggregator aggregator;\r\n        // aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperation.\r\n     * no signature aggregator is used.\r\n     * if any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops the operations to execute\r\n     * @param beneficiary the address to receive the fees\r\n     */\r\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\r\n     * @param beneficiary the address to receive the fees\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * generate a request Id - unique identifier for this request.\r\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     */\r\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\r\n\r\n    /**\r\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\r\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\r\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\r\n     * @param userOp the user operation to validate.\r\n     */\r\n    function simulateValidation(UserOperation calldata userOp) external;\r\n\r\n    /**\r\n     * gas and return values during simulation\r\n     * @param preOpGas the gas used for validation (including preValidationGas)\r\n     * @param prefund the required prefund for this operation\r\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint48 validAfter;\r\n        uint48 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * returned aggregated signature info.\r\n     * the aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address aggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * this method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode the constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n    /**\r\n     * simulate full execution of a UserOperation (including both validation and target execution)\r\n     * this method will always revert with \"ExecutionResult\".\r\n     * it performs full validation of the UserOperation, but ignores signature error.\r\n     * an optional target address is called after the userop succeeds, and its value is returned\r\n     * (before the entire call is reverted)\r\n     * Note that in order to collect the success/failure of the target call, it must be executed\r\n     * with trace enabled to track the emitted events.\r\n     * @param op the UserOperation to simulate\r\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\r\n     *        are set to the return from that call.\r\n     * @param targetCallData callData to pass to target address\r\n     */\r\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n/// @author thirdweb\r\n/// Credits: https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol\r\n\r\nlibrary BytesLib {\r\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\r\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\r\n        address tempAddress;\r\n\r\n        assembly {\r\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\r\n        }\r\n\r\n        return tempAddress;\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n/// @author thirdweb\r\n\r\ninterface IAccountPermissions {\r\n    /*///////////////////////////////////////////////////////////////\r\n                                Types\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /**\r\n     *  @notice The payload that must be signed by an authorized wallet to set permissions for a signer to use the smart wallet.\r\n     *\r\n     *  @param signer The addres of the signer to give permissions.\r\n     *  @param approvedTargets The list of approved targets that a role holder can call using the smart wallet.\r\n     *  @param nativeTokenLimitPerTransaction The maximum value that can be transferred by a role holder in a single transaction.\r\n     *  @param permissionStartTimestamp The UNIX timestamp at and after which a signer has permission to use the smart wallet.\r\n     *  @param permissionEndTimestamp The UNIX timestamp at and after which a signer no longer has permission to use the smart wallet.\r\n     *  @param reqValidityStartTimestamp The UNIX timestamp at and after which a signature is valid.\r\n     *  @param reqValidityEndTimestamp The UNIX timestamp at and after which a signature is invalid/expired.\r\n     *  @param uid A unique non-repeatable ID for the payload.\r\n     *  @param isAdmin Whether the signer should be an admin.\r\n     */\r\n    struct SignerPermissionRequest {\r\n        address signer;\r\n        uint8 isAdmin;\r\n        address[] approvedTargets;\r\n        uint256 nativeTokenLimitPerTransaction;\r\n        uint128 permissionStartTimestamp;\r\n        uint128 permissionEndTimestamp;\r\n        uint128 reqValidityStartTimestamp;\r\n        uint128 reqValidityEndTimestamp;\r\n        bytes32 uid;\r\n    }\r\n\r\n    /**\r\n     *  @notice The permissions that a signer has to use the smart wallet.\r\n     *\r\n     *  @param signer The address of the signer.\r\n     *  @param approvedTargets The list of approved targets that a role holder can call using the smart wallet.\r\n     *  @param nativeTokenLimitPerTransaction The maximum value that can be transferred by a role holder in a single transaction.\r\n     *  @param startTimestamp The UNIX timestamp at and after which a signer has permission to use the smart wallet.\r\n     *  @param endTimestamp The UNIX timestamp at and after which a signer no longer has permission to use the smart wallet.\r\n     */\r\n    struct SignerPermissions {\r\n        address signer;\r\n        address[] approvedTargets;\r\n        uint256 nativeTokenLimitPerTransaction;\r\n        uint128 startTimestamp;\r\n        uint128 endTimestamp;\r\n    }\r\n\r\n    /**\r\n     *  @notice Internal struct for storing permissions for a signer (without approved targets).\r\n     *\r\n     *  @param nativeTokenLimitPerTransaction The maximum value that can be transferred by a role holder in a single transaction.\r\n     *  @param startTimestamp The UNIX timestamp at and after which a signer has permission to use the smart wallet.\r\n     *  @param endTimestamp The UNIX timestamp at and after which a signer no longer has permission to use the smart wallet.\r\n     */\r\n    struct SignerPermissionsStatic {\r\n        uint256 nativeTokenLimitPerTransaction;\r\n        uint128 startTimestamp;\r\n        uint128 endTimestamp;\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                                Events\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Emitted when permissions for a signer are updated.\r\n    event SignerPermissionsUpdated(\r\n        address indexed authorizingSigner,\r\n        address indexed targetSigner,\r\n        SignerPermissionRequest permissions\r\n    );\r\n\r\n    /// @notice Emitted when an admin is set or removed.\r\n    event AdminUpdated(address indexed signer, bool isAdmin);\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                            View functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Returns whether the given account is an admin.\r\n    function isAdmin(address signer) external view returns (bool);\r\n\r\n    /// @notice Returns whether the given account is an active signer on the account.\r\n    function isActiveSigner(address signer) external view returns (bool);\r\n\r\n    /// @notice Returns the restrictions under which a signer can use the smart wallet.\r\n    function getPermissionsForSigner(address signer) external view returns (SignerPermissions memory permissions);\r\n\r\n    /// @notice Returns all active and inactive signers of the account.\r\n    function getAllSigners() external view returns (SignerPermissions[] memory signers);\r\n\r\n    /// @notice Returns all signers with active permissions to use the account.\r\n    function getAllActiveSigners() external view returns (SignerPermissions[] memory signers);\r\n\r\n    /// @notice Returns all admins of the account.\r\n    function getAllAdmins() external view returns (address[] memory admins);\r\n\r\n    /// @dev Verifies that a request is signed by an authorized account.\r\n    function verifySignerPermissionRequest(\r\n        SignerPermissionRequest calldata req,\r\n        bytes calldata signature\r\n    ) external view returns (bool success, address signer);\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                            External functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Sets the permissions for a given signer.\r\n    function setPermissionsForSigner(SignerPermissionRequest calldata req, bytes calldata signature) external;\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-empty-blocks */\r\n\r\nimport \"../interface/IAccount.sol\";\r\nimport \"../interface/IEntrypoint.sol\";\r\nimport \"./Helpers.sol\";\r\n\r\n/**\r\n * Basic account implementation.\r\n * this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\r\n * specific account implementation should inherit it and provide the account-specific logic\r\n */\r\nabstract contract BaseAccount is IAccount {\r\n    using UserOperationLib for UserOperation;\r\n\r\n    //return value in case of signature failure, with no time-range.\r\n    // equivalent to _packValidationData(true,0,0);\r\n    uint256 internal constant SIG_VALIDATION_FAILED = 1;\r\n\r\n    /**\r\n     * Return the account nonce.\r\n     * This method returns the next sequential nonce.\r\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\r\n     */\r\n    function getNonce() public view virtual returns (uint256) {\r\n        return entryPoint().getNonce(address(this), 0);\r\n    }\r\n\r\n    /**\r\n     * return the entryPoint used by this account.\r\n     * subclass should return the current entryPoint used by this account.\r\n     */\r\n    function entryPoint() public view virtual returns (IEntryPoint);\r\n\r\n    /**\r\n     * Validate user's signature and nonce.\r\n     * subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\r\n     */\r\n    function validateUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 missingAccountFunds\r\n    ) external virtual override returns (uint256 validationData) {\r\n        _requireFromEntryPoint();\r\n        validationData = _validateSignature(userOp, userOpHash);\r\n        _validateNonce(userOp.nonce);\r\n        _payPrefund(missingAccountFunds);\r\n    }\r\n\r\n    /**\r\n     * ensure the request comes from the known entrypoint.\r\n     */\r\n    function _requireFromEntryPoint() internal view virtual {\r\n        require(msg.sender == address(entryPoint()), \"account: not from EntryPoint\");\r\n    }\r\n\r\n    /**\r\n     * validate the signature is valid for this message.\r\n     * @param userOp validate the userOp.signature field\r\n     * @param userOpHash convenient field: the hash of the request, to check the signature against\r\n     *          (also hashes the entrypoint and chain id)\r\n     * @return validationData signature and time-range of this operation\r\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *         otherwise, an address of an \"authorizer\" contract.\r\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *      <6-byte> validAfter - first timestamp this operation is valid\r\n     *      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\r\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function _validateSignature(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash\r\n    ) internal virtual returns (uint256 validationData);\r\n\r\n    /**\r\n     * Validate the nonce of the UserOperation.\r\n     * This method may validate the nonce requirement of this account.\r\n     * e.g.\r\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\r\n     *      `require(nonce < type(uint64).max)`\r\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\r\n     *      `require(nonce & type(uint64).max == 0)`\r\n     *\r\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\r\n     * action is needed by the account itself.\r\n     *\r\n     * @param nonce to validate\r\n     *\r\n     * solhint-disable-next-line no-empty-blocks\r\n     */\r\n    function _validateNonce(uint256 nonce) internal view virtual {}\r\n\r\n    /**\r\n     * sends to the entrypoint (msg.sender) the missing funds for this transaction.\r\n     * subclass MAY override this method for better funds management\r\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\r\n     * it will not be required to send again)\r\n     * @param missingAccountFunds the minimum value this method should send the entrypoint.\r\n     *  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster.\r\n     */\r\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\r\n        if (missingAccountFunds != 0) {\r\n            (bool success, ) = payable(msg.sender).call{ value: missingAccountFunds, gas: type(uint256).max }(\"\");\r\n            (success);\r\n            //ignore failure (its EntryPoint's job to verify, not account.)\r\n        }\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\r\n * deploying minimal proxy contracts, also known as \"clones\".\r\n *\r\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\r\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\r\n *\r\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\r\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\r\n * deterministic method.\r\n *\r\n * _Available since v3.4._\r\n */\r\nlibrary Clones {\r\n    /**\r\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\r\n     *\r\n     * This function uses the create opcode, which should never revert.\r\n     */\r\n    function clone(address implementation) internal returns (address instance) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\r\n            // of the `implementation` address with the bytecode before the address.\r\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\r\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\r\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\r\n            instance := create(0, 0x09, 0x37)\r\n        }\r\n        require(instance != address(0), \"ERC1167: create failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\r\n     *\r\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\r\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\r\n     * the clones cannot be deployed twice at the same address.\r\n     */\r\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\r\n            // of the `implementation` address with the bytecode before the address.\r\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\r\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\r\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\r\n            instance := create2(0, 0x09, 0x37, salt)\r\n        }\r\n        require(instance != address(0), \"ERC1167: create2 failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\r\n     */\r\n    function predictDeterministicAddress(\r\n        address implementation,\r\n        bytes32 salt,\r\n        address deployer\r\n    ) internal pure returns (address predicted) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            mstore(add(ptr, 0x38), deployer)\r\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\r\n            mstore(add(ptr, 0x14), implementation)\r\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\r\n            mstore(add(ptr, 0x58), salt)\r\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\r\n            predicted := keccak256(add(ptr, 0x43), 0x55)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\r\n     */\r\n    function predictDeterministicAddress(\r\n        address implementation,\r\n        bytes32 salt\r\n    ) internal view returns (address predicted) {\r\n        return predictDeterministicAddress(implementation, salt, address(this));\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol": {
				"content": "// SPDX-License-Identifier: Apache 2.0\r\npragma solidity ^0.8.0;\r\n\r\n/// @author thirdweb\r\n\r\nimport \"../../src/lib/Address.sol\";\r\nimport \"../../src/interface/IMulticall.sol\";\r\n\r\n/**\r\n * @dev Provides a function to batch together multiple calls in a single external call.\r\n *\r\n * _Available since v4.1._\r\n */\r\ncontract Multicall is IMulticall {\r\n    /**\r\n     *  @notice Receives and executes a batch of function calls on this contract.\r\n     *  @dev Receives and executes a batch of function calls on this contract.\r\n     *\r\n     *  @param data The bytes data that makes up the batch of function calls to execute.\r\n     *  @return results The bytes data that makes up the result of the batch of function calls executed.\r\n     */\r\n    function multicall(bytes[] calldata data) external virtual override returns (bytes[] memory results) {\r\n        results = new bytes[](data.length);\r\n        for (uint256 i = 0; i < data.length; i++) {\r\n            results[i] = Address.functionDelegateCall(address(this), data[i]);\r\n        }\r\n        return results;\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable func-visibility */\r\n\r\n/**\r\n * returned data from validateUserOp.\r\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\r\n * @param aggregator - address(0) - the account validated the signature by itself.\r\n *              address(1) - the account failed to validate the signature.\r\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\r\n * @param validAfter - this UserOp is valid only after this timestamp.\r\n * @param validaUntil - this UserOp is valid only up to this timestamp.\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n//extract sigFailed, validAfter, validUntil.\r\n// also convert zero validUntil to type(uint48).max\r\nfunction _parseValidationData(uint256 validationData) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n// intersect account and paymaster ranges.\r\nfunction _intersectTimeRange(\r\n    uint256 validationData,\r\n    uint256 paymasterValidationData\r\n) pure returns (ValidationData memory) {\r\n    ValidationData memory accountValidationData = _parseValidationData(validationData);\r\n    ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\r\n    address aggregator = accountValidationData.aggregator;\r\n    if (aggregator == address(0)) {\r\n        aggregator = pmValidationData.aggregator;\r\n    }\r\n    uint48 validAfter = accountValidationData.validAfter;\r\n    uint48 validUntil = accountValidationData.validUntil;\r\n    uint48 pmValidAfter = pmValidationData.validAfter;\r\n    uint48 pmValidUntil = pmValidationData.validUntil;\r\n\r\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\r\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * helper to pack the return value for validateUserOp\r\n * @param data - the ValidationData to pack\r\n */\r\nfunction _packValidationData(ValidationData memory data) pure returns (uint256) {\r\n    return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * helper to pack the return value for validateUserOp, when not using an aggregator\r\n * @param sigFailed - true for signature failure, false for success\r\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\r\n * @param validAfter first timestamp this UserOperation is valid\r\n */\r\nfunction _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\r\n    return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n */\r\nfunction calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n    assembly {\r\n        let mem := mload(0x40)\r\n        let len := data.length\r\n        calldatacopy(mem, data.offset, len)\r\n        ret := keccak256(mem, len)\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"../../extension/upgradeable/UserOperation.sol\";\r\n\r\ninterface IAccount {\r\n    /**\r\n     * Validate user's signature and nonce\r\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\r\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\r\n     * This allows making a \"simulation call\" without a valid signature\r\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\r\n     *\r\n     * @dev Must validate caller is the entryPoint.\r\n     *      Must validate the signature and nonce\r\n     * @param userOp the operation that is about to be executed.\r\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\r\n     * @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\r\n     *      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\r\n     *      The excess is left as a deposit in the entrypoint, for future calls.\r\n     *      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\r\n     *      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\r\n     * @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\r\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\r\n     *         otherwise, an address of an \"authorizer\" contract.\r\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\r\n     *      <6-byte> validAfter - first timestamp this operation is valid\r\n     *      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\r\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validateUserOp(\r\n        UserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 missingAccountFunds\r\n    ) external returns (uint256 validationData);\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface INonceManager {\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key) external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"../../extension/upgradeable/UserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * validate aggregated signature.\r\n     * revert if the aggregated signature does not match the given list of operations.\r\n     */\r\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\r\n\r\n    /**\r\n     * validate signature of a single userOp\r\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp the userOperation received from the user.\r\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\r\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\r\n     */\r\n    function validateUserOpSignature(UserOperation calldata userOp) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code perform this aggregation\r\n     * @param userOps array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature the aggregated signature\r\n     */\r\n    function aggregateSignatures(\r\n        UserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * manage deposits and stakes.\r\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\r\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(address indexed account, address withdrawAddress, uint256 amount);\r\n\r\n    /// Emitted when stake or unstake delay are modified\r\n    event StakeLocked(address indexed account, uint256 totalStaked, uint256 unstakeDelaySec);\r\n\r\n    /// Emitted once a stake is scheduled for withdrawal\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(address indexed account, address withdrawAddress, uint256 amount);\r\n\r\n    /**\r\n     * @param deposit the entity's deposit\r\n     * @param staked true if this entity is staked.\r\n     * @param stake actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\r\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\r\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\r\n     *    and the rest fit into a 2nd cell.\r\n     *    112 bit allows for 10^15 eth\r\n     *    48 bit for full timestamp\r\n     *    32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint112 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    //API struct used by getStakeInfo and simulateValidation\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /// @return info - full deposit information of given account\r\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\r\n\r\n    /// @return the deposit (for gas payment) of the account\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * add to the deposit of the given account\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 _unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * attempt to unlock the stake.\r\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * withdraw from the (unlocked) stake.\r\n     * must first call unlockStake and wait for the unstakeDelay to pass\r\n     * @param withdrawAddress the address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * withdraw from the deposit.\r\n     * @param withdrawAddress the address to send withdrawn value.\r\n     * @param withdrawAmount the amount to withdraw.\r\n     */\r\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\nimport { calldataKeccak } from \"../../src/utils/Helpers.sol\";\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender the sender account of this request.\r\n * @param nonce unique value the sender uses to verify it is not a replay.\r\n * @param initCode if set, the account contract will be created by this constructor/\r\n * @param callData the method call to execute on this account.\r\n * @param callGasLimit the gas limit passed to the callData method call.\r\n * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\r\n * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\r\n * @param maxFeePerGas same as EIP-1559 gas parameter.\r\n * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\r\n * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\r\n * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct UserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    uint256 callGasLimit;\r\n    uint256 verificationGasLimit;\r\n    uint256 preVerificationGas;\r\n    uint256 maxFeePerGas;\r\n    uint256 maxPriorityFeePerGas;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n\r\n/**\r\n * Utility functions helpful when working with UserOperation structs.\r\n */\r\nlibrary UserOperationLib {\r\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\r\n        address data;\r\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\r\n        assembly {\r\n            data := calldataload(userOp)\r\n        }\r\n        return address(uint160(data));\r\n    }\r\n\r\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\r\n    // pay above what he signed for.\r\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\r\n        unchecked {\r\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n            if (maxFeePerGas == maxPriorityFeePerGas) {\r\n                //legacy mode (for networks that don't support basefee opcode)\r\n                return maxFeePerGas;\r\n            }\r\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\r\n        }\r\n    }\r\n\r\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\r\n        address sender = getSender(userOp);\r\n        uint256 nonce = userOp.nonce;\r\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\r\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\r\n        uint256 callGasLimit = userOp.callGasLimit;\r\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\r\n        uint256 preVerificationGas = userOp.preVerificationGas;\r\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\r\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\r\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\r\n\r\n        return\r\n            abi.encode(\r\n                sender,\r\n                nonce,\r\n                hashInitCode,\r\n                hashCallData,\r\n                callGasLimit,\r\n                verificationGasLimit,\r\n                preVerificationGas,\r\n                maxFeePerGas,\r\n                maxPriorityFeePerGas,\r\n                hashPaymasterAndData\r\n            );\r\n    }\r\n\r\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\r\n        return keccak256(pack(userOp));\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\ninterface IAccountFactoryCore {\r\n    /*///////////////////////////////////////////////////////////////\r\n                                Events\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Emitted when a new Account is created.\r\n    event AccountCreated(address indexed account, address indexed accountAdmin);\r\n\r\n    /// @notice Emitted when a new signer is added to an Account.\r\n    event SignerAdded(address indexed account, address indexed signer);\r\n\r\n    /// @notice Emitted when a new signer is added to an Account.\r\n    event SignerRemoved(address indexed account, address indexed signer);\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                        Extension Functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Deploys a new Account for admin.\r\n    function createAccount(address admin, bytes calldata _data) external returns (address account);\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                            View Functions\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Returns the address of the Account implementation.\r\n    function accountImplementation() external view returns (address);\r\n\r\n    /// @notice Returns all accounts created on the factory.\r\n    function getAllAccounts() external view returns (address[] memory);\r\n\r\n    /// @notice Returns the address of an Account that would be deployed with the given admin signer.\r\n    function getAddress(address adminSigner, bytes calldata data) external view returns (address);\r\n\r\n    /// @notice Returns all accounts on which a signer has (active or inactive) permissions.\r\n    function getAccountsOfSigner(address signer) external view returns (address[] memory accounts);\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/// @author thirdweb\r\n\r\n/**\r\n * @dev Provides a function to batch together multiple calls in a single external call.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IMulticall {\r\n    /**\r\n     * @dev Receives and executes a batch of function calls on this contract.\r\n     */\r\n    function multicall(bytes[] calldata data) external returns (bytes[] memory results);\r\n}"
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n/// @author thirdweb\r\n\r\nlibrary Address {\r\n    /**\r\n     *  @dev Returns whether an address is a smart contract.\r\n     *\r\n     *  `account` MAY NOT be a smart contract when this function returns `true`\r\n     *  Other than EOAs, `isContract` will return `false` for:\r\n     *\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *  - a contract in construction (since the code is only stored at the end of\r\n     *    the constructor execution)\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /// @dev Sends `amount` of wei to `recipient`.\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /// @dev Performs a low-level call on `target` with `data`.\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /// @dev Performs a call on `target` with `data`, with `errorMessage` as a fallback\r\n    ///      revert reason when `target` reverts.\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /// @dev Performs a low-level call on `target` with `data` and `value`.\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /// @dev Performs a static call on `target` with `data` and `value`, with `errorMessage` as a fallback\r\n    ///      revert reason when `target` reverts.\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target) && !isContract(msg.sender), \"Address: invalid call\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /// @dev Performs a static call on `target` with `data`.\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /// @dev Performs a static call on `target` with `data`, with `errorMessage` as a fallback\r\n    ///      revert reason when `target` reverts.\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target) && !isContract(msg.sender), \"Address: invalid static call\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /// @dev Performs a delegate call on `target` with `data`.\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /// @dev Performs a delegate call on `target` with `data`, with `errorMessage` as a fallback\r\n    ///      revert reason when `target` reverts.\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target) && !isContract(msg.sender), \"Address: invalid delegate call\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /// @dev Verifies that a low level call was successful.\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol": {
				"Multicall": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides a function to batch together multiple calls in a single external call. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "Receives and executes a batch of function calls on this contract.",
								"params": {
									"data": "The bytes data that makes up the batch of function calls to execute."
								},
								"returns": {
									"results": "The bytes data that makes up the result of the batch of function calls executed."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":307:1058  contract Multicall is IMulticall {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":307:1058  contract Multicall is IMulticall {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xac9650d8\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":732:1055  function multicall(bytes[] calldata data) external virtual override returns (bytes[] memory results) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":809:831  bytes[] memory results */\n      0x60\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":866:870  data */\n      dup3\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":866:877  data.length */\n      swap1\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":854:878  new bytes[](data.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_11\n      jumpi\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n    tag_11:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_14\n      jumpi\n      dup2\n      0x20\n      add\n    tag_15:\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_15\n      jumpi\n      swap1\n      pop\n    tag_14:\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":844:878  results = new bytes[](data.length) */\n      swap1\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":894:903  uint256 i */\n      0x00\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":889:1023  for (uint256 i = 0; i < data.length; i++) {... */\n    tag_16:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":913:917  data */\n      dup4\n      dup4\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":913:924  data.length */\n      swap1\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":909:910  i */\n      dup2\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":909:924  i < data.length */\n      lt\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":889:1023  for (uint256 i = 0; i < data.length; i++) {... */\n      iszero\n      tag_17\n      jumpi\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":959:1011  Address.functionDelegateCall(address(this), data[i]) */\n      tag_19\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":996:1000  this */\n      address\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":1003:1007  data */\n      dup6\n      dup6\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":1008:1009  i */\n      dup5\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":1003:1010  data[i] */\n      dup2\n      dup2\n      lt\n      tag_20\n      jumpi\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n    tag_20:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":959:1011  Address.functionDelegateCall(address(this), data[i]) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":959:987  Address.functionDelegateCall */\n      tag_25\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":959:1011  Address.functionDelegateCall(address(this), data[i]) */\n      jump\t// in\n    tag_19:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":946:953  results */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":954:955  i */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":946:956  results[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_26\n      jumpi\n      tag_27\n      tag_22\n      jump\t// in\n    tag_27:\n    tag_26:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":946:1011  results[i] = Address.functionDelegateCall(address(this), data[i]) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":926:929  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":889:1023  for (uint256 i = 0; i < data.length; i++) {... */\n      jump(tag_16)\n    tag_17:\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":732:1055  function multicall(bytes[] calldata data) external virtual override returns (bytes[] memory results) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3633:3833  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_25:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3716:3728  bytes memory */\n      0x60\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3748:3825  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_29\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3769:3775  target */\n      dup4\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3777:3781  data */\n      dup4\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3748:3825  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3748:3768  functionDelegateCall */\n      tag_30\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3748:3825  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_29:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3741:3825  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3633:3833  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3990:4405  function functionDelegateCall(... */\n    tag_30:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4135:4147  bytes memory */\n      0x60\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4168:4186  isContract(target) */\n      tag_32\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4179:4185  target */\n      dup5\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4168:4178  isContract */\n      tag_33\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4168:4186  isContract(target) */\n      jump\t// in\n    tag_32:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4168:4213  isContract(target) && !isContract(msg.sender) */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4191:4213  isContract(msg.sender) */\n      tag_35\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4202:4212  msg.sender */\n      caller\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4191:4201  isContract */\n      tag_33\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4191:4213  isContract(msg.sender) */\n      jump\t// in\n    tag_35:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4190:4213  !isContract(msg.sender) */\n      iszero\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4168:4213  isContract(target) && !isContract(msg.sender) */\n    tag_34:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4160:4248  require(isContract(target) && !isContract(msg.sender), \"Address: invalid delegate call\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4262:4274  bool success */\n      0x00\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4276:4299  bytes memory returndata */\n      dup1\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4303:4309  target */\n      dup6\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4303:4322  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4323:4327  data */\n      dup6\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4303:4328  target.delegatecall(data) */\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_43\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_42)\n    tag_43:\n      0x60\n      swap2\n      pop\n    tag_42:\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4261:4328  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4346:4397  verifyCallResult(success, returndata, errorMessage) */\n      tag_44\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4363:4370  success */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4372:4382  returndata */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4384:4396  errorMessage */\n      dup7\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4346:4362  verifyCallResult */\n      tag_45\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4346:4397  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_44:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4339:4397  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":3990:4405  function functionDelegateCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":595:710  function isContract(address account) internal view returns (bool) {... */\n    tag_33:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":655:659  bool */\n      0x00\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":701:702  0 */\n      dup1\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":679:686  account */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":679:698  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":679:702  account.code.length > 0 */\n      gt\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":672:702  return account.code.length > 0 */\n      swap1\n      pop\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":595:710  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4474:5186  function verifyCallResult(... */\n    tag_45:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4624:4636  bytes memory */\n      0x60\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4653:4660  success */\n      dup4\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4649:5179  if (success) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4684:4694  returndata */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4677:4694  return returndata */\n      swap1\n      pop\n      jump(tag_47)\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4649:5179  if (success) {... */\n    tag_48:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4818:4819  0 */\n      0x00\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4798:4808  returndata */\n      dup4\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4798:4815  returndata.length */\n      mload\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4798:4819  returndata.length > 0 */\n      gt\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4794:5168  if (returndata.length > 0) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4996:5006  returndata */\n      dup3\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4990:5007  mload(returndata) */\n      mload\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5057:5072  returndata_size */\n      dup1\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5044:5054  returndata */\n      dup5\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5040:5042  32 */\n      0x20\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5036:5055  add(32, returndata) */\n      add\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5029:5073  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4794:5168  if (returndata.length > 0) {... */\n    tag_50:\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5139:5151  errorMessage */\n      dup2\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":5132:5152  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":4474:5186  function verifyCallResult(... */\n    tag_47:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_55:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_56:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_57:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_58:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_59:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":718:1297   */\n    tag_60:\n        /* \"#utility.yul\":802:810   */\n      0x00\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":862:865   */\n      dup4\n        /* \"#utility.yul\":855:859   */\n      0x1f\n        /* \"#utility.yul\":847:853   */\n      dup5\n        /* \"#utility.yul\":843:860   */\n      add\n        /* \"#utility.yul\":839:866   */\n      slt\n        /* \"#utility.yul\":829:951   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":870:949   */\n      tag_91\n      tag_57\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":829:951   */\n    tag_90:\n        /* \"#utility.yul\":983:989   */\n      dup3\n        /* \"#utility.yul\":970:990   */\n      calldataload\n        /* \"#utility.yul\":960:990   */\n      swap1\n      pop\n        /* \"#utility.yul\":1013:1031   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1005:1011   */\n      dup2\n        /* \"#utility.yul\":1002:1032   */\n      gt\n        /* \"#utility.yul\":999:1116   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1035:1114   */\n      tag_93\n      tag_58\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":999:1116   */\n    tag_92:\n        /* \"#utility.yul\":1149:1153   */\n      0x20\n        /* \"#utility.yul\":1141:1147   */\n      dup4\n        /* \"#utility.yul\":1137:1154   */\n      add\n        /* \"#utility.yul\":1125:1154   */\n      swap2\n      pop\n        /* \"#utility.yul\":1203:1206   */\n      dup4\n        /* \"#utility.yul\":1195:1199   */\n      0x20\n        /* \"#utility.yul\":1187:1193   */\n      dup3\n        /* \"#utility.yul\":1183:1200   */\n      mul\n        /* \"#utility.yul\":1173:1181   */\n      dup4\n        /* \"#utility.yul\":1169:1201   */\n      add\n        /* \"#utility.yul\":1166:1207   */\n      gt\n        /* \"#utility.yul\":1163:1291   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1210:1289   */\n      tag_95\n      tag_59\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1163:1291   */\n    tag_94:\n        /* \"#utility.yul\":718:1297   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1303:1884   */\n    tag_6:\n        /* \"#utility.yul\":1400:1406   */\n      0x00\n        /* \"#utility.yul\":1408:1414   */\n      dup1\n        /* \"#utility.yul\":1457:1459   */\n      0x20\n        /* \"#utility.yul\":1445:1454   */\n      dup4\n        /* \"#utility.yul\":1436:1443   */\n      dup6\n        /* \"#utility.yul\":1432:1455   */\n      sub\n        /* \"#utility.yul\":1428:1460   */\n      slt\n        /* \"#utility.yul\":1425:1544   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1463:1542   */\n      tag_98\n      tag_55\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1425:1544   */\n    tag_97:\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1600:1609   */\n      dup4\n        /* \"#utility.yul\":1596:1613   */\n      add\n        /* \"#utility.yul\":1583:1614   */\n      calldataload\n        /* \"#utility.yul\":1641:1659   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1633:1639   */\n      dup2\n        /* \"#utility.yul\":1630:1660   */\n      gt\n        /* \"#utility.yul\":1627:1744   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1663:1742   */\n      tag_100\n      tag_56\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1627:1744   */\n    tag_99:\n        /* \"#utility.yul\":1776:1867   */\n      tag_101\n        /* \"#utility.yul\":1859:1866   */\n      dup6\n        /* \"#utility.yul\":1850:1856   */\n      dup3\n        /* \"#utility.yul\":1839:1848   */\n      dup7\n        /* \"#utility.yul\":1835:1857   */\n      add\n        /* \"#utility.yul\":1776:1867   */\n      tag_60\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1758:1867   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1554:1877   */\n      pop\n        /* \"#utility.yul\":1303:1884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1890:2013   */\n    tag_61:\n        /* \"#utility.yul\":1966:1972   */\n      0x00\n        /* \"#utility.yul\":2000:2005   */\n      dup2\n        /* \"#utility.yul\":1994:2006   */\n      mload\n        /* \"#utility.yul\":1984:2006   */\n      swap1\n      pop\n        /* \"#utility.yul\":1890:2013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2212   */\n    tag_62:\n        /* \"#utility.yul\":2127:2138   */\n      0x00\n        /* \"#utility.yul\":2161:2167   */\n      dup3\n        /* \"#utility.yul\":2156:2159   */\n      dup3\n        /* \"#utility.yul\":2149:2168   */\n      mstore\n        /* \"#utility.yul\":2201:2205   */\n      0x20\n        /* \"#utility.yul\":2196:2199   */\n      dup3\n        /* \"#utility.yul\":2192:2206   */\n      add\n        /* \"#utility.yul\":2177:2206   */\n      swap1\n      pop\n        /* \"#utility.yul\":2019:2212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2218:2359   */\n    tag_63:\n        /* \"#utility.yul\":2294:2298   */\n      0x00\n        /* \"#utility.yul\":2317:2320   */\n      dup2\n        /* \"#utility.yul\":2309:2320   */\n      swap1\n      pop\n        /* \"#utility.yul\":2347:2351   */\n      0x20\n        /* \"#utility.yul\":2342:2345   */\n      dup3\n        /* \"#utility.yul\":2338:2352   */\n      add\n        /* \"#utility.yul\":2330:2352   */\n      swap1\n      pop\n        /* \"#utility.yul\":2218:2359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2365:2463   */\n    tag_64:\n        /* \"#utility.yul\":2416:2422   */\n      0x00\n        /* \"#utility.yul\":2450:2455   */\n      dup2\n        /* \"#utility.yul\":2444:2456   */\n      mload\n        /* \"#utility.yul\":2434:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2365:2463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2469:2627   */\n    tag_65:\n        /* \"#utility.yul\":2542:2553   */\n      0x00\n        /* \"#utility.yul\":2576:2582   */\n      dup3\n        /* \"#utility.yul\":2571:2574   */\n      dup3\n        /* \"#utility.yul\":2564:2583   */\n      mstore\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2611:2614   */\n      dup3\n        /* \"#utility.yul\":2607:2621   */\n      add\n        /* \"#utility.yul\":2592:2621   */\n      swap1\n      pop\n        /* \"#utility.yul\":2469:2627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2633:2879   */\n    tag_66:\n        /* \"#utility.yul\":2714:2715   */\n      0x00\n        /* \"#utility.yul\":2724:2837   */\n    tag_108:\n        /* \"#utility.yul\":2738:2744   */\n      dup4\n        /* \"#utility.yul\":2735:2736   */\n      dup2\n        /* \"#utility.yul\":2732:2745   */\n      lt\n        /* \"#utility.yul\":2724:2837   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2823:2824   */\n      dup1\n        /* \"#utility.yul\":2818:2821   */\n      dup3\n        /* \"#utility.yul\":2814:2825   */\n      add\n        /* \"#utility.yul\":2808:2826   */\n      mload\n        /* \"#utility.yul\":2804:2805   */\n      dup2\n        /* \"#utility.yul\":2799:2802   */\n      dup5\n        /* \"#utility.yul\":2795:2806   */\n      add\n        /* \"#utility.yul\":2788:2827   */\n      mstore\n        /* \"#utility.yul\":2760:2762   */\n      0x20\n        /* \"#utility.yul\":2757:2758   */\n      dup2\n        /* \"#utility.yul\":2753:2763   */\n      add\n        /* \"#utility.yul\":2748:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2724:2837   */\n      jump(tag_108)\n    tag_110:\n        /* \"#utility.yul\":2871:2872   */\n      0x00\n        /* \"#utility.yul\":2862:2868   */\n      dup5\n        /* \"#utility.yul\":2857:2860   */\n      dup5\n        /* \"#utility.yul\":2853:2869   */\n      add\n        /* \"#utility.yul\":2846:2873   */\n      mstore\n        /* \"#utility.yul\":2695:2879   */\n      pop\n        /* \"#utility.yul\":2633:2879   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2987   */\n    tag_67:\n        /* \"#utility.yul\":2926:2932   */\n      0x00\n        /* \"#utility.yul\":2977:2979   */\n      0x1f\n        /* \"#utility.yul\":2973:2980   */\n      not\n        /* \"#utility.yul\":2968:2970   */\n      0x1f\n        /* \"#utility.yul\":2961:2966   */\n      dup4\n        /* \"#utility.yul\":2957:2971   */\n      add\n        /* \"#utility.yul\":2953:2981   */\n      and\n        /* \"#utility.yul\":2943:2981   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2993:3346   */\n    tag_68:\n        /* \"#utility.yul\":3069:3072   */\n      0x00\n        /* \"#utility.yul\":3097:3135   */\n      tag_113\n        /* \"#utility.yul\":3129:3134   */\n      dup3\n        /* \"#utility.yul\":3097:3135   */\n      tag_64\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3151:3211   */\n      tag_114\n        /* \"#utility.yul\":3204:3210   */\n      dup2\n        /* \"#utility.yul\":3199:3202   */\n      dup6\n        /* \"#utility.yul\":3151:3211   */\n      tag_65\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3144:3211   */\n      swap4\n      pop\n        /* \"#utility.yul\":3220:3285   */\n      tag_115\n        /* \"#utility.yul\":3278:3284   */\n      dup2\n        /* \"#utility.yul\":3273:3276   */\n      dup6\n        /* \"#utility.yul\":3266:3270   */\n      0x20\n        /* \"#utility.yul\":3259:3264   */\n      dup7\n        /* \"#utility.yul\":3255:3271   */\n      add\n        /* \"#utility.yul\":3220:3285   */\n      tag_66\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3310:3339   */\n      tag_116\n        /* \"#utility.yul\":3332:3338   */\n      dup2\n        /* \"#utility.yul\":3310:3339   */\n      tag_67\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3305:3308   */\n      dup5\n        /* \"#utility.yul\":3301:3340   */\n      add\n        /* \"#utility.yul\":3294:3340   */\n      swap2\n      pop\n        /* \"#utility.yul\":3073:3346   */\n      pop\n        /* \"#utility.yul\":2993:3346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3544   */\n    tag_69:\n        /* \"#utility.yul\":3439:3449   */\n      0x00\n        /* \"#utility.yul\":3474:3538   */\n      tag_118\n        /* \"#utility.yul\":3534:3537   */\n      dup4\n        /* \"#utility.yul\":3526:3532   */\n      dup4\n        /* \"#utility.yul\":3474:3538   */\n      tag_68\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3460:3538   */\n      swap1\n      pop\n        /* \"#utility.yul\":3352:3544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3550:3672   */\n    tag_70:\n        /* \"#utility.yul\":3629:3633   */\n      0x00\n        /* \"#utility.yul\":3661:3665   */\n      0x20\n        /* \"#utility.yul\":3656:3659   */\n      dup3\n        /* \"#utility.yul\":3652:3666   */\n      add\n        /* \"#utility.yul\":3644:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3550:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3704:4687   */\n    tag_71:\n        /* \"#utility.yul\":3841:3844   */\n      0x00\n        /* \"#utility.yul\":3870:3933   */\n      tag_121\n        /* \"#utility.yul\":3927:3932   */\n      dup3\n        /* \"#utility.yul\":3870:3933   */\n      tag_61\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3949:4044   */\n      tag_122\n        /* \"#utility.yul\":4037:4043   */\n      dup2\n        /* \"#utility.yul\":4032:4035   */\n      dup6\n        /* \"#utility.yul\":3949:4044   */\n      tag_62\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3942:4044   */\n      swap4\n      pop\n        /* \"#utility.yul\":4070:4073   */\n      dup4\n        /* \"#utility.yul\":4115:4119   */\n      0x20\n        /* \"#utility.yul\":4107:4113   */\n      dup3\n        /* \"#utility.yul\":4103:4120   */\n      mul\n        /* \"#utility.yul\":4098:4101   */\n      dup6\n        /* \"#utility.yul\":4094:4121   */\n      add\n        /* \"#utility.yul\":4145:4210   */\n      tag_123\n        /* \"#utility.yul\":4204:4209   */\n      dup6\n        /* \"#utility.yul\":4145:4210   */\n      tag_63\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4233:4240   */\n      dup1\n        /* \"#utility.yul\":4264:4265   */\n      0x00\n        /* \"#utility.yul\":4249:4642   */\n    tag_124:\n        /* \"#utility.yul\":4274:4280   */\n      dup6\n        /* \"#utility.yul\":4271:4272   */\n      dup2\n        /* \"#utility.yul\":4268:4281   */\n      lt\n        /* \"#utility.yul\":4249:4642   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4345:4354   */\n      dup5\n        /* \"#utility.yul\":4339:4343   */\n      dup5\n        /* \"#utility.yul\":4335:4355   */\n      sub\n        /* \"#utility.yul\":4330:4333   */\n      dup10\n        /* \"#utility.yul\":4323:4356   */\n      mstore\n        /* \"#utility.yul\":4396:4402   */\n      dup2\n        /* \"#utility.yul\":4390:4403   */\n      mload\n        /* \"#utility.yul\":4424:4506   */\n      tag_127\n        /* \"#utility.yul\":4501:4505   */\n      dup6\n        /* \"#utility.yul\":4486:4499   */\n      dup3\n        /* \"#utility.yul\":4424:4506   */\n      tag_69\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4416:4506   */\n      swap5\n      pop\n        /* \"#utility.yul\":4529:4598   */\n      tag_128\n        /* \"#utility.yul\":4591:4597   */\n      dup4\n        /* \"#utility.yul\":4529:4598   */\n      tag_70\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4519:4598   */\n      swap3\n      pop\n        /* \"#utility.yul\":4627:4631   */\n      0x20\n        /* \"#utility.yul\":4622:4625   */\n      dup11\n        /* \"#utility.yul\":4618:4632   */\n      add\n        /* \"#utility.yul\":4611:4632   */\n      swap10\n      pop\n        /* \"#utility.yul\":4309:4642   */\n      pop\n        /* \"#utility.yul\":4296:4297   */\n      0x01\n        /* \"#utility.yul\":4293:4294   */\n      dup2\n        /* \"#utility.yul\":4289:4298   */\n      add\n        /* \"#utility.yul\":4284:4298   */\n      swap1\n      pop\n        /* \"#utility.yul\":4249:4642   */\n      jump(tag_124)\n    tag_126:\n        /* \"#utility.yul\":4253:4267   */\n      pop\n        /* \"#utility.yul\":4658:4662   */\n      dup3\n        /* \"#utility.yul\":4651:4662   */\n      swap8\n      pop\n        /* \"#utility.yul\":4678:4681   */\n      dup8\n        /* \"#utility.yul\":4671:4681   */\n      swap6\n      pop\n        /* \"#utility.yul\":3846:4687   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3704:4687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4693:5102   */\n    tag_9:\n        /* \"#utility.yul\":4854:4858   */\n      0x00\n        /* \"#utility.yul\":4892:4894   */\n      0x20\n        /* \"#utility.yul\":4881:4890   */\n      dup3\n        /* \"#utility.yul\":4877:4895   */\n      add\n        /* \"#utility.yul\":4869:4895   */\n      swap1\n      pop\n        /* \"#utility.yul\":4941:4950   */\n      dup2\n        /* \"#utility.yul\":4935:4939   */\n      dup2\n        /* \"#utility.yul\":4931:4951   */\n      sub\n        /* \"#utility.yul\":4927:4928   */\n      0x00\n        /* \"#utility.yul\":4916:4925   */\n      dup4\n        /* \"#utility.yul\":4912:4929   */\n      add\n        /* \"#utility.yul\":4905:4952   */\n      mstore\n        /* \"#utility.yul\":4969:5095   */\n      tag_130\n        /* \"#utility.yul\":5090:5094   */\n      dup2\n        /* \"#utility.yul\":5081:5087   */\n      dup5\n        /* \"#utility.yul\":4969:5095   */\n      tag_71\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4961:5095   */\n      swap1\n      pop\n        /* \"#utility.yul\":4693:5102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5108:5288   */\n    tag_13:\n        /* \"#utility.yul\":5156:5233   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5153:5154   */\n      0x00\n        /* \"#utility.yul\":5146:5234   */\n      mstore\n        /* \"#utility.yul\":5253:5257   */\n      0x41\n        /* \"#utility.yul\":5250:5251   */\n      0x04\n        /* \"#utility.yul\":5243:5258   */\n      mstore\n        /* \"#utility.yul\":5277:5281   */\n      0x24\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5267:5282   */\n      revert\n        /* \"#utility.yul\":5294:5474   */\n    tag_22:\n        /* \"#utility.yul\":5342:5419   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5339:5340   */\n      0x00\n        /* \"#utility.yul\":5332:5420   */\n      mstore\n        /* \"#utility.yul\":5439:5443   */\n      0x32\n        /* \"#utility.yul\":5436:5437   */\n      0x04\n        /* \"#utility.yul\":5429:5444   */\n      mstore\n        /* \"#utility.yul\":5463:5467   */\n      0x24\n        /* \"#utility.yul\":5460:5461   */\n      0x00\n        /* \"#utility.yul\":5453:5468   */\n      revert\n        /* \"#utility.yul\":5480:5597   */\n    tag_72:\n        /* \"#utility.yul\":5589:5590   */\n      0x00\n        /* \"#utility.yul\":5586:5587   */\n      dup1\n        /* \"#utility.yul\":5579:5591   */\n      revert\n        /* \"#utility.yul\":5603:5720   */\n    tag_73:\n        /* \"#utility.yul\":5712:5713   */\n      0x00\n        /* \"#utility.yul\":5709:5710   */\n      dup1\n        /* \"#utility.yul\":5702:5714   */\n      revert\n        /* \"#utility.yul\":5726:5843   */\n    tag_74:\n        /* \"#utility.yul\":5835:5836   */\n      0x00\n        /* \"#utility.yul\":5832:5833   */\n      dup1\n        /* \"#utility.yul\":5825:5837   */\n      revert\n        /* \"#utility.yul\":5849:6573   */\n    tag_24:\n        /* \"#utility.yul\":5926:5930   */\n      0x00\n        /* \"#utility.yul\":5932:5938   */\n      dup1\n        /* \"#utility.yul\":5988:5999   */\n      dup4\n        /* \"#utility.yul\":5975:6000   */\n      calldataload\n        /* \"#utility.yul\":6088:6089   */\n      0x01\n        /* \"#utility.yul\":6082:6086   */\n      0x20\n        /* \"#utility.yul\":6078:6090   */\n      sub\n        /* \"#utility.yul\":6067:6075   */\n      dup5\n        /* \"#utility.yul\":6051:6065   */\n      calldatasize\n        /* \"#utility.yul\":6047:6076   */\n      sub\n        /* \"#utility.yul\":6043:6091   */\n      sub\n        /* \"#utility.yul\":6023:6041   */\n      dup2\n        /* \"#utility.yul\":6019:6092   */\n      slt\n        /* \"#utility.yul\":6009:6177   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6096:6175   */\n      tag_138\n      tag_72\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6009:6177   */\n    tag_137:\n        /* \"#utility.yul\":6208:6226   */\n      dup1\n        /* \"#utility.yul\":6198:6206   */\n      dup5\n        /* \"#utility.yul\":6194:6227   */\n      add\n        /* \"#utility.yul\":6186:6227   */\n      swap3\n      pop\n        /* \"#utility.yul\":6260:6264   */\n      dup3\n        /* \"#utility.yul\":6247:6265   */\n      calldataload\n        /* \"#utility.yul\":6237:6265   */\n      swap2\n      pop\n        /* \"#utility.yul\":6288:6306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6280:6286   */\n      dup3\n        /* \"#utility.yul\":6277:6307   */\n      gt\n        /* \"#utility.yul\":6274:6391   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":6310:6389   */\n      tag_140\n      tag_73\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6274:6391   */\n    tag_139:\n        /* \"#utility.yul\":6418:6420   */\n      0x20\n        /* \"#utility.yul\":6412:6416   */\n      dup4\n        /* \"#utility.yul\":6408:6421   */\n      add\n        /* \"#utility.yul\":6400:6421   */\n      swap3\n      pop\n        /* \"#utility.yul\":6475:6479   */\n      0x01\n        /* \"#utility.yul\":6467:6473   */\n      dup3\n        /* \"#utility.yul\":6463:6480   */\n      mul\n        /* \"#utility.yul\":6447:6461   */\n      calldatasize\n        /* \"#utility.yul\":6443:6481   */\n      sub\n        /* \"#utility.yul\":6437:6441   */\n      dup4\n        /* \"#utility.yul\":6433:6482   */\n      sgt\n        /* \"#utility.yul\":6430:6566   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":6485:6564   */\n      tag_142\n      tag_74\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6430:6566   */\n    tag_141:\n        /* \"#utility.yul\":5939:6573   */\n      pop\n        /* \"#utility.yul\":5849:6573   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6579:6748   */\n    tag_75:\n        /* \"#utility.yul\":6663:6674   */\n      0x00\n        /* \"#utility.yul\":6697:6703   */\n      dup3\n        /* \"#utility.yul\":6692:6695   */\n      dup3\n        /* \"#utility.yul\":6685:6704   */\n      mstore\n        /* \"#utility.yul\":6737:6741   */\n      0x20\n        /* \"#utility.yul\":6732:6735   */\n      dup3\n        /* \"#utility.yul\":6728:6742   */\n      add\n        /* \"#utility.yul\":6713:6742   */\n      swap1\n      pop\n        /* \"#utility.yul\":6579:6748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6754:6934   */\n    tag_76:\n        /* \"#utility.yul\":6894:6926   */\n      0x416464726573733a20696e76616c69642064656c65676174652063616c6c0000\n        /* \"#utility.yul\":6890:6891   */\n      0x00\n        /* \"#utility.yul\":6882:6888   */\n      dup3\n        /* \"#utility.yul\":6878:6892   */\n      add\n        /* \"#utility.yul\":6871:6927   */\n      mstore\n        /* \"#utility.yul\":6754:6934   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6940:7306   */\n    tag_77:\n        /* \"#utility.yul\":7082:7085   */\n      0x00\n        /* \"#utility.yul\":7103:7170   */\n      tag_146\n        /* \"#utility.yul\":7167:7169   */\n      0x1e\n        /* \"#utility.yul\":7162:7165   */\n      dup4\n        /* \"#utility.yul\":7103:7170   */\n      tag_75\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7096:7170   */\n      swap2\n      pop\n        /* \"#utility.yul\":7179:7272   */\n      tag_147\n        /* \"#utility.yul\":7268:7271   */\n      dup3\n        /* \"#utility.yul\":7179:7272   */\n      tag_76\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7297:7299   */\n      0x20\n        /* \"#utility.yul\":7292:7295   */\n      dup3\n        /* \"#utility.yul\":7288:7300   */\n      add\n        /* \"#utility.yul\":7281:7300   */\n      swap1\n      pop\n        /* \"#utility.yul\":6940:7306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7312:7731   */\n    tag_38:\n        /* \"#utility.yul\":7478:7482   */\n      0x00\n        /* \"#utility.yul\":7516:7518   */\n      0x20\n        /* \"#utility.yul\":7505:7514   */\n      dup3\n        /* \"#utility.yul\":7501:7519   */\n      add\n        /* \"#utility.yul\":7493:7519   */\n      swap1\n      pop\n        /* \"#utility.yul\":7565:7574   */\n      dup2\n        /* \"#utility.yul\":7559:7563   */\n      dup2\n        /* \"#utility.yul\":7555:7575   */\n      sub\n        /* \"#utility.yul\":7551:7552   */\n      0x00\n        /* \"#utility.yul\":7540:7549   */\n      dup4\n        /* \"#utility.yul\":7536:7553   */\n      add\n        /* \"#utility.yul\":7529:7576   */\n      mstore\n        /* \"#utility.yul\":7593:7724   */\n      tag_149\n        /* \"#utility.yul\":7719:7723   */\n      dup2\n        /* \"#utility.yul\":7593:7724   */\n      tag_77\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7585:7724   */\n      swap1\n      pop\n        /* \"#utility.yul\":7312:7731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7737:7884   */\n    tag_78:\n        /* \"#utility.yul\":7838:7849   */\n      0x00\n        /* \"#utility.yul\":7875:7878   */\n      dup2\n        /* \"#utility.yul\":7860:7878   */\n      swap1\n      pop\n        /* \"#utility.yul\":7737:7884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7890:8276   */\n    tag_79:\n        /* \"#utility.yul\":7994:7997   */\n      0x00\n        /* \"#utility.yul\":8022:8060   */\n      tag_152\n        /* \"#utility.yul\":8054:8059   */\n      dup3\n        /* \"#utility.yul\":8022:8060   */\n      tag_64\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":8076:8164   */\n      tag_153\n        /* \"#utility.yul\":8157:8163   */\n      dup2\n        /* \"#utility.yul\":8152:8155   */\n      dup6\n        /* \"#utility.yul\":8076:8164   */\n      tag_78\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":8069:8164   */\n      swap4\n      pop\n        /* \"#utility.yul\":8173:8238   */\n      tag_154\n        /* \"#utility.yul\":8231:8237   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup6\n        /* \"#utility.yul\":8219:8223   */\n      0x20\n        /* \"#utility.yul\":8212:8217   */\n      dup7\n        /* \"#utility.yul\":8208:8224   */\n      add\n        /* \"#utility.yul\":8173:8238   */\n      tag_66\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":8263:8269   */\n      dup1\n        /* \"#utility.yul\":8258:8261   */\n      dup5\n        /* \"#utility.yul\":8254:8270   */\n      add\n        /* \"#utility.yul\":8247:8270   */\n      swap2\n      pop\n        /* \"#utility.yul\":7998:8276   */\n      pop\n        /* \"#utility.yul\":7890:8276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8282:8553   */\n    tag_40:\n        /* \"#utility.yul\":8412:8415   */\n      0x00\n        /* \"#utility.yul\":8434:8527   */\n      tag_156\n        /* \"#utility.yul\":8523:8526   */\n      dup3\n        /* \"#utility.yul\":8514:8520   */\n      dup5\n        /* \"#utility.yul\":8434:8527   */\n      tag_79\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8427:8527   */\n      swap2\n      pop\n        /* \"#utility.yul\":8544:8547   */\n      dup2\n        /* \"#utility.yul\":8537:8547   */\n      swap1\n      pop\n        /* \"#utility.yul\":8282:8553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8559:8658   */\n    tag_80:\n        /* \"#utility.yul\":8611:8617   */\n      0x00\n        /* \"#utility.yul\":8645:8650   */\n      dup2\n        /* \"#utility.yul\":8639:8651   */\n      mload\n        /* \"#utility.yul\":8629:8651   */\n      swap1\n      pop\n        /* \"#utility.yul\":8559:8658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8664:9041   */\n    tag_81:\n        /* \"#utility.yul\":8752:8755   */\n      0x00\n        /* \"#utility.yul\":8780:8819   */\n      tag_159\n        /* \"#utility.yul\":8813:8818   */\n      dup3\n        /* \"#utility.yul\":8780:8819   */\n      tag_80\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8835:8906   */\n      tag_160\n        /* \"#utility.yul\":8899:8905   */\n      dup2\n        /* \"#utility.yul\":8894:8897   */\n      dup6\n        /* \"#utility.yul\":8835:8906   */\n      tag_75\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":8828:8906   */\n      swap4\n      pop\n        /* \"#utility.yul\":8915:8980   */\n      tag_161\n        /* \"#utility.yul\":8973:8979   */\n      dup2\n        /* \"#utility.yul\":8968:8971   */\n      dup6\n        /* \"#utility.yul\":8961:8965   */\n      0x20\n        /* \"#utility.yul\":8954:8959   */\n      dup7\n        /* \"#utility.yul\":8950:8966   */\n      add\n        /* \"#utility.yul\":8915:8980   */\n      tag_66\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":9005:9034   */\n      tag_162\n        /* \"#utility.yul\":9027:9033   */\n      dup2\n        /* \"#utility.yul\":9005:9034   */\n      tag_67\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":9000:9003   */\n      dup5\n        /* \"#utility.yul\":8996:9035   */\n      add\n        /* \"#utility.yul\":8989:9035   */\n      swap2\n      pop\n        /* \"#utility.yul\":8756:9041   */\n      pop\n        /* \"#utility.yul\":8664:9041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9047:9360   */\n    tag_53:\n        /* \"#utility.yul\":9160:9164   */\n      0x00\n        /* \"#utility.yul\":9198:9200   */\n      0x20\n        /* \"#utility.yul\":9187:9196   */\n      dup3\n        /* \"#utility.yul\":9183:9201   */\n      add\n        /* \"#utility.yul\":9175:9201   */\n      swap1\n      pop\n        /* \"#utility.yul\":9247:9256   */\n      dup2\n        /* \"#utility.yul\":9241:9245   */\n      dup2\n        /* \"#utility.yul\":9237:9257   */\n      sub\n        /* \"#utility.yul\":9233:9234   */\n      0x00\n        /* \"#utility.yul\":9222:9231   */\n      dup4\n        /* \"#utility.yul\":9218:9235   */\n      add\n        /* \"#utility.yul\":9211:9258   */\n      mstore\n        /* \"#utility.yul\":9275:9353   */\n      tag_164\n        /* \"#utility.yul\":9348:9352   */\n      dup2\n        /* \"#utility.yul\":9339:9345   */\n      dup5\n        /* \"#utility.yul\":9275:9353   */\n      tag_81\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":9267:9353   */\n      swap1\n      pop\n        /* \"#utility.yul\":9047:9360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220fc58656c3e5adf9fd2527231a8dbd00e570facc4bc8c35cfdd1b5d4b4880b93064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506107598061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063ac9650d81461002d575b5f80fd5b6100476004803603810190610042919061035a565b61005d565b60405161005491906104ea565b60405180910390f35b60608282905067ffffffffffffffff81111561007c5761007b61050a565b5b6040519080825280602002602001820160405280156100af57816020015b606081526020019060019003908161009a5790505b5090505f5b8383905081101561015a5761012f308585848181106100d6576100d5610537565b5b90506020028101906100e89190610570565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610161565b82828151811061014257610141610537565b5b602002602001018190525080806001019150506100b4565b5092915050565b606061018683836040518060600160405280602781526020016106fd6027913961018e565b905092915050565b606061019984610269565b80156101ab57506101a933610269565b155b6101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e19061062c565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16856040516102119190610684565b5f60405180830381855af49150503d805f8114610249576040519150601f19603f3d011682016040523d82523d5f602084013e61024e565b606091505b509150915061025e82828661028b565b925050509392505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561029b578290506102ea565b5f835111156102ad5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e191906106dc565b60405180910390fd5b9392505050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261031a576103196102f9565b5b8235905067ffffffffffffffff811115610337576103366102fd565b5b60208301915083602082028301111561035357610352610301565b5b9250929050565b5f80602083850312156103705761036f6102f1565b5b5f83013567ffffffffffffffff81111561038d5761038c6102f5565b5b61039985828601610305565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156104055780820151818401526020810190506103ea565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61042a826103ce565b61043481856103d8565b93506104448185602086016103e8565b61044d81610410565b840191505092915050565b5f6104638383610420565b905092915050565b5f602082019050919050565b5f610481826103a5565b61048b81856103af565b93508360208202850161049d856103bf565b805f5b858110156104d857848403895281516104b98582610458565b94506104c48361046b565b925060208a019950506001810190506104a0565b50829750879550505050505092915050565b5f6020820190508181035f8301526105028184610477565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f808335600160200384360303811261058c5761058b610564565b5b80840192508235915067ffffffffffffffff8211156105ae576105ad610568565b5b6020830192506001820236038313156105ca576105c961056c565b5b509250929050565b5f82825260208201905092915050565b7f416464726573733a20696e76616c69642064656c65676174652063616c6c00005f82015250565b5f610616601e836105d2565b9150610621826105e2565b602082019050919050565b5f6020820190508181035f8301526106438161060a565b9050919050565b5f81905092915050565b5f61065e826103ce565b610668818561064a565b93506106788185602086016103e8565b80840191505092915050565b5f61068f8284610654565b915081905092915050565b5f81519050919050565b5f6106ae8261069a565b6106b881856105d2565b93506106c88185602086016103e8565b6106d181610410565b840191505092915050565b5f6020820190508181035f8301526106f481846106a4565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fc58656c3e5adf9fd2527231a8dbd00e570facc4bc8c35cfdd1b5d4b4880b93064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x759 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C JUMPI PUSH2 0x7B PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH2 0x12F ADDRESS DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xD6 JUMPI PUSH2 0xD5 PUSH2 0x537 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x570 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x161 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x142 JUMPI PUSH2 0x141 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x186 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6FD PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x199 DUP5 PUSH2 0x269 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AB JUMPI POP PUSH2 0x1A9 CALLER PUSH2 0x269 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x249 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x25E DUP3 DUP3 DUP7 PUSH2 0x28B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x29B JUMPI DUP3 SWAP1 POP PUSH2 0x2EA JUMP JUMPDEST PUSH0 DUP4 MLOAD GT ISZERO PUSH2 0x2AD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x2F9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x337 JUMPI PUSH2 0x336 PUSH2 0x2FD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x352 PUSH2 0x301 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x2F1 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x2F5 JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP6 DUP3 DUP7 ADD PUSH2 0x305 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x405 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42A DUP3 PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x434 DUP2 DUP6 PUSH2 0x3D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x444 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x44D DUP2 PUSH2 0x410 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x463 DUP4 DUP4 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x481 DUP3 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x48B DUP2 DUP6 PUSH2 0x3AF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x49D DUP6 PUSH2 0x3BF JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4D8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x4B9 DUP6 DUP3 PUSH2 0x458 JUMP JUMPDEST SWAP5 POP PUSH2 0x4C4 DUP4 PUSH2 0x46B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x502 DUP2 DUP5 PUSH2 0x477 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x564 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x568 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x56C JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E76616C69642064656C65676174652063616C6C0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x616 PUSH1 0x1E DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x621 DUP3 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x643 DUP2 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65E DUP3 PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x668 DUP2 DUP6 PUSH2 0x64A JUMP JUMPDEST SWAP4 POP PUSH2 0x678 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x68F DUP3 DUP5 PUSH2 0x654 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AE DUP3 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x6B8 DUP2 DUP6 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 POP PUSH2 0x6C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x6D1 DUP2 PUSH2 0x410 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6F4 DUP2 DUP5 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220FC5865 PUSH13 0x3E5ADF9FD2527231A8DBD00E57 0xF 0xAC 0xC4 0xBC DUP13 CALLDATALOAD 0xCF 0xDD SHL TSTORE 0x4B BASEFEE DUP1 0xB9 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "307:751:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@functionDelegateCall_1113": {
									"entryPoint": 353,
									"id": 1113,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1154": {
									"entryPoint": 398,
									"id": 1154,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_891": {
									"entryPoint": 617,
									"id": 891,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@multicall_57": {
									"entryPoint": 93,
									"id": 57,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@verifyCallResult_1185": {
									"entryPoint": 651,
									"id": 1185,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9363:18",
										"nodeType": "YulBlock",
										"src": "0:9363:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "423:28:18",
													"nodeType": "YulBlock",
													"src": "423:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:18",
																		"nodeType": "YulLiteral",
																		"src": "440:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:18",
																		"nodeType": "YulLiteral",
																		"src": "443:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:18"
																},
																"nativeSrc": "433:12:18",
																"nodeType": "YulFunctionCall",
																"src": "433:12:18"
															},
															"nativeSrc": "433:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:18"
											},
											{
												"body": {
													"nativeSrc": "546:28:18",
													"nodeType": "YulBlock",
													"src": "546:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:18",
																		"nodeType": "YulLiteral",
																		"src": "563:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:18",
																		"nodeType": "YulLiteral",
																		"src": "566:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:18"
																},
																"nativeSrc": "556:12:18",
																"nodeType": "YulFunctionCall",
																"src": "556:12:18"
															},
															"nativeSrc": "556:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:18"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:18"
											},
											{
												"body": {
													"nativeSrc": "669:28:18",
													"nodeType": "YulBlock",
													"src": "669:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:18",
																		"nodeType": "YulLiteral",
																		"src": "686:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:18",
																		"nodeType": "YulLiteral",
																		"src": "689:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:18"
																},
																"nativeSrc": "679:12:18",
																"nodeType": "YulFunctionCall",
																"src": "679:12:18"
															},
															"nativeSrc": "679:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:18"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:18"
											},
											{
												"body": {
													"nativeSrc": "819:478:18",
													"nodeType": "YulBlock",
													"src": "819:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "868:83:18",
																"nodeType": "YulBlock",
																"src": "868:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "870:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "870:77:18"
																			},
																			"nativeSrc": "870:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "870:79:18"
																		},
																		"nativeSrc": "870:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "870:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "847:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "847:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "855:4:18",
																						"nodeType": "YulLiteral",
																						"src": "855:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "843:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "843:3:18"
																				},
																				"nativeSrc": "843:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "843:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "862:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "862:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "839:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:18"
																		},
																		"nativeSrc": "839:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "839:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "832:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:18"
																},
																"nativeSrc": "832:35:18",
																"nodeType": "YulFunctionCall",
																"src": "832:35:18"
															},
															"nativeSrc": "829:122:18",
															"nodeType": "YulIf",
															"src": "829:122:18"
														},
														{
															"nativeSrc": "960:30:18",
															"nodeType": "YulAssignment",
															"src": "960:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "983:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "983:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "970:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "970:12:18"
																},
																"nativeSrc": "970:20:18",
																"nodeType": "YulFunctionCall",
																"src": "970:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "960:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1033:83:18",
																"nodeType": "YulBlock",
																"src": "1033:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1035:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1035:77:18"
																			},
																			"nativeSrc": "1035:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1035:79:18"
																		},
																		"nativeSrc": "1035:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1005:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1005:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1013:18:18",
																		"nodeType": "YulLiteral",
																		"src": "1013:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1002:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1002:2:18"
																},
																"nativeSrc": "1002:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1002:30:18"
															},
															"nativeSrc": "999:117:18",
															"nodeType": "YulIf",
															"src": "999:117:18"
														},
														{
															"nativeSrc": "1125:29:18",
															"nodeType": "YulAssignment",
															"src": "1125:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1141:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1149:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1149:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1137:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1137:3:18"
																},
																"nativeSrc": "1137:17:18",
																"nodeType": "YulFunctionCall",
																"src": "1137:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1125:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1125:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1208:83:18",
																"nodeType": "YulBlock",
																"src": "1208:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1210:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1210:77:18"
																			},
																			"nativeSrc": "1210:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1210:79:18"
																		},
																		"nativeSrc": "1210:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1210:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1173:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "1173:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1187:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1187:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1195:4:18",
																						"nodeType": "YulLiteral",
																						"src": "1195:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1183:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1183:3:18"
																				},
																				"nativeSrc": "1183:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1183:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1169:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:18"
																		},
																		"nativeSrc": "1169:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1169:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1203:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1203:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1166:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1166:2:18"
																},
																"nativeSrc": "1166:41:18",
																"nodeType": "YulFunctionCall",
																"src": "1166:41:18"
															},
															"nativeSrc": "1163:128:18",
															"nodeType": "YulIf",
															"src": "1163:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "718:579:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "786:6:18",
														"nodeType": "YulTypedName",
														"src": "786:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "794:3:18",
														"nodeType": "YulTypedName",
														"src": "794:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "802:8:18",
														"nodeType": "YulTypedName",
														"src": "802:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "812:6:18",
														"nodeType": "YulTypedName",
														"src": "812:6:18",
														"type": ""
													}
												],
												"src": "718:579:18"
											},
											{
												"body": {
													"nativeSrc": "1415:469:18",
													"nodeType": "YulBlock",
													"src": "1415:469:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1461:83:18",
																"nodeType": "YulBlock",
																"src": "1461:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1463:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1463:77:18"
																			},
																			"nativeSrc": "1463:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1463:79:18"
																		},
																		"nativeSrc": "1463:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1436:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1436:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1445:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1445:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1432:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1432:3:18"
																		},
																		"nativeSrc": "1432:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1432:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1428:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:18"
																},
																"nativeSrc": "1428:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1428:32:18"
															},
															"nativeSrc": "1425:119:18",
															"nodeType": "YulIf",
															"src": "1425:119:18"
														},
														{
															"nativeSrc": "1554:323:18",
															"nodeType": "YulBlock",
															"src": "1554:323:18",
															"statements": [
																{
																	"nativeSrc": "1569:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1569:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1600:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1600:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1611:1:18",
																						"nodeType": "YulLiteral",
																						"src": "1611:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1596:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1596:3:18"
																				},
																				"nativeSrc": "1596:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1596:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1583:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "1583:12:18"
																		},
																		"nativeSrc": "1583:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1573:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1573:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1661:83:18",
																		"nodeType": "YulBlock",
																		"src": "1661:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1663:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "1663:77:18"
																					},
																					"nativeSrc": "1663:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1663:79:18"
																				},
																				"nativeSrc": "1663:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "1663:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1633:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1641:18:18",
																				"nodeType": "YulLiteral",
																				"src": "1641:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1630:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1630:2:18"
																		},
																		"nativeSrc": "1630:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:30:18"
																	},
																	"nativeSrc": "1627:117:18",
																	"nodeType": "YulIf",
																	"src": "1627:117:18"
																},
																{
																	"nativeSrc": "1758:109:18",
																	"nodeType": "YulAssignment",
																	"src": "1758:109:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1839:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1839:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1850:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1835:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1835:3:18"
																				},
																				"nativeSrc": "1835:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1859:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																			"nativeSrc": "1776:58:18",
																			"nodeType": "YulIdentifier",
																			"src": "1776:58:18"
																		},
																		"nativeSrc": "1776:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:91:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1758:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1758:6:18"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1766:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1766:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "1303:581:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1377:9:18",
														"nodeType": "YulTypedName",
														"src": "1377:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1388:7:18",
														"nodeType": "YulTypedName",
														"src": "1388:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1400:6:18",
														"nodeType": "YulTypedName",
														"src": "1400:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1408:6:18",
														"nodeType": "YulTypedName",
														"src": "1408:6:18",
														"type": ""
													}
												],
												"src": "1303:581:18"
											},
											{
												"body": {
													"nativeSrc": "1973:40:18",
													"nodeType": "YulBlock",
													"src": "1973:40:18",
													"statements": [
														{
															"nativeSrc": "1984:22:18",
															"nodeType": "YulAssignment",
															"src": "1984:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2000:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2000:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1994:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1994:5:18"
																},
																"nativeSrc": "1994:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1994:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1984:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1890:123:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1956:5:18",
														"nodeType": "YulTypedName",
														"src": "1956:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1966:6:18",
														"nodeType": "YulTypedName",
														"src": "1966:6:18",
														"type": ""
													}
												],
												"src": "1890:123:18"
											},
											{
												"body": {
													"nativeSrc": "2139:73:18",
													"nodeType": "YulBlock",
													"src": "2139:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2156:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2156:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2161:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2161:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2149:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:18"
																},
																"nativeSrc": "2149:19:18",
																"nodeType": "YulFunctionCall",
																"src": "2149:19:18"
															},
															"nativeSrc": "2149:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "2149:19:18"
														},
														{
															"nativeSrc": "2177:29:18",
															"nodeType": "YulAssignment",
															"src": "2177:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2196:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2196:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2201:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2201:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2192:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2192:3:18"
																},
																"nativeSrc": "2192:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2192:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2177:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "2177:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2019:193:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2111:3:18",
														"nodeType": "YulTypedName",
														"src": "2111:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2116:6:18",
														"nodeType": "YulTypedName",
														"src": "2116:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2127:11:18",
														"nodeType": "YulTypedName",
														"src": "2127:11:18",
														"type": ""
													}
												],
												"src": "2019:193:18"
											},
											{
												"body": {
													"nativeSrc": "2299:60:18",
													"nodeType": "YulBlock",
													"src": "2299:60:18",
													"statements": [
														{
															"nativeSrc": "2309:11:18",
															"nodeType": "YulAssignment",
															"src": "2309:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "2317:3:18",
																"nodeType": "YulIdentifier",
																"src": "2317:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2309:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2309:4:18"
																}
															]
														},
														{
															"nativeSrc": "2330:22:18",
															"nodeType": "YulAssignment",
															"src": "2330:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2342:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2342:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2347:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2347:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2338:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2338:3:18"
																},
																"nativeSrc": "2338:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2338:14:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2330:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2330:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "2218:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2286:3:18",
														"nodeType": "YulTypedName",
														"src": "2286:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2294:4:18",
														"nodeType": "YulTypedName",
														"src": "2294:4:18",
														"type": ""
													}
												],
												"src": "2218:141:18"
											},
											{
												"body": {
													"nativeSrc": "2423:40:18",
													"nodeType": "YulBlock",
													"src": "2423:40:18",
													"statements": [
														{
															"nativeSrc": "2434:22:18",
															"nodeType": "YulAssignment",
															"src": "2434:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2450:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2450:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2444:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2444:5:18"
																},
																"nativeSrc": "2444:12:18",
																"nodeType": "YulFunctionCall",
																"src": "2444:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2434:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "2365:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2406:5:18",
														"nodeType": "YulTypedName",
														"src": "2406:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2416:6:18",
														"nodeType": "YulTypedName",
														"src": "2416:6:18",
														"type": ""
													}
												],
												"src": "2365:98:18"
											},
											{
												"body": {
													"nativeSrc": "2554:73:18",
													"nodeType": "YulBlock",
													"src": "2554:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2571:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2571:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2576:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:18"
																},
																"nativeSrc": "2564:19:18",
																"nodeType": "YulFunctionCall",
																"src": "2564:19:18"
															},
															"nativeSrc": "2564:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "2564:19:18"
														},
														{
															"nativeSrc": "2592:29:18",
															"nodeType": "YulAssignment",
															"src": "2592:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2611:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2611:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2616:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2607:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:18"
																},
																"nativeSrc": "2607:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2607:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2592:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "2592:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
												"nativeSrc": "2469:158:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2526:3:18",
														"nodeType": "YulTypedName",
														"src": "2526:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2531:6:18",
														"nodeType": "YulTypedName",
														"src": "2531:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2542:11:18",
														"nodeType": "YulTypedName",
														"src": "2542:11:18",
														"type": ""
													}
												],
												"src": "2469:158:18"
											},
											{
												"body": {
													"nativeSrc": "2695:184:18",
													"nodeType": "YulBlock",
													"src": "2695:184:18",
													"statements": [
														{
															"nativeSrc": "2705:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2705:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2714:1:18",
																"nodeType": "YulLiteral",
																"src": "2714:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2709:1:18",
																	"nodeType": "YulTypedName",
																	"src": "2709:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2774:63:18",
																"nodeType": "YulBlock",
																"src": "2774:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2799:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "2799:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2804:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "2804:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2795:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "2795:3:18"
																					},
																					"nativeSrc": "2795:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2795:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2818:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2818:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2823:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "2823:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2814:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "2814:3:18"
																							},
																							"nativeSrc": "2814:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "2814:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2808:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2808:5:18"
																					},
																					"nativeSrc": "2808:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2808:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2788:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:18"
																			},
																			"nativeSrc": "2788:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2788:39:18"
																		},
																		"nativeSrc": "2788:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2788:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2735:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "2735:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2738:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2738:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2732:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2732:2:18"
																},
																"nativeSrc": "2732:13:18",
																"nodeType": "YulFunctionCall",
																"src": "2732:13:18"
															},
															"nativeSrc": "2724:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2746:19:18",
																"nodeType": "YulBlock",
																"src": "2746:19:18",
																"statements": [
																	{
																		"nativeSrc": "2748:15:18",
																		"nodeType": "YulAssignment",
																		"src": "2748:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2757:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "2757:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2760:2:18",
																					"nodeType": "YulLiteral",
																					"src": "2760:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2753:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2753:3:18"
																			},
																			"nativeSrc": "2753:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2753:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2748:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "2748:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2728:3:18",
																"nodeType": "YulBlock",
																"src": "2728:3:18",
																"statements": []
															},
															"src": "2724:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2857:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2857:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2862:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2853:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:18"
																		},
																		"nativeSrc": "2853:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2853:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2871:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2871:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2846:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:18"
																},
																"nativeSrc": "2846:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2846:27:18"
															},
															"nativeSrc": "2846:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2846:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2633:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2677:3:18",
														"nodeType": "YulTypedName",
														"src": "2677:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2682:3:18",
														"nodeType": "YulTypedName",
														"src": "2682:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2687:6:18",
														"nodeType": "YulTypedName",
														"src": "2687:6:18",
														"type": ""
													}
												],
												"src": "2633:246:18"
											},
											{
												"body": {
													"nativeSrc": "2933:54:18",
													"nodeType": "YulBlock",
													"src": "2933:54:18",
													"statements": [
														{
															"nativeSrc": "2943:38:18",
															"nodeType": "YulAssignment",
															"src": "2943:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2961:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2961:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2968:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2968:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2957:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:18"
																		},
																		"nativeSrc": "2957:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2957:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2977:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2973:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2973:3:18"
																		},
																		"nativeSrc": "2973:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2973:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2953:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:18"
																},
																"nativeSrc": "2953:28:18",
																"nodeType": "YulFunctionCall",
																"src": "2953:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2943:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2885:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2916:5:18",
														"nodeType": "YulTypedName",
														"src": "2916:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2926:6:18",
														"nodeType": "YulTypedName",
														"src": "2926:6:18",
														"type": ""
													}
												],
												"src": "2885:102:18"
											},
											{
												"body": {
													"nativeSrc": "3073:273:18",
													"nodeType": "YulBlock",
													"src": "3073:273:18",
													"statements": [
														{
															"nativeSrc": "3083:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3083:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3129:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3129:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "3097:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "3097:31:18"
																},
																"nativeSrc": "3097:38:18",
																"nodeType": "YulFunctionCall",
																"src": "3097:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3087:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3087:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3144:67:18",
															"nodeType": "YulAssignment",
															"src": "3144:67:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3199:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3199:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3204:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr",
																	"nativeSrc": "3151:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "3151:47:18"
																},
																"nativeSrc": "3151:60:18",
																"nodeType": "YulFunctionCall",
																"src": "3151:60:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3144:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3144:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3259:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3266:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3266:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3255:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:18"
																		},
																		"nativeSrc": "3255:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3255:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3273:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3273:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3278:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3278:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3220:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "3220:34:18"
																},
																"nativeSrc": "3220:65:18",
																"nodeType": "YulFunctionCall",
																"src": "3220:65:18"
															},
															"nativeSrc": "3220:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "3220:65:18"
														},
														{
															"nativeSrc": "3294:46:18",
															"nodeType": "YulAssignment",
															"src": "3294:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3305:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3305:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3332:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3310:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "3310:21:18"
																		},
																		"nativeSrc": "3310:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3301:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3301:3:18"
																},
																"nativeSrc": "3301:39:18",
																"nodeType": "YulFunctionCall",
																"src": "3301:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3294:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3294:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nativeSrc": "2993:353:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3054:5:18",
														"nodeType": "YulTypedName",
														"src": "3054:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3061:3:18",
														"nodeType": "YulTypedName",
														"src": "3061:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3069:3:18",
														"nodeType": "YulTypedName",
														"src": "3069:3:18",
														"type": ""
													}
												],
												"src": "2993:353:18"
											},
											{
												"body": {
													"nativeSrc": "3450:94:18",
													"nodeType": "YulBlock",
													"src": "3450:94:18",
													"statements": [
														{
															"nativeSrc": "3460:78:18",
															"nodeType": "YulAssignment",
															"src": "3460:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3526:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3526:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3534:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3534:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																	"nativeSrc": "3474:51:18",
																	"nodeType": "YulIdentifier",
																	"src": "3474:51:18"
																},
																"nativeSrc": "3474:64:18",
																"nodeType": "YulFunctionCall",
																"src": "3474:64:18"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3460:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "3460:10:18"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
												"nativeSrc": "3352:192:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3423:6:18",
														"nodeType": "YulTypedName",
														"src": "3423:6:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3431:3:18",
														"nodeType": "YulTypedName",
														"src": "3431:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3439:10:18",
														"nodeType": "YulTypedName",
														"src": "3439:10:18",
														"type": ""
													}
												],
												"src": "3352:192:18"
											},
											{
												"body": {
													"nativeSrc": "3634:38:18",
													"nodeType": "YulBlock",
													"src": "3634:38:18",
													"statements": [
														{
															"nativeSrc": "3644:22:18",
															"nodeType": "YulAssignment",
															"src": "3644:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3656:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3656:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3661:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3661:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3652:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3652:3:18"
																},
																"nativeSrc": "3652:14:18",
																"nodeType": "YulFunctionCall",
																"src": "3652:14:18"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3644:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3644:4:18"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3550:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3621:3:18",
														"nodeType": "YulTypedName",
														"src": "3621:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3629:4:18",
														"nodeType": "YulTypedName",
														"src": "3629:4:18",
														"type": ""
													}
												],
												"src": "3550:122:18"
											},
											{
												"body": {
													"nativeSrc": "3846:841:18",
													"nodeType": "YulBlock",
													"src": "3846:841:18",
													"statements": [
														{
															"nativeSrc": "3856:77:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3856:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3927:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3927:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3870:56:18",
																	"nodeType": "YulIdentifier",
																	"src": "3870:56:18"
																},
																"nativeSrc": "3870:63:18",
																"nodeType": "YulFunctionCall",
																"src": "3870:63:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3860:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3860:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3942:102:18",
															"nodeType": "YulAssignment",
															"src": "3942:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4032:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4032:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4037:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3949:82:18",
																	"nodeType": "YulIdentifier",
																	"src": "3949:82:18"
																},
																"nativeSrc": "3949:95:18",
																"nodeType": "YulFunctionCall",
																"src": "3949:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3942:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3942:3:18"
																}
															]
														},
														{
															"nativeSrc": "4053:20:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4053:20:18",
															"value": {
																"name": "pos",
																"nativeSrc": "4070:3:18",
																"nodeType": "YulIdentifier",
																"src": "4070:3:18"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "4057:9:18",
																	"nodeType": "YulTypedName",
																	"src": "4057:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4082:39:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4082:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4098:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4098:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4107:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4107:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4115:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4115:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4103:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:18"
																		},
																		"nativeSrc": "4103:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4103:17:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4094:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:18"
																},
																"nativeSrc": "4094:27:18",
																"nodeType": "YulFunctionCall",
																"src": "4094:27:18"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4086:4:18",
																	"nodeType": "YulTypedName",
																	"src": "4086:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4130:80:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4130:80:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4204:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4204:5:18"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4145:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "4145:58:18"
																},
																"nativeSrc": "4145:65:18",
																"nodeType": "YulFunctionCall",
																"src": "4145:65:18"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4134:7:18",
																	"nodeType": "YulTypedName",
																	"src": "4134:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4219:21:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:21:18",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4233:7:18",
																"nodeType": "YulIdentifier",
																"src": "4233:7:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4223:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4223:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4309:333:18",
																"nodeType": "YulBlock",
																"src": "4309:333:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4330:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4330:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "4339:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4339:4:18"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "4345:9:18",
																							"nodeType": "YulIdentifier",
																							"src": "4345:9:18"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "4335:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4335:3:18"
																					},
																					"nativeSrc": "4335:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4335:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4323:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4323:6:18"
																			},
																			"nativeSrc": "4323:33:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4323:33:18"
																		},
																		"nativeSrc": "4323:33:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4323:33:18"
																	},
																	{
																		"nativeSrc": "4369:34:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4369:34:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4396:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "4396:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4390:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4390:5:18"
																			},
																			"nativeSrc": "4390:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4390:13:18"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4373:13:18",
																				"nodeType": "YulTypedName",
																				"src": "4373:13:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4416:90:18",
																		"nodeType": "YulAssignment",
																		"src": "4416:90:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4486:13:18",
																					"nodeType": "YulIdentifier",
																					"src": "4486:13:18"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "4501:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "4501:4:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr",
																				"nativeSrc": "4424:61:18",
																				"nodeType": "YulIdentifier",
																				"src": "4424:61:18"
																			},
																			"nativeSrc": "4424:82:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4424:82:18"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "4416:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4416:4:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4519:79:18",
																		"nodeType": "YulAssignment",
																		"src": "4519:79:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4591:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "4591:6:18"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "4529:61:18",
																				"nodeType": "YulIdentifier",
																				"src": "4529:61:18"
																			},
																			"nativeSrc": "4529:69:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4529:69:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4519:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4519:6:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4611:21:18",
																		"nodeType": "YulAssignment",
																		"src": "4611:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4622:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4622:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4627:4:18",
																					"nodeType": "YulLiteral",
																					"src": "4627:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4618:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4618:3:18"
																			},
																			"nativeSrc": "4618:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4618:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4611:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4611:3:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4271:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "4271:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4274:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4274:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4268:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4268:2:18"
																},
																"nativeSrc": "4268:13:18",
																"nodeType": "YulFunctionCall",
																"src": "4268:13:18"
															},
															"nativeSrc": "4249:393:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4282:18:18",
																"nodeType": "YulBlock",
																"src": "4282:18:18",
																"statements": [
																	{
																		"nativeSrc": "4284:14:18",
																		"nodeType": "YulAssignment",
																		"src": "4284:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4293:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "4293:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4296:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4296:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4289:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4289:3:18"
																			},
																			"nativeSrc": "4289:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4289:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4284:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4284:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4253:14:18",
																"nodeType": "YulBlock",
																"src": "4253:14:18",
																"statements": [
																	{
																		"nativeSrc": "4255:10:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4255:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4264:1:18",
																			"nodeType": "YulLiteral",
																			"src": "4264:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4259:1:18",
																				"nodeType": "YulTypedName",
																				"src": "4259:1:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4249:393:18"
														},
														{
															"nativeSrc": "4651:11:18",
															"nodeType": "YulAssignment",
															"src": "4651:11:18",
															"value": {
																"name": "tail",
																"nativeSrc": "4658:4:18",
																"nodeType": "YulIdentifier",
																"src": "4658:4:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4651:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:18"
																}
															]
														},
														{
															"nativeSrc": "4671:10:18",
															"nodeType": "YulAssignment",
															"src": "4671:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "4678:3:18",
																"nodeType": "YulIdentifier",
																"src": "4678:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4671:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3704:983:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3825:5:18",
														"nodeType": "YulTypedName",
														"src": "3825:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3832:3:18",
														"nodeType": "YulTypedName",
														"src": "3832:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3841:3:18",
														"nodeType": "YulTypedName",
														"src": "3841:3:18",
														"type": ""
													}
												],
												"src": "3704:983:18"
											},
											{
												"body": {
													"nativeSrc": "4859:243:18",
													"nodeType": "YulBlock",
													"src": "4859:243:18",
													"statements": [
														{
															"nativeSrc": "4869:26:18",
															"nodeType": "YulAssignment",
															"src": "4869:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4881:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4881:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4877:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:18"
																},
																"nativeSrc": "4877:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4877:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4869:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4869:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4916:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4916:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4927:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4927:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4912:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:18"
																		},
																		"nativeSrc": "4912:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4912:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4935:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4935:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4941:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4941:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4931:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:18"
																		},
																		"nativeSrc": "4931:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4905:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:18"
																},
																"nativeSrc": "4905:47:18",
																"nodeType": "YulFunctionCall",
																"src": "4905:47:18"
															},
															"nativeSrc": "4905:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "4905:47:18"
														},
														{
															"nativeSrc": "4961:134:18",
															"nodeType": "YulAssignment",
															"src": "4961:134:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5081:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5081:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5090:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "5090:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4969:111:18",
																	"nodeType": "YulIdentifier",
																	"src": "4969:111:18"
																},
																"nativeSrc": "4969:126:18",
																"nodeType": "YulFunctionCall",
																"src": "4969:126:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4961:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4961:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4693:409:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4831:9:18",
														"nodeType": "YulTypedName",
														"src": "4831:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4843:6:18",
														"nodeType": "YulTypedName",
														"src": "4843:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4854:4:18",
														"nodeType": "YulTypedName",
														"src": "4854:4:18",
														"type": ""
													}
												],
												"src": "4693:409:18"
											},
											{
												"body": {
													"nativeSrc": "5136:152:18",
													"nodeType": "YulBlock",
													"src": "5136:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5153:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5153:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5156:77:18",
																		"nodeType": "YulLiteral",
																		"src": "5156:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5146:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:18"
																},
																"nativeSrc": "5146:88:18",
																"nodeType": "YulFunctionCall",
																"src": "5146:88:18"
															},
															"nativeSrc": "5146:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "5146:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5250:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5250:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5253:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5253:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5243:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:18"
																},
																"nativeSrc": "5243:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5243:15:18"
															},
															"nativeSrc": "5243:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5243:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5274:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5274:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5277:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5277:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5267:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:18"
																},
																"nativeSrc": "5267:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5267:15:18"
															},
															"nativeSrc": "5267:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5267:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5108:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5108:180:18"
											},
											{
												"body": {
													"nativeSrc": "5322:152:18",
													"nodeType": "YulBlock",
													"src": "5322:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5339:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5339:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5342:77:18",
																		"nodeType": "YulLiteral",
																		"src": "5342:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5332:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5332:6:18"
																},
																"nativeSrc": "5332:88:18",
																"nodeType": "YulFunctionCall",
																"src": "5332:88:18"
															},
															"nativeSrc": "5332:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "5332:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5436:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5436:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5439:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5439:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5429:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5429:6:18"
																},
																"nativeSrc": "5429:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5429:15:18"
															},
															"nativeSrc": "5429:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5429:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5460:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5460:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5463:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5463:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5453:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:18"
																},
																"nativeSrc": "5453:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5453:15:18"
															},
															"nativeSrc": "5453:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5453:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5294:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5294:180:18"
											},
											{
												"body": {
													"nativeSrc": "5569:28:18",
													"nodeType": "YulBlock",
													"src": "5569:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5586:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5586:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5589:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5589:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5579:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:18"
																},
																"nativeSrc": "5579:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5579:12:18"
															},
															"nativeSrc": "5579:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "5579:12:18"
														}
													]
												},
												"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
												"nativeSrc": "5480:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5480:117:18"
											},
											{
												"body": {
													"nativeSrc": "5692:28:18",
													"nodeType": "YulBlock",
													"src": "5692:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5709:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5709:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5712:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5702:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:18"
																},
																"nativeSrc": "5702:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5702:12:18"
															},
															"nativeSrc": "5702:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "5702:12:18"
														}
													]
												},
												"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
												"nativeSrc": "5603:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5603:117:18"
											},
											{
												"body": {
													"nativeSrc": "5815:28:18",
													"nodeType": "YulBlock",
													"src": "5815:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5832:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5832:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5835:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5835:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5825:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5825:6:18"
																},
																"nativeSrc": "5825:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5825:12:18"
															},
															"nativeSrc": "5825:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "5825:12:18"
														}
													]
												},
												"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
												"nativeSrc": "5726:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5726:117:18"
											},
											{
												"body": {
													"nativeSrc": "5939:634:18",
													"nodeType": "YulBlock",
													"src": "5939:634:18",
													"statements": [
														{
															"nativeSrc": "5949:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5949:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nativeSrc": "5988:11:18",
																		"nodeType": "YulIdentifier",
																		"src": "5988:11:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5975:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5975:12:18"
																},
																"nativeSrc": "5975:25:18",
																"nodeType": "YulFunctionCall",
																"src": "5975:25:18"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nativeSrc": "5953:18:18",
																	"nodeType": "YulTypedName",
																	"src": "5953:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6094:83:18",
																"nodeType": "YulBlock",
																"src": "6094:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad",
																				"nativeSrc": "6096:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6096:77:18"
																			},
																			"nativeSrc": "6096:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:79:18"
																		},
																		"nativeSrc": "6096:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6096:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nativeSrc": "6023:18:18",
																				"nodeType": "YulIdentifier",
																				"src": "6023:18:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nativeSrc": "6051:12:18",
																									"nodeType": "YulIdentifier",
																									"src": "6051:12:18"
																								},
																								"nativeSrc": "6051:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:14:18"
																							},
																							{
																								"name": "base_ref",
																								"nativeSrc": "6067:8:18",
																								"nodeType": "YulIdentifier",
																								"src": "6067:8:18"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6047:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6047:3:18"
																						},
																						"nativeSrc": "6047:29:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6047:29:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6082:4:18",
																								"nodeType": "YulLiteral",
																								"src": "6082:4:18",
																								"type": "",
																								"value": "0x20"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6088:1:18",
																								"nodeType": "YulLiteral",
																								"src": "6088:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6078:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6078:3:18"
																						},
																						"nativeSrc": "6078:12:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6078:12:18"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6043:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6043:3:18"
																				},
																				"nativeSrc": "6043:48:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6043:48:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6019:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6019:3:18"
																		},
																		"nativeSrc": "6019:73:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:73:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6012:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6012:6:18"
																},
																"nativeSrc": "6012:81:18",
																"nodeType": "YulFunctionCall",
																"src": "6012:81:18"
															},
															"nativeSrc": "6009:168:18",
															"nodeType": "YulIf",
															"src": "6009:168:18"
														},
														{
															"nativeSrc": "6186:41:18",
															"nodeType": "YulAssignment",
															"src": "6186:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nativeSrc": "6198:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "6198:8:18"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nativeSrc": "6208:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "6208:18:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6194:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6194:3:18"
																},
																"nativeSrc": "6194:33:18",
																"nodeType": "YulFunctionCall",
																"src": "6194:33:18"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "6186:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6186:4:18"
																}
															]
														},
														{
															"nativeSrc": "6237:28:18",
															"nodeType": "YulAssignment",
															"src": "6237:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "6260:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6260:4:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6247:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6247:12:18"
																},
																"nativeSrc": "6247:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6247:18:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6237:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6308:83:18",
																"nodeType": "YulBlock",
																"src": "6308:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a",
																				"nativeSrc": "6310:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6310:77:18"
																			},
																			"nativeSrc": "6310:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:79:18"
																		},
																		"nativeSrc": "6310:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6310:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6280:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6280:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6288:18:18",
																		"nodeType": "YulLiteral",
																		"src": "6288:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6277:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6277:2:18"
																},
																"nativeSrc": "6277:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6277:30:18"
															},
															"nativeSrc": "6274:117:18",
															"nodeType": "YulIf",
															"src": "6274:117:18"
														},
														{
															"nativeSrc": "6400:21:18",
															"nodeType": "YulAssignment",
															"src": "6400:21:18",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "6412:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6412:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6418:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6418:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6408:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6408:3:18"
																},
																"nativeSrc": "6408:13:18",
																"nodeType": "YulFunctionCall",
																"src": "6408:13:18"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "6400:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6400:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6483:83:18",
																"nodeType": "YulBlock",
																"src": "6483:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e",
																				"nativeSrc": "6485:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6485:77:18"
																			},
																			"nativeSrc": "6485:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6485:79:18"
																		},
																		"nativeSrc": "6485:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6485:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "6437:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6437:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nativeSrc": "6447:12:18",
																					"nodeType": "YulIdentifier",
																					"src": "6447:12:18"
																				},
																				"nativeSrc": "6447:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6447:14:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6467:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6467:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6475:4:18",
																						"nodeType": "YulLiteral",
																						"src": "6475:4:18",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6463:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6463:3:18"
																				},
																				"nativeSrc": "6463:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6463:17:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6443:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6443:3:18"
																		},
																		"nativeSrc": "6443:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6443:38:18"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nativeSrc": "6433:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6433:3:18"
																},
																"nativeSrc": "6433:49:18",
																"nodeType": "YulFunctionCall",
																"src": "6433:49:18"
															},
															"nativeSrc": "6430:136:18",
															"nodeType": "YulIf",
															"src": "6430:136:18"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nativeSrc": "5849:724:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nativeSrc": "5900:8:18",
														"nodeType": "YulTypedName",
														"src": "5900:8:18",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nativeSrc": "5910:11:18",
														"nodeType": "YulTypedName",
														"src": "5910:11:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nativeSrc": "5926:4:18",
														"nodeType": "YulTypedName",
														"src": "5926:4:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5932:6:18",
														"nodeType": "YulTypedName",
														"src": "5932:6:18",
														"type": ""
													}
												],
												"src": "5849:724:18"
											},
											{
												"body": {
													"nativeSrc": "6675:73:18",
													"nodeType": "YulBlock",
													"src": "6675:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6692:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6692:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6697:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6697:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6685:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:18"
																},
																"nativeSrc": "6685:19:18",
																"nodeType": "YulFunctionCall",
																"src": "6685:19:18"
															},
															"nativeSrc": "6685:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "6685:19:18"
														},
														{
															"nativeSrc": "6713:29:18",
															"nodeType": "YulAssignment",
															"src": "6713:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6732:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6732:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6737:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6737:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6728:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:18"
																},
																"nativeSrc": "6728:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6728:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6713:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "6713:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6579:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6647:3:18",
														"nodeType": "YulTypedName",
														"src": "6647:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6652:6:18",
														"nodeType": "YulTypedName",
														"src": "6652:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6663:11:18",
														"nodeType": "YulTypedName",
														"src": "6663:11:18",
														"type": ""
													}
												],
												"src": "6579:169:18"
											},
											{
												"body": {
													"nativeSrc": "6860:74:18",
													"nodeType": "YulBlock",
													"src": "6860:74:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6882:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6882:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6890:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6890:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6878:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:18"
																		},
																		"nativeSrc": "6878:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:14:18"
																	},
																	{
																		"hexValue": "416464726573733a20696e76616c69642064656c65676174652063616c6c",
																		"kind": "string",
																		"nativeSrc": "6894:32:18",
																		"nodeType": "YulLiteral",
																		"src": "6894:32:18",
																		"type": "",
																		"value": "Address: invalid delegate call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6871:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6871:6:18"
																},
																"nativeSrc": "6871:56:18",
																"nodeType": "YulFunctionCall",
																"src": "6871:56:18"
															},
															"nativeSrc": "6871:56:18",
															"nodeType": "YulExpressionStatement",
															"src": "6871:56:18"
														}
													]
												},
												"name": "store_literal_in_memory_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2",
												"nativeSrc": "6754:180:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6852:6:18",
														"nodeType": "YulTypedName",
														"src": "6852:6:18",
														"type": ""
													}
												],
												"src": "6754:180:18"
											},
											{
												"body": {
													"nativeSrc": "7086:220:18",
													"nodeType": "YulBlock",
													"src": "7086:220:18",
													"statements": [
														{
															"nativeSrc": "7096:74:18",
															"nodeType": "YulAssignment",
															"src": "7096:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7162:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7162:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7167:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7167:2:18",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7103:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "7103:58:18"
																},
																"nativeSrc": "7103:67:18",
																"nodeType": "YulFunctionCall",
																"src": "7103:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7096:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7268:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7268:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2",
																	"nativeSrc": "7179:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "7179:88:18"
																},
																"nativeSrc": "7179:93:18",
																"nodeType": "YulFunctionCall",
																"src": "7179:93:18"
															},
															"nativeSrc": "7179:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "7179:93:18"
														},
														{
															"nativeSrc": "7281:19:18",
															"nodeType": "YulAssignment",
															"src": "7281:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7292:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7292:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7297:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7297:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7288:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:18"
																},
																"nativeSrc": "7288:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7288:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7281:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7281:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6940:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7074:3:18",
														"nodeType": "YulTypedName",
														"src": "7074:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7082:3:18",
														"nodeType": "YulTypedName",
														"src": "7082:3:18",
														"type": ""
													}
												],
												"src": "6940:366:18"
											},
											{
												"body": {
													"nativeSrc": "7483:248:18",
													"nodeType": "YulBlock",
													"src": "7483:248:18",
													"statements": [
														{
															"nativeSrc": "7493:26:18",
															"nodeType": "YulAssignment",
															"src": "7493:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7505:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7505:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7516:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7516:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7501:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7501:3:18"
																},
																"nativeSrc": "7501:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7501:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7493:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7493:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7540:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7540:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7551:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7551:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7536:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:18"
																		},
																		"nativeSrc": "7536:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7559:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "7559:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7565:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7565:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7555:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:18"
																		},
																		"nativeSrc": "7555:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7555:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7529:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7529:6:18"
																},
																"nativeSrc": "7529:47:18",
																"nodeType": "YulFunctionCall",
																"src": "7529:47:18"
															},
															"nativeSrc": "7529:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "7529:47:18"
														},
														{
															"nativeSrc": "7585:139:18",
															"nodeType": "YulAssignment",
															"src": "7585:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7719:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7719:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7593:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "7593:124:18"
																},
																"nativeSrc": "7593:131:18",
																"nodeType": "YulFunctionCall",
																"src": "7593:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7585:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7585:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7312:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7463:9:18",
														"nodeType": "YulTypedName",
														"src": "7463:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7478:4:18",
														"nodeType": "YulTypedName",
														"src": "7478:4:18",
														"type": ""
													}
												],
												"src": "7312:419:18"
											},
											{
												"body": {
													"nativeSrc": "7850:34:18",
													"nodeType": "YulBlock",
													"src": "7850:34:18",
													"statements": [
														{
															"nativeSrc": "7860:18:18",
															"nodeType": "YulAssignment",
															"src": "7860:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "7875:3:18",
																"nodeType": "YulIdentifier",
																"src": "7875:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7860:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "7860:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7737:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7822:3:18",
														"nodeType": "YulTypedName",
														"src": "7822:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7827:6:18",
														"nodeType": "YulTypedName",
														"src": "7827:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7838:11:18",
														"nodeType": "YulTypedName",
														"src": "7838:11:18",
														"type": ""
													}
												],
												"src": "7737:147:18"
											},
											{
												"body": {
													"nativeSrc": "7998:278:18",
													"nodeType": "YulBlock",
													"src": "7998:278:18",
													"statements": [
														{
															"nativeSrc": "8008:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8008:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8054:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8022:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "8022:31:18"
																},
																"nativeSrc": "8022:38:18",
																"nodeType": "YulFunctionCall",
																"src": "8022:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8012:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8012:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8069:95:18",
															"nodeType": "YulAssignment",
															"src": "8069:95:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8152:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8152:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8157:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8157:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8076:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "8076:75:18"
																},
																"nativeSrc": "8076:88:18",
																"nodeType": "YulFunctionCall",
																"src": "8076:88:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8069:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8069:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8212:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8212:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8219:4:18",
																				"nodeType": "YulLiteral",
																				"src": "8219:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8208:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8208:3:18"
																		},
																		"nativeSrc": "8208:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8208:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8226:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8231:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8231:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8173:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "8173:34:18"
																},
																"nativeSrc": "8173:65:18",
																"nodeType": "YulFunctionCall",
																"src": "8173:65:18"
															},
															"nativeSrc": "8173:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "8173:65:18"
														},
														{
															"nativeSrc": "8247:23:18",
															"nodeType": "YulAssignment",
															"src": "8247:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8258:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8258:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8263:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8263:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8254:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8254:3:18"
																},
																"nativeSrc": "8254:16:18",
																"nodeType": "YulFunctionCall",
																"src": "8254:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8247:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7890:386:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7979:5:18",
														"nodeType": "YulTypedName",
														"src": "7979:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7986:3:18",
														"nodeType": "YulTypedName",
														"src": "7986:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7994:3:18",
														"nodeType": "YulTypedName",
														"src": "7994:3:18",
														"type": ""
													}
												],
												"src": "7890:386:18"
											},
											{
												"body": {
													"nativeSrc": "8416:137:18",
													"nodeType": "YulBlock",
													"src": "8416:137:18",
													"statements": [
														{
															"nativeSrc": "8427:100:18",
															"nodeType": "YulAssignment",
															"src": "8427:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8514:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8514:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8523:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8523:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8434:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "8434:79:18"
																},
																"nativeSrc": "8434:93:18",
																"nodeType": "YulFunctionCall",
																"src": "8434:93:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8427:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8427:3:18"
																}
															]
														},
														{
															"nativeSrc": "8537:10:18",
															"nodeType": "YulAssignment",
															"src": "8537:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "8544:3:18",
																"nodeType": "YulIdentifier",
																"src": "8544:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8537:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8537:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8282:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8395:3:18",
														"nodeType": "YulTypedName",
														"src": "8395:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8401:6:18",
														"nodeType": "YulTypedName",
														"src": "8401:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8412:3:18",
														"nodeType": "YulTypedName",
														"src": "8412:3:18",
														"type": ""
													}
												],
												"src": "8282:271:18"
											},
											{
												"body": {
													"nativeSrc": "8618:40:18",
													"nodeType": "YulBlock",
													"src": "8618:40:18",
													"statements": [
														{
															"nativeSrc": "8629:22:18",
															"nodeType": "YulAssignment",
															"src": "8629:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8645:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8645:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8639:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8639:5:18"
																},
																"nativeSrc": "8639:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8639:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8629:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8629:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "8559:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8601:5:18",
														"nodeType": "YulTypedName",
														"src": "8601:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8611:6:18",
														"nodeType": "YulTypedName",
														"src": "8611:6:18",
														"type": ""
													}
												],
												"src": "8559:99:18"
											},
											{
												"body": {
													"nativeSrc": "8756:285:18",
													"nodeType": "YulBlock",
													"src": "8756:285:18",
													"statements": [
														{
															"nativeSrc": "8766:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8766:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8813:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8813:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8780:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "8780:32:18"
																},
																"nativeSrc": "8780:39:18",
																"nodeType": "YulFunctionCall",
																"src": "8780:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8770:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8770:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8828:78:18",
															"nodeType": "YulAssignment",
															"src": "8828:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8894:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8894:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8899:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8899:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8835:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "8835:58:18"
																},
																"nativeSrc": "8835:71:18",
																"nodeType": "YulFunctionCall",
																"src": "8835:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8828:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8828:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8954:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8954:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8961:4:18",
																				"nodeType": "YulLiteral",
																				"src": "8961:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8950:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:18"
																		},
																		"nativeSrc": "8950:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8950:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8968:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8968:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8973:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8973:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8915:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "8915:34:18"
																},
																"nativeSrc": "8915:65:18",
																"nodeType": "YulFunctionCall",
																"src": "8915:65:18"
															},
															"nativeSrc": "8915:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "8915:65:18"
														},
														{
															"nativeSrc": "8989:46:18",
															"nodeType": "YulAssignment",
															"src": "8989:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9000:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9000:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9027:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9005:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "9005:21:18"
																		},
																		"nativeSrc": "9005:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9005:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8996:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8996:3:18"
																},
																"nativeSrc": "8996:39:18",
																"nodeType": "YulFunctionCall",
																"src": "8996:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8989:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8989:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8664:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8737:5:18",
														"nodeType": "YulTypedName",
														"src": "8737:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8744:3:18",
														"nodeType": "YulTypedName",
														"src": "8744:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8752:3:18",
														"nodeType": "YulTypedName",
														"src": "8752:3:18",
														"type": ""
													}
												],
												"src": "8664:377:18"
											},
											{
												"body": {
													"nativeSrc": "9165:195:18",
													"nodeType": "YulBlock",
													"src": "9165:195:18",
													"statements": [
														{
															"nativeSrc": "9175:26:18",
															"nodeType": "YulAssignment",
															"src": "9175:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9187:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9187:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9198:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9198:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9183:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:18"
																},
																"nativeSrc": "9183:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9183:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9175:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9175:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9222:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9222:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9233:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9233:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9218:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9218:3:18"
																		},
																		"nativeSrc": "9218:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9218:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9241:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "9241:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9247:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9247:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9237:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:18"
																		},
																		"nativeSrc": "9237:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9237:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9211:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:18"
																},
																"nativeSrc": "9211:47:18",
																"nodeType": "YulFunctionCall",
																"src": "9211:47:18"
															},
															"nativeSrc": "9211:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "9211:47:18"
														},
														{
															"nativeSrc": "9267:86:18",
															"nodeType": "YulAssignment",
															"src": "9267:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9339:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9339:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9348:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "9348:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9275:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "9275:63:18"
																},
																"nativeSrc": "9275:78:18",
																"nodeType": "YulFunctionCall",
																"src": "9275:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9267:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9267:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9047:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9137:9:18",
														"nodeType": "YulTypedName",
														"src": "9137:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9149:6:18",
														"nodeType": "YulTypedName",
														"src": "9149:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9160:4:18",
														"nodeType": "YulTypedName",
														"src": "9160:4:18",
														"type": ""
													}
												],
												"src": "9047:313:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: invalid delegate call\")\n\n    }\n\n    function abi_encode_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063ac9650d81461002d575b5f80fd5b6100476004803603810190610042919061035a565b61005d565b60405161005491906104ea565b60405180910390f35b60608282905067ffffffffffffffff81111561007c5761007b61050a565b5b6040519080825280602002602001820160405280156100af57816020015b606081526020019060019003908161009a5790505b5090505f5b8383905081101561015a5761012f308585848181106100d6576100d5610537565b5b90506020028101906100e89190610570565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610161565b82828151811061014257610141610537565b5b602002602001018190525080806001019150506100b4565b5092915050565b606061018683836040518060600160405280602781526020016106fd6027913961018e565b905092915050565b606061019984610269565b80156101ab57506101a933610269565b155b6101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e19061062c565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16856040516102119190610684565b5f60405180830381855af49150503d805f8114610249576040519150601f19603f3d011682016040523d82523d5f602084013e61024e565b606091505b509150915061025e82828661028b565b925050509392505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561029b578290506102ea565b5f835111156102ad5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e191906106dc565b60405180910390fd5b9392505050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261031a576103196102f9565b5b8235905067ffffffffffffffff811115610337576103366102fd565b5b60208301915083602082028301111561035357610352610301565b5b9250929050565b5f80602083850312156103705761036f6102f1565b5b5f83013567ffffffffffffffff81111561038d5761038c6102f5565b5b61039985828601610305565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156104055780820151818401526020810190506103ea565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61042a826103ce565b61043481856103d8565b93506104448185602086016103e8565b61044d81610410565b840191505092915050565b5f6104638383610420565b905092915050565b5f602082019050919050565b5f610481826103a5565b61048b81856103af565b93508360208202850161049d856103bf565b805f5b858110156104d857848403895281516104b98582610458565b94506104c48361046b565b925060208a019950506001810190506104a0565b50829750879550505050505092915050565b5f6020820190508181035f8301526105028184610477565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f80fd5b5f80fd5b5f80fd5b5f808335600160200384360303811261058c5761058b610564565b5b80840192508235915067ffffffffffffffff8211156105ae576105ad610568565b5b6020830192506001820236038313156105ca576105c961056c565b5b509250929050565b5f82825260208201905092915050565b7f416464726573733a20696e76616c69642064656c65676174652063616c6c00005f82015250565b5f610616601e836105d2565b9150610621826105e2565b602082019050919050565b5f6020820190508181035f8301526106438161060a565b9050919050565b5f81905092915050565b5f61065e826103ce565b610668818561064a565b93506106788185602086016103e8565b80840191505092915050565b5f61068f8284610654565b915081905092915050565b5f81519050919050565b5f6106ae8261069a565b6106b881856105d2565b93506106c88185602086016103e8565b6106d181610410565b840191505092915050565b5f6020820190508181035f8301526106f481846106a4565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fc58656c3e5adf9fd2527231a8dbd00e570facc4bc8c35cfdd1b5d4b4880b93064736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C JUMPI PUSH2 0x7B PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH2 0x12F ADDRESS DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xD6 JUMPI PUSH2 0xD5 PUSH2 0x537 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x570 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x161 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x142 JUMPI PUSH2 0x141 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x186 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6FD PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x18E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x199 DUP5 PUSH2 0x269 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AB JUMPI POP PUSH2 0x1A9 CALLER PUSH2 0x269 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x249 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x25E DUP3 DUP3 DUP7 PUSH2 0x28B JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x29B JUMPI DUP3 SWAP1 POP PUSH2 0x2EA JUMP JUMPDEST PUSH0 DUP4 MLOAD GT ISZERO PUSH2 0x2AD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x2F9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x337 JUMPI PUSH2 0x336 PUSH2 0x2FD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x353 JUMPI PUSH2 0x352 PUSH2 0x301 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x370 JUMPI PUSH2 0x36F PUSH2 0x2F1 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38D JUMPI PUSH2 0x38C PUSH2 0x2F5 JUMP JUMPDEST JUMPDEST PUSH2 0x399 DUP6 DUP3 DUP7 ADD PUSH2 0x305 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x405 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42A DUP3 PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x434 DUP2 DUP6 PUSH2 0x3D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x444 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x44D DUP2 PUSH2 0x410 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x463 DUP4 DUP4 PUSH2 0x420 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x481 DUP3 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x48B DUP2 DUP6 PUSH2 0x3AF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x49D DUP6 PUSH2 0x3BF JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4D8 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x4B9 DUP6 DUP3 PUSH2 0x458 JUMP JUMPDEST SWAP5 POP PUSH2 0x4C4 DUP4 PUSH2 0x46B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x502 DUP2 DUP5 PUSH2 0x477 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x564 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x568 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x56C JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E76616C69642064656C65676174652063616C6C0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x616 PUSH1 0x1E DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x621 DUP3 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x643 DUP2 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x65E DUP3 PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x668 DUP2 DUP6 PUSH2 0x64A JUMP JUMPDEST SWAP4 POP PUSH2 0x678 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x68F DUP3 DUP5 PUSH2 0x654 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AE DUP3 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x6B8 DUP2 DUP6 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 POP PUSH2 0x6C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x6D1 DUP2 PUSH2 0x410 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6F4 DUP2 DUP5 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220FC5865 PUSH13 0x3E5ADF9FD2527231A8DBD00E57 0xF 0xAC 0xC4 0xBC DUP13 CALLDATALOAD 0xCF 0xDD SHL TSTORE 0x4B BASEFEE DUP1 0xB9 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "307:751:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:323;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;809:22;866:4;;:11;;854:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:34;;894:9;889:134;913:4;;:11;;909:1;:15;889:134;;;959:52;996:4;1003;;1008:1;1003:7;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;959:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;:52::i;:::-;946:7;954:1;946:10;;;;;;;;:::i;:::-;;;;;;;:65;;;;926:3;;;;;;;889:134;;;;732:323;;;;:::o;3633:200:11:-;3716:12;3748:77;3769:6;3777:4;3748:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;3741:84;;3633:200;;;;:::o;3990:415::-;4135:12;4168:18;4179:6;4168:10;:18::i;:::-;:45;;;;;4191:22;4202:10;4191;:22::i;:::-;4190:23;4168:45;4160:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4262:12;4276:23;4303:6;:19;;4323:4;4303:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:67;;;;4346:51;4363:7;4372:10;4384:12;4346:16;:51::i;:::-;4339:58;;;;3990:415;;;;;:::o;595:115::-;655:4;701:1;679:7;:19;;;:23;672:30;;595:115;;;:::o;4474:712::-;4624:12;4653:7;4649:530;;;4684:10;4677:17;;;;4649:530;4818:1;4798:10;:17;:21;4794:374;;;4996:10;4990:17;5057:15;5044:10;5040:2;5036:19;5029:44;4794:374;5139:12;5132:20;;;;;;;;;;;:::i;:::-;;;;;;;;4474:712;;;;;;:::o;88:117:18:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;718:579;802:8;812:6;862:3;855:4;847:6;843:17;839:27;829:122;;870:79;;:::i;:::-;829:122;983:6;970:20;960:30;;1013:18;1005:6;1002:30;999:117;;;1035:79;;:::i;:::-;999:117;1149:4;1141:6;1137:17;1125:29;;1203:3;1195:4;1187:6;1183:17;1173:8;1169:32;1166:41;1163:128;;;1210:79;;:::i;:::-;1163:128;718:579;;;;;:::o;1303:581::-;1400:6;1408;1457:2;1445:9;1436:7;1432:23;1428:32;1425:119;;;1463:79;;:::i;:::-;1425:119;1611:1;1600:9;1596:17;1583:31;1641:18;1633:6;1630:30;1627:117;;;1663:79;;:::i;:::-;1627:117;1776:91;1859:7;1850:6;1839:9;1835:22;1776:91;:::i;:::-;1758:109;;;;1554:323;1303:581;;;;;:::o;1890:123::-;1966:6;2000:5;1994:12;1984:22;;1890:123;;;:::o;2019:193::-;2127:11;2161:6;2156:3;2149:19;2201:4;2196:3;2192:14;2177:29;;2019:193;;;;:::o;2218:141::-;2294:4;2317:3;2309:11;;2347:4;2342:3;2338:14;2330:22;;2218:141;;;:::o;2365:98::-;2416:6;2450:5;2444:12;2434:22;;2365:98;;;:::o;2469:158::-;2542:11;2576:6;2571:3;2564:19;2616:4;2611:3;2607:14;2592:29;;2469:158;;;;:::o;2633:246::-;2714:1;2724:113;2738:6;2735:1;2732:13;2724:113;;;2823:1;2818:3;2814:11;2808:18;2804:1;2799:3;2795:11;2788:39;2760:2;2757:1;2753:10;2748:15;;2724:113;;;2871:1;2862:6;2857:3;2853:16;2846:27;2695:184;2633:246;;;:::o;2885:102::-;2926:6;2977:2;2973:7;2968:2;2961:5;2957:14;2953:28;2943:38;;2885:102;;;:::o;2993:353::-;3069:3;3097:38;3129:5;3097:38;:::i;:::-;3151:60;3204:6;3199:3;3151:60;:::i;:::-;3144:67;;3220:65;3278:6;3273:3;3266:4;3259:5;3255:16;3220:65;:::i;:::-;3310:29;3332:6;3310:29;:::i;:::-;3305:3;3301:39;3294:46;;3073:273;2993:353;;;;:::o;3352:192::-;3439:10;3474:64;3534:3;3526:6;3474:64;:::i;:::-;3460:78;;3352:192;;;;:::o;3550:122::-;3629:4;3661;3656:3;3652:14;3644:22;;3550:122;;;:::o;3704:983::-;3841:3;3870:63;3927:5;3870:63;:::i;:::-;3949:95;4037:6;4032:3;3949:95;:::i;:::-;3942:102;;4070:3;4115:4;4107:6;4103:17;4098:3;4094:27;4145:65;4204:5;4145:65;:::i;:::-;4233:7;4264:1;4249:393;4274:6;4271:1;4268:13;4249:393;;;4345:9;4339:4;4335:20;4330:3;4323:33;4396:6;4390:13;4424:82;4501:4;4486:13;4424:82;:::i;:::-;4416:90;;4529:69;4591:6;4529:69;:::i;:::-;4519:79;;4627:4;4622:3;4618:14;4611:21;;4309:333;4296:1;4293;4289:9;4284:14;;4249:393;;;4253:14;4658:4;4651:11;;4678:3;4671:10;;3846:841;;;;;3704:983;;;;:::o;4693:409::-;4854:4;4892:2;4881:9;4877:18;4869:26;;4941:9;4935:4;4931:20;4927:1;4916:9;4912:17;4905:47;4969:126;5090:4;5081:6;4969:126;:::i;:::-;4961:134;;4693:409;;;;:::o;5108:180::-;5156:77;5153:1;5146:88;5253:4;5250:1;5243:15;5277:4;5274:1;5267:15;5294:180;5342:77;5339:1;5332:88;5439:4;5436:1;5429:15;5463:4;5460:1;5453:15;5480:117;5589:1;5586;5579:12;5603:117;5712:1;5709;5702:12;5726:117;5835:1;5832;5825:12;5849:724;5926:4;5932:6;5988:11;5975:25;6088:1;6082:4;6078:12;6067:8;6051:14;6047:29;6043:48;6023:18;6019:73;6009:168;;6096:79;;:::i;:::-;6009:168;6208:18;6198:8;6194:33;6186:41;;6260:4;6247:18;6237:28;;6288:18;6280:6;6277:30;6274:117;;;6310:79;;:::i;:::-;6274:117;6418:2;6412:4;6408:13;6400:21;;6475:4;6467:6;6463:17;6447:14;6443:38;6437:4;6433:49;6430:136;;;6485:79;;:::i;:::-;6430:136;5939:634;5849:724;;;;;:::o;6579:169::-;6663:11;6697:6;6692:3;6685:19;6737:4;6732:3;6728:14;6713:29;;6579:169;;;;:::o;6754:180::-;6894:32;6890:1;6882:6;6878:14;6871:56;6754:180;:::o;6940:366::-;7082:3;7103:67;7167:2;7162:3;7103:67;:::i;:::-;7096:74;;7179:93;7268:3;7179:93;:::i;:::-;7297:2;7292:3;7288:12;7281:19;;6940:366;;;:::o;7312:419::-;7478:4;7516:2;7505:9;7501:18;7493:26;;7565:9;7559:4;7555:20;7551:1;7540:9;7536:17;7529:47;7593:131;7719:4;7593:131;:::i;:::-;7585:139;;7312:419;;;:::o;7737:147::-;7838:11;7875:3;7860:18;;7737:147;;;;:::o;7890:386::-;7994:3;8022:38;8054:5;8022:38;:::i;:::-;8076:88;8157:6;8152:3;8076:88;:::i;:::-;8069:95;;8173:65;8231:6;8226:3;8219:4;8212:5;8208:16;8173:65;:::i;:::-;8263:6;8258:3;8254:16;8247:23;;7998:278;7890:386;;;;:::o;8282:271::-;8412:3;8434:93;8523:3;8514:6;8434:93;:::i;:::-;8427:100;;8544:3;8537:10;;8282:271;;;;:::o;8559:99::-;8611:6;8645:5;8639:12;8629:22;;8559:99;;;:::o;8664:377::-;8752:3;8780:39;8813:5;8780:39;:::i;:::-;8835:71;8899:6;8894:3;8835:71;:::i;:::-;8828:78;;8915:65;8973:6;8968:3;8961:4;8954:5;8950:16;8915:65;:::i;:::-;9005:29;9027:6;9005:29;:::i;:::-;9000:3;8996:39;8989:46;;8756:285;8664:377;;;;:::o;9047:313::-;9160:4;9198:2;9187:9;9183:18;9175:26;;9247:9;9241:4;9237:20;9233:1;9222:9;9218:17;9211:47;9275:78;9348:4;9339:6;9275:78;:::i;:::-;9267:86;;9047:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "376200",
								"executionCost": "409",
								"totalCost": "376609"
							},
							"external": {
								"multicall(bytes[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 1058,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc58656c3e5adf9fd2527231a8dbd00e570facc4bc8c35cfdd1b5d4b4880b93064736f6c63430008180033",
									".code": [
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "AC9650D8"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 1058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 1055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 866,
											"end": 870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 866,
											"end": 870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 866,
											"end": 877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 866,
											"end": 877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 854,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 854,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 844,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 844,
											"end": 878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 913,
											"end": 917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 913,
											"end": 917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 913,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 924,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 996,
											"end": 1000,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1003,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1003,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1003,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 959,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 946,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 946,
											"end": 1011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 946,
											"end": 1011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 946,
											"end": 1011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 946,
											"end": 1011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 926,
											"end": 929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 889,
											"end": 1023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 1055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3633,
											"end": 3833,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3633,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3716,
											"end": 3728,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH data",
											"source": 11,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "CODECOPY",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3748,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3748,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3833,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3833,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4135,
											"end": 4147,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4168,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4202,
											"end": 4212,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4191,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4191,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4191,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 4168,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4160,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4160,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4262,
											"end": 4274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4299,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4303,
											"end": 4322,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4323,
											"end": 4327,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4363,
											"end": 4370,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4372,
											"end": 4382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4384,
											"end": 4396,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 4346,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4346,
											"end": 4397,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4339,
											"end": 4397,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4339,
											"end": 4397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4339,
											"end": 4397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4339,
											"end": 4397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 595,
											"end": 710,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 595,
											"end": 710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 655,
											"end": 659,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 679,
											"end": 686,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 679,
											"end": 698,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 679,
											"end": 698,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 679,
											"end": 698,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 679,
											"end": 702,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 672,
											"end": 702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 672,
											"end": 702,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 595,
											"end": 710,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 595,
											"end": 710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 595,
											"end": 710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 595,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4624,
											"end": 4636,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4653,
											"end": 4660,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 5179,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 4649,
											"end": 5179,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4649,
											"end": 5179,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 4649,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4815,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4819,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 5168,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4794,
											"end": 5168,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 5006,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5007,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5044,
											"end": 5054,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5040,
											"end": 5042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5029,
											"end": 5073,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 5168,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4794,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5132,
											"end": 5152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5152,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 5186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 802,
											"end": 810,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 862,
											"end": 865,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 855,
											"end": 859,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 847,
											"end": 853,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 843,
											"end": 860,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 839,
											"end": 866,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 829,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 829,
											"end": 951,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 870,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 870,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 870,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 870,
											"end": 949,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 870,
											"end": 949,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 829,
											"end": 951,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 829,
											"end": 951,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 983,
											"end": 989,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 970,
											"end": 990,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 960,
											"end": 990,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 960,
											"end": 990,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1002,
											"end": 1032,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 999,
											"end": 1116,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 999,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 999,
											"end": 1116,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1035,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1035,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1035,
											"end": 1114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1035,
											"end": 1114,
											"name": "tag",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1035,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 999,
											"end": 1116,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 999,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1147,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1137,
											"end": 1154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1203,
											"end": 1206,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1195,
											"end": 1199,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1169,
											"end": 1201,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1166,
											"end": 1207,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1291,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 1163,
											"end": 1291,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1210,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1163,
											"end": 1291,
											"name": "tag",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 1163,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 718,
											"end": 1297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1432,
											"end": 1455,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1460,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1463,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 1463,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 1425,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1596,
											"end": 1613,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1583,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1641,
											"end": 1659,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1639,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1630,
											"end": 1660,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1663,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 1627,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1776,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 1859,
											"end": 1866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1835,
											"end": 1857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1776,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1776,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1776,
											"end": 1867,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 1776,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1758,
											"end": 1867,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1758,
											"end": 1867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1758,
											"end": 1867,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1758,
											"end": 1867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1554,
											"end": 1877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1303,
											"end": 1884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1890,
											"end": 2013,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 1890,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1994,
											"end": 2006,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1984,
											"end": 2006,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1984,
											"end": 2006,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1890,
											"end": 2013,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1890,
											"end": 2013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1890,
											"end": 2013,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1890,
											"end": 2013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2138,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2156,
											"end": 2159,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2149,
											"end": 2168,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2201,
											"end": 2205,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2199,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2192,
											"end": 2206,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2309,
											"end": 2320,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2309,
											"end": 2320,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2342,
											"end": 2345,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2338,
											"end": 2352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2330,
											"end": 2352,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2330,
											"end": 2352,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2463,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2434,
											"end": 2456,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2434,
											"end": 2456,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2463,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2463,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2365,
											"end": 2463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2469,
											"end": 2627,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 2469,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2542,
											"end": 2553,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2571,
											"end": 2574,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2583,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2614,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2607,
											"end": 2621,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2592,
											"end": 2621,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2592,
											"end": 2621,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2469,
											"end": 2627,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2469,
											"end": 2627,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2469,
											"end": 2627,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2469,
											"end": 2627,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2469,
											"end": 2627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2879,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 2633,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2714,
											"end": 2715,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2738,
											"end": 2744,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2736,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2732,
											"end": 2745,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2818,
											"end": 2821,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2814,
											"end": 2825,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2826,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2799,
											"end": 2802,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2788,
											"end": 2827,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2760,
											"end": 2762,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2753,
											"end": 2763,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2748,
											"end": 2763,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2748,
											"end": 2763,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 2724,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2857,
											"end": 2860,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2853,
											"end": 2869,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2846,
											"end": 2873,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2695,
											"end": 2879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2633,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2973,
											"end": 2980,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2970,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2961,
											"end": 2966,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2953,
											"end": 2981,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 2981,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 2981,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2885,
											"end": 2987,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2885,
											"end": 2987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2993,
											"end": 3346,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 2993,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3069,
											"end": 3072,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3097,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3097,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3097,
											"end": 3135,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 3097,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3151,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3199,
											"end": 3202,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3151,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 3151,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3151,
											"end": 3211,
											"name": "tag",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 3151,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3144,
											"end": 3211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3266,
											"end": 3270,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 3220,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3285,
											"name": "tag",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 3220,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3310,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3310,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 3310,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3310,
											"end": 3339,
											"name": "tag",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 3310,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3305,
											"end": 3308,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3301,
											"end": 3340,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3294,
											"end": 3340,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3294,
											"end": 3340,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3073,
											"end": 3346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2993,
											"end": 3346,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2993,
											"end": 3346,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2993,
											"end": 3346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2993,
											"end": 3346,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2993,
											"end": 3346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3352,
											"end": 3544,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 3352,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3439,
											"end": 3449,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 3534,
											"end": 3537,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3474,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 3474,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3474,
											"end": 3538,
											"name": "tag",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 3474,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3460,
											"end": 3538,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3460,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3352,
											"end": 3544,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3352,
											"end": 3544,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3352,
											"end": 3544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3352,
											"end": 3544,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3352,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3550,
											"end": 3672,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 3550,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3629,
											"end": 3633,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3659,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3644,
											"end": 3666,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3644,
											"end": 3666,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3550,
											"end": 3672,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3550,
											"end": 3672,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3550,
											"end": 3672,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3550,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3704,
											"end": 4687,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 3704,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3841,
											"end": 3844,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3870,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 3870,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3870,
											"end": 3933,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 3870,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3949,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4032,
											"end": 4035,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3949,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 3949,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3949,
											"end": 4044,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 3949,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3942,
											"end": 4044,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3942,
											"end": 4044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4070,
											"end": 4073,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4115,
											"end": 4119,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4113,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4103,
											"end": 4120,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 4098,
											"end": 4101,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4094,
											"end": 4121,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4145,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4145,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 4145,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4145,
											"end": 4210,
											"name": "tag",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 4145,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4233,
											"end": 4240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4264,
											"end": 4265,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4274,
											"end": 4280,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4271,
											"end": 4272,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4268,
											"end": 4281,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4345,
											"end": 4354,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4339,
											"end": 4343,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4335,
											"end": 4355,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4330,
											"end": 4333,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4356,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4390,
											"end": 4403,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4424,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 4501,
											"end": 4505,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4424,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 4424,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4424,
											"end": 4506,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 4424,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4416,
											"end": 4506,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4416,
											"end": 4506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 4591,
											"end": 4597,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 4529,
											"end": 4598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4598,
											"name": "tag",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 4529,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4519,
											"end": 4598,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4519,
											"end": 4598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 4618,
											"end": 4632,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "SWAP10",
											"source": 18
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4309,
											"end": 4642,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4293,
											"end": 4294,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 4249,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4253,
											"end": 4267,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4678,
											"end": 4681,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4671,
											"end": 4681,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4671,
											"end": 4681,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3846,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3846,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3846,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3846,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3846,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3704,
											"end": 4687,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3704,
											"end": 4687,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3704,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3704,
											"end": 4687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3704,
											"end": 4687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4693,
											"end": 5102,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 4693,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4854,
											"end": 4858,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4890,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4869,
											"end": 4895,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4869,
											"end": 4895,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4941,
											"end": 4950,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4931,
											"end": 4951,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4912,
											"end": 4929,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4905,
											"end": 4952,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4969,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5081,
											"end": 5087,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4969,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 4969,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4969,
											"end": 5095,
											"name": "tag",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 4969,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4961,
											"end": 5095,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4961,
											"end": 5095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4693,
											"end": 5102,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4693,
											"end": 5102,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4693,
											"end": 5102,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4693,
											"end": 5102,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4693,
											"end": 5102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5108,
											"end": 5288,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 5108,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5156,
											"end": 5233,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5234,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5253,
											"end": 5257,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5250,
											"end": 5251,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5243,
											"end": 5258,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5277,
											"end": 5281,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5282,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5294,
											"end": 5474,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 5294,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 5419,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5429,
											"end": 5444,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5480,
											"end": 5597,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 5480,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5589,
											"end": 5590,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5579,
											"end": 5591,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5603,
											"end": 5720,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 5603,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5726,
											"end": 5843,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 5726,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5835,
											"end": 5836,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5833,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5825,
											"end": 5837,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5926,
											"end": 5930,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5932,
											"end": 5938,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5988,
											"end": 5999,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5975,
											"end": 6000,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6078,
											"end": 6090,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6067,
											"end": 6075,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6051,
											"end": 6065,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 6047,
											"end": 6076,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6091,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6019,
											"end": 6092,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 6009,
											"end": 6177,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6096,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 6096,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 6096,
											"end": 6175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6096,
											"end": 6175,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 6096,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6009,
											"end": 6177,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 6009,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6198,
											"end": 6206,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6194,
											"end": 6227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6186,
											"end": 6227,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6186,
											"end": 6227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6260,
											"end": 6264,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6237,
											"end": 6265,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6237,
											"end": 6265,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6288,
											"end": 6306,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6277,
											"end": 6307,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6274,
											"end": 6391,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6274,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 6274,
											"end": 6391,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6310,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 6310,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 6310,
											"end": 6389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6310,
											"end": 6389,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 6310,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6274,
											"end": 6391,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 6274,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6418,
											"end": 6420,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6416,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6408,
											"end": 6421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6400,
											"end": 6421,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6400,
											"end": 6421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6475,
											"end": 6479,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6473,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6480,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 6443,
											"end": 6481,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6433,
											"end": 6482,
											"name": "SGT",
											"source": 18
										},
										{
											"begin": 6430,
											"end": 6566,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6430,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 6430,
											"end": 6566,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 6485,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6430,
											"end": 6566,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 6430,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5939,
											"end": 6573,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5849,
											"end": 6573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6748,
											"name": "tag",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 6579,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6663,
											"end": 6674,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6685,
											"end": 6704,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6737,
											"end": 6741,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6735,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6728,
											"end": 6742,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6713,
											"end": 6742,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6713,
											"end": 6742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6748,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6748,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6579,
											"end": 6748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6754,
											"end": 6934,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 6754,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6894,
											"end": 6926,
											"name": "PUSH",
											"source": 18,
											"value": "416464726573733A20696E76616C69642064656C65676174652063616C6C0000"
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6878,
											"end": 6892,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6871,
											"end": 6927,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6754,
											"end": 6934,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6754,
											"end": 6934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6940,
											"end": 7306,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 6940,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 18,
											"value": "1E"
										},
										{
											"begin": 7162,
											"end": 7165,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7103,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 7103,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7103,
											"end": 7170,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 7103,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7096,
											"end": 7170,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7096,
											"end": 7170,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 7179,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7179,
											"end": 7272,
											"name": "tag",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 7179,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7295,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7288,
											"end": 7300,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7281,
											"end": 7300,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7281,
											"end": 7300,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6940,
											"end": 7306,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6940,
											"end": 7306,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6940,
											"end": 7306,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6940,
											"end": 7306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7312,
											"end": 7731,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 7312,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7478,
											"end": 7482,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7518,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7501,
											"end": 7519,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7493,
											"end": 7519,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7493,
											"end": 7519,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7565,
											"end": 7574,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7559,
											"end": 7563,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7555,
											"end": 7575,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7551,
											"end": 7552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7549,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7536,
											"end": 7553,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7529,
											"end": 7576,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 7719,
											"end": 7723,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 7593,
											"end": 7724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7724,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 7593,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7585,
											"end": 7724,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7585,
											"end": 7724,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7312,
											"end": 7731,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7312,
											"end": 7731,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7312,
											"end": 7731,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7312,
											"end": 7731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7884,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 7737,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7838,
											"end": 7849,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7878,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7860,
											"end": 7878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7884,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 8276,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 7890,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 7997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8022,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 8054,
											"end": 8059,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8022,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8022,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8022,
											"end": 8060,
											"name": "tag",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 8022,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8076,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 8157,
											"end": 8163,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8152,
											"end": 8155,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8076,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 8076,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8076,
											"end": 8164,
											"name": "tag",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 8076,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8069,
											"end": 8164,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8069,
											"end": 8164,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8173,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 8231,
											"end": 8237,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8208,
											"end": 8224,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8173,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 8173,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8173,
											"end": 8238,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 8173,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8263,
											"end": 8269,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8258,
											"end": 8261,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8254,
											"end": 8270,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8247,
											"end": 8270,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8247,
											"end": 8270,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7998,
											"end": 8276,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 8276,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 8276,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 8276,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 8276,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7890,
											"end": 8276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8553,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8282,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8514,
											"end": 8520,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8434,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 8434,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8434,
											"end": 8527,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 8434,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8427,
											"end": 8527,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8427,
											"end": 8527,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8544,
											"end": 8547,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8537,
											"end": 8547,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8537,
											"end": 8547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8553,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8553,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8282,
											"end": 8553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8559,
											"end": 8658,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8559,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8650,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8639,
											"end": 8651,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8629,
											"end": 8651,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8629,
											"end": 8651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8559,
											"end": 8658,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8559,
											"end": 8658,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8559,
											"end": 8658,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8559,
											"end": 8658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 9041,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 8664,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8752,
											"end": 8755,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8780,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 8813,
											"end": 8818,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8780,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8780,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8780,
											"end": 8819,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 8780,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8835,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8894,
											"end": 8897,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8835,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 8835,
											"end": 8906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8835,
											"end": 8906,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 8835,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8828,
											"end": 8906,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8828,
											"end": 8906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8915,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8968,
											"end": 8971,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8961,
											"end": 8965,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8954,
											"end": 8959,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8950,
											"end": 8966,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8915,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 8915,
											"end": 8980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8915,
											"end": 8980,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 8915,
											"end": 8980,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9005,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9005,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 9005,
											"end": 9034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9005,
											"end": 9034,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 9005,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9000,
											"end": 9003,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8996,
											"end": 9035,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8989,
											"end": 9035,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8989,
											"end": 9035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8756,
											"end": 9041,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 9041,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 9041,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 9041,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 9041,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8664,
											"end": 9041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9360,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 9047,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9175,
											"end": 9201,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9175,
											"end": 9201,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9247,
											"end": 9256,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9241,
											"end": 9245,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9237,
											"end": 9257,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9231,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9218,
											"end": 9235,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9211,
											"end": 9258,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9275,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 9348,
											"end": 9352,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9275,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 9275,
											"end": 9353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9275,
											"end": 9353,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 9275,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9267,
											"end": 9353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9267,
											"end": 9353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9360,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9360,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9047,
											"end": 9360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"multicall(bytes[])": "ac9650d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides a function to batch together multiple calls in a single external call. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":{\"keccak256\":\"0x82921a9d2813a43b54ef82352e252f112ce7542accb95f5cfd2db18ef392646b\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9ad280ac58a70a423deb3a938da2dbbeabc6e3f861abf61073f7c0a218903a57\",\"dweb:/ipfs/QmXy7k5P7z4s6YpJfeAKWWpE1fJdny8hJStHTYVv23RWzg\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol\":{\"keccak256\":\"0xa569531ddd48bf1bd6fcb12927a732ea49a5277429fbba7e44108f4f8d336234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd423a5b7315e40dd6cf31ce3c34d236d349c8959d0fed44a1dc84eb431429c\",\"dweb:/ipfs/QmYR9XkzCvPzT48HieLHkujzF1cAAZT3E8pazRCgCU8NaJ\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":{\"keccak256\":\"0x3793ed8492fa575cf73beed883a26cda685bb53f63950599c1280eae9a73fada\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9e2916d53829baff87699664e65b95ff536c25d02d4b9ff2433eab54812f9b0\",\"dweb:/ipfs/QmXSqLvmNZ3qLLC42TCDzNEia2mUmALdTTfLxKmfdqNEot\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"multicall(bytes[])": {
								"notice": "Receives and executes a batch of function calls on this contract."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol": {
				"UserOperationLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":1581:3927  library UserOperationLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":1581:3927  library UserOperationLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200dd160f2d8f49592e79fb33fa2d949eb3e83ca21516f31ed53550f9982fa01e764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200dd160f2d8f49592e79fb33fa2d949eb3e83ca21516f31ed53550f9982fa01e764736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xD1 PUSH1 0xF2 0xD8 DELEGATECALL SWAP6 SWAP3 0xE7 SWAP16 0xB3 EXTCODEHASH LOG2 0xD9 BLOBHASH 0xEB RETURNDATACOPY DUP4 0xCA 0x21 MLOAD PUSH16 0x31ED53550F9982FA01E764736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1581:2346:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200dd160f2d8f49592e79fb33fa2d949eb3e83ca21516f31ed53550f9982fa01e764736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xD1 PUSH1 0xF2 0xD8 DELEGATECALL SWAP6 SWAP3 0xE7 SWAP16 0xB3 EXTCODEHASH LOG2 0xD9 BLOBHASH 0xEB RETURNDATACOPY DUP4 0xCA 0x21 MLOAD PUSH16 0x31ED53550F9982FA01E764736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1581:2346:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"gasPrice(struct UserOperation calldata)": "infinite",
								"getSender(struct UserOperation calldata)": "infinite",
								"hash(struct UserOperation calldata)": "infinite",
								"min(uint256,uint256)": "infinite",
								"pack(struct UserOperation calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 3927,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200dd160f2d8f49592e79fb33fa2d949eb3e83ca21516f31ed53550f9982fa01e764736f6c63430008180033",
									".code": [
										{
											"begin": 1581,
											"end": 3927,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 3927,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":{\"keccak256\":\"0x0844576ffce3c3fd6ec5454d3a142efe5ed119112d7e1c6698c99b5b93a6476f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5e788a3d11d336be698790552bd9f31f1bdc72f43a22a5b2574fb248c819076f\",\"dweb:/ipfs/QmcfToLtD2tA36AL6FKB8Du7EWr43zC5yo2HZFGKeY41Z4\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol\":{\"keccak256\":\"0x78aa2145fcfb195f533e68486fd1617a3b6b5bdf53af1b8fd2ab7211459bc8ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1ea19d4707c245e5bdad9df43cd89bbc451b08e074b0cb2156a04c0e1e2c6da\",\"dweb:/ipfs/QmVas9dTRJt9HJQomia5ZTBgQanxyz1akyDAkCHRL3ecx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Utility functions helpful when working with UserOperation structs.",
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol": {
				"IAccount": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "missingAccountFunds",
									"type": "uint256"
								}
							],
							"name": "validateUserOp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
								"params": {
									"missingAccountFunds": "missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \"entryPoint.withdrawTo()\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.",
									"userOp": "the operation that is about to be executed.",
									"userOpHash": "hash of the user's request data. can be used as the basis for signature."
								},
								"returns": {
									"validationData": "packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":{\"keccak256\":\"0x0844576ffce3c3fd6ec5454d3a142efe5ed119112d7e1c6698c99b5b93a6476f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5e788a3d11d336be698790552bd9f31f1bdc72f43a22a5b2574fb248c819076f\",\"dweb:/ipfs/QmcfToLtD2tA36AL6FKB8Du7EWr43zC5yo2HZFGKeY41Z4\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol\":{\"keccak256\":\"0xdbf3f91dd92200e52294b0606a1344bc7f959426577e27f4fd1e757d04e7b045\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8ea4061342a16e18c5ad652e19fa7d0343493e6302470e498c79f12cd5b4bf6\",\"dweb:/ipfs/QmTvSGFxEZkSg656mx1ombm6a1CU33L8JxqTVtUKN5daML\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol\":{\"keccak256\":\"0x78aa2145fcfb195f533e68486fd1617a3b6b5bdf53af1b8fd2ab7211459bc8ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1ea19d4707c245e5bdad9df43cd89bbc451b08e074b0cb2156a04c0e1e2c6da\",\"dweb:/ipfs/QmVas9dTRJt9HJQomia5ZTBgQanxyz1akyDAkCHRL3ecx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol": {
				"IAccountFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "accountAdmin",
									"type": "address"
								}
							],
							"name": "AccountCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "SignerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "SignerRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accountImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "createAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "getAccountsOfSigner",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adminSigner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllAccounts",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "onSignerAdded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "onSignerRemoved",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accountImplementation()": "11464fbe",
							"createAccount(address,bytes)": "d8fd8f44",
							"getAccountsOfSigner(address)": "0e6254fd",
							"getAddress(address,bytes)": "8878ed33",
							"getAllAccounts()": "08e93d0a",
							"onSignerAdded(address,bytes32)": "0b61e12b",
							"onSignerRemoved(address,bytes32)": "9387a380"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAdmin\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getAccountsOfSigner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminSigner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerAdded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerRemoved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"AccountCreated(address,address)\":{\"notice\":\"Emitted when a new Account is created.\"},\"SignerAdded(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"},\"SignerRemoved(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"}},\"kind\":\"user\",\"methods\":{\"accountImplementation()\":{\"notice\":\"Returns the address of the Account implementation.\"},\"createAccount(address,bytes)\":{\"notice\":\"Deploys a new Account for admin.\"},\"getAccountsOfSigner(address)\":{\"notice\":\"Returns all accounts on which a signer has (active or inactive) permissions.\"},\"getAddress(address,bytes)\":{\"notice\":\"Returns the address of an Account that would be deployed with the given admin signer.\"},\"getAllAccounts()\":{\"notice\":\"Returns all accounts created on the factory.\"},\"onSignerAdded(address,bytes32)\":{\"notice\":\"Callback function for an Account to register its signers.\"},\"onSignerRemoved(address,bytes32)\":{\"notice\":\"Callback function for an Account to un-register its signers.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol\":\"IAccountFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol\":{\"keccak256\":\"0x820f45842ad539f214db3fbca19fea58702b5ecdd496aa770951904a4938d7e4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://091e913a25e6a3cde14596525e8d5a8656275fd5fcd8fcb56ec3fd7a66d050f9\",\"dweb:/ipfs/Qmbp73fgRHMWyQ2ETsCpVanUXj6NxnzBiJxcEupZwCAKWx\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol\":{\"keccak256\":\"0x65c5ed98c2b7dd9ba4f2c83eaa652b1069470999a04625e33ea197e39aff63b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a3d0c5d28efdae547f3714e341b6caf71f27358d9409a6dcc72ca569aeb9ff6\",\"dweb:/ipfs/QmUBZHg1bCsNGWrSC9d34oPDqriLregwxiRCUjmYYZeR5E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AccountCreated(address,address)": {
								"notice": "Emitted when a new Account is created."
							},
							"SignerAdded(address,address)": {
								"notice": "Emitted when a new signer is added to an Account."
							},
							"SignerRemoved(address,address)": {
								"notice": "Emitted when a new signer is added to an Account."
							}
						},
						"kind": "user",
						"methods": {
							"accountImplementation()": {
								"notice": "Returns the address of the Account implementation."
							},
							"createAccount(address,bytes)": {
								"notice": "Deploys a new Account for admin."
							},
							"getAccountsOfSigner(address)": {
								"notice": "Returns all accounts on which a signer has (active or inactive) permissions."
							},
							"getAddress(address,bytes)": {
								"notice": "Returns the address of an Account that would be deployed with the given admin signer."
							},
							"getAllAccounts()": {
								"notice": "Returns all accounts created on the factory."
							},
							"onSignerAdded(address,bytes32)": {
								"notice": "Callback function for an Account to register its signers."
							},
							"onSignerRemoved(address,bytes32)": {
								"notice": "Callback function for an Account to un-register its signers."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol": {
				"IAccountFactoryCore": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "accountAdmin",
									"type": "address"
								}
							],
							"name": "AccountCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "SignerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "SignerRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accountImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "createAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "getAccountsOfSigner",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adminSigner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllAccounts",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accountImplementation()": "11464fbe",
							"createAccount(address,bytes)": "d8fd8f44",
							"getAccountsOfSigner(address)": "0e6254fd",
							"getAddress(address,bytes)": "8878ed33",
							"getAllAccounts()": "08e93d0a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAdmin\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getAccountsOfSigner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminSigner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"AccountCreated(address,address)\":{\"notice\":\"Emitted when a new Account is created.\"},\"SignerAdded(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"},\"SignerRemoved(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"}},\"kind\":\"user\",\"methods\":{\"accountImplementation()\":{\"notice\":\"Returns the address of the Account implementation.\"},\"createAccount(address,bytes)\":{\"notice\":\"Deploys a new Account for admin.\"},\"getAccountsOfSigner(address)\":{\"notice\":\"Returns all accounts on which a signer has (active or inactive) permissions.\"},\"getAddress(address,bytes)\":{\"notice\":\"Returns the address of an Account that would be deployed with the given admin signer.\"},\"getAllAccounts()\":{\"notice\":\"Returns all accounts created on the factory.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol\":\"IAccountFactoryCore\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol\":{\"keccak256\":\"0x65c5ed98c2b7dd9ba4f2c83eaa652b1069470999a04625e33ea197e39aff63b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a3d0c5d28efdae547f3714e341b6caf71f27358d9409a6dcc72ca569aeb9ff6\",\"dweb:/ipfs/QmUBZHg1bCsNGWrSC9d34oPDqriLregwxiRCUjmYYZeR5E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AccountCreated(address,address)": {
								"notice": "Emitted when a new Account is created."
							},
							"SignerAdded(address,address)": {
								"notice": "Emitted when a new signer is added to an Account."
							},
							"SignerRemoved(address,address)": {
								"notice": "Emitted when a new signer is added to an Account."
							}
						},
						"kind": "user",
						"methods": {
							"accountImplementation()": {
								"notice": "Returns the address of the Account implementation."
							},
							"createAccount(address,bytes)": {
								"notice": "Deploys a new Account for admin."
							},
							"getAccountsOfSigner(address)": {
								"notice": "Returns all accounts on which a signer has (active or inactive) permissions."
							},
							"getAddress(address,bytes)": {
								"notice": "Returns the address of an Account that would be deployed with the given admin signer."
							},
							"getAllAccounts()": {
								"notice": "Returns all accounts created on the factory."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol": {
				"IAccountPermissions": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isAdmin",
									"type": "bool"
								}
							],
							"name": "AdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "authorizingSigner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "targetSigner",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "isAdmin",
											"type": "uint8"
										},
										{
											"internalType": "address[]",
											"name": "approvedTargets",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "nativeTokenLimitPerTransaction",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "permissionStartTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "permissionEndTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "reqValidityStartTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "reqValidityEndTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										}
									],
									"indexed": false,
									"internalType": "struct IAccountPermissions.SignerPermissionRequest",
									"name": "permissions",
									"type": "tuple"
								}
							],
							"name": "SignerPermissionsUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getAllActiveSigners",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "approvedTargets",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "nativeTokenLimitPerTransaction",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "startTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "endTimestamp",
											"type": "uint128"
										}
									],
									"internalType": "struct IAccountPermissions.SignerPermissions[]",
									"name": "signers",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllAdmins",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "admins",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllSigners",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "approvedTargets",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "nativeTokenLimitPerTransaction",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "startTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "endTimestamp",
											"type": "uint128"
										}
									],
									"internalType": "struct IAccountPermissions.SignerPermissions[]",
									"name": "signers",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "getPermissionsForSigner",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "approvedTargets",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "nativeTokenLimitPerTransaction",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "startTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "endTimestamp",
											"type": "uint128"
										}
									],
									"internalType": "struct IAccountPermissions.SignerPermissions",
									"name": "permissions",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "isActiveSigner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "isAdmin",
											"type": "uint8"
										},
										{
											"internalType": "address[]",
											"name": "approvedTargets",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "nativeTokenLimitPerTransaction",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "permissionStartTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "permissionEndTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "reqValidityStartTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "reqValidityEndTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										}
									],
									"internalType": "struct IAccountPermissions.SignerPermissionRequest",
									"name": "req",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "setPermissionsForSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "isAdmin",
											"type": "uint8"
										},
										{
											"internalType": "address[]",
											"name": "approvedTargets",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "nativeTokenLimitPerTransaction",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "permissionStartTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "permissionEndTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "reqValidityStartTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "reqValidityEndTimestamp",
											"type": "uint128"
										},
										{
											"internalType": "bytes32",
											"name": "uid",
											"type": "bytes32"
										}
									],
									"internalType": "struct IAccountPermissions.SignerPermissionRequest",
									"name": "req",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verifySignerPermissionRequest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "thirdweb",
						"kind": "dev",
						"methods": {
							"verifySignerPermissionRequest((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
								"details": "Verifies that a request is signed by an authorized account."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAllActiveSigners()": "8b52d723",
							"getAllAdmins()": "e9523c97",
							"getAllSigners()": "d42f2f35",
							"getPermissionsForSigner(address)": "f15d424e",
							"isActiveSigner(address)": "7dff5a79",
							"isAdmin(address)": "24d7806c",
							"setPermissionsForSigner((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": "5892e236",
							"verifySignerPermissionRequest((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": "a9082d84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizingSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"isAdmin\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"permissions\",\"type\":\"tuple\"}],\"name\":\"SignerPermissionsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllActiveSigners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions[]\",\"name\":\"signers\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSigners\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions[]\",\"name\":\"signers\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getPermissionsForSigner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"startTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTimestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissions\",\"name\":\"permissions\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isActiveSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"isAdmin\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"setPermissionsForSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"isAdmin\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"approvedTargets\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nativeTokenLimitPerTransaction\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"permissionStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"permissionEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityStartTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reqValidityEndTimestamp\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAccountPermissions.SignerPermissionRequest\",\"name\":\"req\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifySignerPermissionRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"thirdweb\",\"kind\":\"dev\",\"methods\":{\"verifySignerPermissionRequest((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)\":{\"details\":\"Verifies that a request is signed by an authorized account.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AdminUpdated(address,bool)\":{\"notice\":\"Emitted when an admin is set or removed.\"},\"SignerPermissionsUpdated(address,address,(address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32))\":{\"notice\":\"Emitted when permissions for a signer are updated.\"}},\"kind\":\"user\",\"methods\":{\"getAllActiveSigners()\":{\"notice\":\"Returns all signers with active permissions to use the account.\"},\"getAllAdmins()\":{\"notice\":\"Returns all admins of the account.\"},\"getAllSigners()\":{\"notice\":\"Returns all active and inactive signers of the account.\"},\"getPermissionsForSigner(address)\":{\"notice\":\"Returns the restrictions under which a signer can use the smart wallet.\"},\"isActiveSigner(address)\":{\"notice\":\"Returns whether the given account is an active signer on the account.\"},\"isAdmin(address)\":{\"notice\":\"Returns whether the given account is an admin.\"},\"setPermissionsForSigner((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)\":{\"notice\":\"Sets the permissions for a given signer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol\":\"IAccountPermissions\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol\":{\"keccak256\":\"0x34e998c2cfac71ae5837280e487215fc64f17c4212270192442e541527a38871\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://51d201d243ade4b6aa37f88e6dbd8f4886ef2b15a290630367b8b95f8ef1a69c\",\"dweb:/ipfs/QmfHdzvzEugZMatjex3sbp2ehjcRE3mDi7QxEHCi6A25Ww\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AdminUpdated(address,bool)": {
								"notice": "Emitted when an admin is set or removed."
							},
							"SignerPermissionsUpdated(address,address,(address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32))": {
								"notice": "Emitted when permissions for a signer are updated."
							}
						},
						"kind": "user",
						"methods": {
							"getAllActiveSigners()": {
								"notice": "Returns all signers with active permissions to use the account."
							},
							"getAllAdmins()": {
								"notice": "Returns all admins of the account."
							},
							"getAllSigners()": {
								"notice": "Returns all active and inactive signers of the account."
							},
							"getPermissionsForSigner(address)": {
								"notice": "Returns the restrictions under which a signer can use the smart wallet."
							},
							"isActiveSigner(address)": {
								"notice": "Returns whether the given account is an active signer on the account."
							},
							"isAdmin(address)": {
								"notice": "Returns whether the given account is an admin."
							},
							"setPermissionsForSigner((address,uint8,address[],uint256,uint128,uint128,uint128,uint128,bytes32),bytes)": {
								"notice": "Sets the permissions for a given signer."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol": {
				"IAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation[]",
									"name": "userOps",
									"type": "tuple[]"
								}
							],
							"name": "aggregateSignatures",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "aggregatedSignature",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation[]",
									"name": "userOps",
									"type": "tuple[]"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "validateSignatures",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "validateUserOpSignature",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "sigForUserOp",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
								"params": {
									"userOps": "array of UserOperations to collect the signatures from."
								},
								"returns": {
									"aggregatedSignature": "the aggregated signature"
								}
							},
							"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"params": {
									"userOp": "the userOperation received from the user."
								},
								"returns": {
									"sigForUserOp": "the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \"multisig\""
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": "275e2d79",
							"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)": "e3563a4f",
							"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "64c530cd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":{\"keccak256\":\"0x0844576ffce3c3fd6ec5454d3a142efe5ed119112d7e1c6698c99b5b93a6476f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5e788a3d11d336be698790552bd9f31f1bdc72f43a22a5b2574fb248c819076f\",\"dweb:/ipfs/QmcfToLtD2tA36AL6FKB8Du7EWr43zC5yo2HZFGKeY41Z4\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol\":{\"keccak256\":\"0x516d1dcafa4a239386340533d87ed0c1eff291c631cf596afaf82262ddfa603d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ed5974a9e0fe8de3de6779ca0ef4c1655a26ca9a73a94b4d8a26789ac1bd09ef\",\"dweb:/ipfs/QmXxjfVDdZS6bqyHo5AfbZthZUtytcCt8Gn87jg8bdM4wv\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol\":{\"keccak256\":\"0x78aa2145fcfb195f533e68486fd1617a3b6b5bdf53af1b8fd2ab7211459bc8ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1ea19d4707c245e5bdad9df43cd89bbc451b08e074b0cb2156a04c0e1e2c6da\",\"dweb:/ipfs/QmVas9dTRJt9HJQomia5ZTBgQanxyz1akyDAkCHRL3ecx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
								"notice": "aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation"
							},
							"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)": {
								"notice": "validate aggregated signature. revert if the aggregated signature does not match the given list of operations."
							},
							"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"notice": "validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps."
							}
						},
						"notice": "Aggregated Signatures validator.",
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol": {
				"IEntryPoint": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "preOpGas",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paid",
									"type": "uint256"
								},
								{
									"internalType": "uint48",
									"name": "validAfter",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "validUntil",
									"type": "uint48"
								},
								{
									"internalType": "bool",
									"name": "targetSuccess",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "targetResult",
									"type": "bytes"
								}
							],
							"name": "ExecutionResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "opIndex",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "FailedOp",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "SenderAddressResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aggregator",
									"type": "address"
								}
							],
							"name": "SignatureValidationFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "preOpGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "prefund",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sigFailed",
											"type": "bool"
										},
										{
											"internalType": "uint48",
											"name": "validAfter",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "validUntil",
											"type": "uint48"
										},
										{
											"internalType": "bytes",
											"name": "paymasterContext",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.ReturnInfo",
									"name": "returnInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "senderInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "factoryInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "paymasterInfo",
									"type": "tuple"
								}
							],
							"name": "ValidationResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "preOpGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "prefund",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sigFailed",
											"type": "bool"
										},
										{
											"internalType": "uint48",
											"name": "validAfter",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "validUntil",
											"type": "uint48"
										},
										{
											"internalType": "bytes",
											"name": "paymasterContext",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.ReturnInfo",
									"name": "returnInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "senderInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "factoryInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "stake",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unstakeDelaySec",
											"type": "uint256"
										}
									],
									"internalType": "struct IStakeManager.StakeInfo",
									"name": "paymasterInfo",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "aggregator",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "stake",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "unstakeDelaySec",
													"type": "uint256"
												}
											],
											"internalType": "struct IStakeManager.StakeInfo",
											"name": "stakeInfo",
											"type": "tuple"
										}
									],
									"internalType": "struct IEntryPoint.AggregatorStakeInfo",
									"name": "aggregatorInfo",
									"type": "tuple"
								}
							],
							"name": "ValidationResultWithAggregation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "paymaster",
									"type": "address"
								}
							],
							"name": "AccountDeployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "BeforeExecution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposit",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "aggregator",
									"type": "address"
								}
							],
							"name": "SignatureAggregatorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeDelaySec",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawTime",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "paymaster",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualGasCost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualGasUsed",
									"type": "uint256"
								}
							],
							"name": "UserOperationEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "revertReason",
									"type": "bytes"
								}
							],
							"name": "UserOperationRevertReason",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint112",
											"name": "deposit",
											"type": "uint112"
										},
										{
											"internalType": "bool",
											"name": "staked",
											"type": "bool"
										},
										{
											"internalType": "uint112",
											"name": "stake",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "unstakeDelaySec",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "withdrawTime",
											"type": "uint48"
										}
									],
									"internalType": "struct IStakeManager.DepositInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "initCode",
									"type": "bytes"
								}
							],
							"name": "getSenderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "getUserOpHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "sender",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "nonce",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "initCode",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "callData",
													"type": "bytes"
												},
												{
													"internalType": "uint256",
													"name": "callGasLimit",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "verificationGasLimit",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "preVerificationGas",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "maxFeePerGas",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "maxPriorityFeePerGas",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "paymasterAndData",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "signature",
													"type": "bytes"
												}
											],
											"internalType": "struct UserOperation[]",
											"name": "userOps",
											"type": "tuple[]"
										},
										{
											"internalType": "contract IAggregator",
											"name": "aggregator",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.UserOpsPerAggregator[]",
									"name": "opsPerAggregator",
									"type": "tuple[]"
								},
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "handleAggregatedOps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation[]",
									"name": "ops",
									"type": "tuple[]"
								},
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "handleOps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "incrementNonce",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "op",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "targetCallData",
									"type": "bytes"
								}
							],
							"name": "simulateHandleOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "simulateValidation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedOp(uint256,string)": [
								{
									"params": {
										"opIndex": "- index into the array of ops to the failed one (in simulateValidation, this is always zero)",
										"reason": "- revert reason      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."
									}
								}
							],
							"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))": [
								{
									"params": {
										"factoryInfo": "stake information about the factory (if any)",
										"paymasterInfo": "stake information about the paymaster (if any)",
										"returnInfo": "gas and time-range returned values",
										"senderInfo": "stake information about the sender"
									}
								}
							],
							"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))": [
								{
									"params": {
										"aggregatorInfo": "signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation",
										"factoryInfo": "stake information about the factory (if any)",
										"paymasterInfo": "stake information about the paymaster (if any)",
										"returnInfo": "gas and time-range returned values",
										"senderInfo": "stake information about the sender"
									}
								}
							]
						},
						"events": {
							"AccountDeployed(bytes32,address,address,address)": {
								"params": {
									"factory": "the factory used to deploy this account (in the initCode)",
									"paymaster": "the paymaster used by this UserOp",
									"sender": "the account that is deployed",
									"userOpHash": "the userOp that deployed this account. UserOperationEvent will follow."
								}
							},
							"UserOperationRevertReason(bytes32,address,uint256,bytes)": {
								"params": {
									"nonce": "the nonce used in the request",
									"revertReason": "- the return bytes from the (reverted) call to \"callData\".",
									"sender": "the sender of this request",
									"userOpHash": "the request unique identifier."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"_unstakeDelaySec": "the new lock duration before the deposit can be withdrawn."
								}
							},
							"balanceOf(address)": {
								"returns": {
									"_0": "the deposit (for gas payment) of the account"
								}
							},
							"getDepositInfo(address)": {
								"returns": {
									"info": "- full deposit information of given account"
								}
							},
							"getNonce(address,uint192)": {
								"params": {
									"key": "the high 192 bit of the nonce",
									"sender": "the account address"
								},
								"returns": {
									"nonce": "a full nonce to pass for next UserOp with this sender."
								}
							},
							"getSenderAddress(bytes)": {
								"params": {
									"initCode": "the constructor code to be passed into the UserOperation."
								}
							},
							"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
								"params": {
									"beneficiary": "the address to receive the fees",
									"opsPerAggregator": "the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"
								}
							},
							"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
								"params": {
									"beneficiary": "the address to receive the fees",
									"ops": "the operations to execute"
								}
							},
							"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": {
								"params": {
									"op": "the UserOperation to simulate",
									"target": "if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.",
									"targetCallData": "callData to pass to target address"
								}
							},
							"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"details": "this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.",
								"params": {
									"userOp": "the user operation to validate."
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value.",
									"withdrawAmount": "the amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"balanceOf(address)": "70a08231",
							"depositTo(address)": "b760faf9",
							"getDepositInfo(address)": "5287ce12",
							"getNonce(address,uint192)": "35567e1a",
							"getSenderAddress(bytes)": "9b249f69",
							"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "a6193531",
							"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": "4b1d7cf5",
							"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": "1fad948c",
							"incrementNonce(uint192)": "0bd28e3b",
							"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": "d6383f94",
							"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "ee219423",
							"unlockStake()": "bb9fe6bf",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":{\"keccak256\":\"0x0844576ffce3c3fd6ec5454d3a142efe5ed119112d7e1c6698c99b5b93a6476f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5e788a3d11d336be698790552bd9f31f1bdc72f43a22a5b2574fb248c819076f\",\"dweb:/ipfs/QmcfToLtD2tA36AL6FKB8Du7EWr43zC5yo2HZFGKeY41Z4\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol\":{\"keccak256\":\"0x516d1dcafa4a239386340533d87ed0c1eff291c631cf596afaf82262ddfa603d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ed5974a9e0fe8de3de6779ca0ef4c1655a26ca9a73a94b4d8a26789ac1bd09ef\",\"dweb:/ipfs/QmXxjfVDdZS6bqyHo5AfbZthZUtytcCt8Gn87jg8bdM4wv\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol\":{\"keccak256\":\"0xef4668624f5de2d35eba19dd3edfddc3acd5a2b845cae211f299c1311e216f2c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8769f0c62103b659084e7cefdb26eeb9b46b31de03fd4002e264e9afa64868a8\",\"dweb:/ipfs/QmZovAx1SQH6rmhciv1tGSJTAxRq1YBUjUo63mqsrw3did\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol\":{\"keccak256\":\"0x77085fe40d8352eb6d16f02cca3b8b57db016e97173b5341104d4c4fc677531f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c7eec5d8ebaef50e8e856364a6570cac01f609a3dfcd611af6d7fa550f05d54\",\"dweb:/ipfs/QmToDwfQAymfgUWUTg4VMnfZW72fGcmxWbGk1pipw5Bkm1\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol\":{\"keccak256\":\"0x56ed36384e0c62253769a2219b2e9161d88e5f58ae1f781fd3a540c8a399b9a7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9f26a6b28abc3eee5cf63938205ee6274d508b6f3acd5d1af0f041a2f239be45\",\"dweb:/ipfs/QmY4DYvnqU93ta3VNSa6nxNjoWoum6B8t8k9D7wLUvk6m1\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol\":{\"keccak256\":\"0x78aa2145fcfb195f533e68486fd1617a3b6b5bdf53af1b8fd2ab7211459bc8ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1ea19d4707c245e5bdad9df43cd89bbc451b08e074b0cb2156a04c0e1e2c6da\",\"dweb:/ipfs/QmVas9dTRJt9HJQomia5ZTBgQanxyz1akyDAkCHRL3ecx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)": [
								{
									"notice": "return value of simulateHandleOp"
								}
							],
							"FailedOp(uint256,string)": [
								{
									"notice": "a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it."
								}
							],
							"SenderAddressResult(address)": [
								{
									"notice": "return value of getSenderAddress"
								}
							],
							"SignatureValidationFailed(address)": [
								{
									"notice": "error case when a signature aggregator fails to verify the aggregated signature it had created."
								}
							],
							"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))": [
								{
									"notice": "Successful result from simulateValidation."
								}
							],
							"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))": [
								{
									"notice": "Successful result from simulateValidation, if the account returns a signature aggregator"
								}
							]
						},
						"events": {
							"AccountDeployed(bytes32,address,address,address)": {
								"notice": "account \"sender\" was deployed."
							},
							"BeforeExecution()": {
								"notice": "an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation."
							},
							"SignatureAggregatorChanged(address)": {
								"notice": "signature aggregator used by the following UserOperationEvents within this bundle."
							},
							"StakeLocked(address,uint256,uint256)": {
								"notice": "Emitted when stake or unstake delay are modified"
							},
							"StakeUnlocked(address,uint256)": {
								"notice": "Emitted once a stake is scheduled for withdrawal"
							},
							"UserOperationRevertReason(bytes32,address,uint256,bytes)": {
								"notice": "An event emitted if the UserOperation \"callData\" reverted with non-zero length"
							}
						},
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "add to the account's stake - amount and delay any pending unstake is first cancelled."
							},
							"depositTo(address)": {
								"notice": "add to the deposit of the given account"
							},
							"getNonce(address,uint192)": {
								"notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
							},
							"getSenderAddress(bytes)": {
								"notice": "Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"
							},
							"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"notice": "generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
							},
							"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
								"notice": "Execute a batch of UserOperation with Aggregators"
							},
							"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
								"notice": "Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."
							},
							"incrementNonce(uint192)": {
								"notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
							},
							"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": {
								"notice": "simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the success/failure of the target call, it must be executed with trace enabled to track the emitted events."
							},
							"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
								"notice": "Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."
							},
							"unlockStake()": {
								"notice": "attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."
							},
							"withdrawStake(address)": {
								"notice": "withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"
							},
							"withdrawTo(address,uint256)": {
								"notice": "withdraw from the deposit."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol": {
				"IMulticall": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides a function to batch together multiple calls in a single external call. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "Receives and executes a batch of function calls on this contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"multicall(bytes[])": "ac9650d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides a function to batch together multiple calls in a single external call. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol\":\"IMulticall\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol\":{\"keccak256\":\"0xa569531ddd48bf1bd6fcb12927a732ea49a5277429fbba7e44108f4f8d336234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd423a5b7315e40dd6cf31ce3c34d236d349c8959d0fed44a1dc84eb431429c\",\"dweb:/ipfs/QmYR9XkzCvPzT48HieLHkujzF1cAAZT3E8pazRCgCU8NaJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol": {
				"INonceManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "incrementNonce",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getNonce(address,uint192)": {
								"params": {
									"key": "the high 192 bit of the nonce",
									"sender": "the account address"
								},
								"returns": {
									"nonce": "a full nonce to pass for next UserOp with this sender."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getNonce(address,uint192)": "35567e1a",
							"incrementNonce(uint192)": "0bd28e3b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol\":{\"keccak256\":\"0x77085fe40d8352eb6d16f02cca3b8b57db016e97173b5341104d4c4fc677531f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c7eec5d8ebaef50e8e856364a6570cac01f609a3dfcd611af6d7fa550f05d54\",\"dweb:/ipfs/QmToDwfQAymfgUWUTg4VMnfZW72fGcmxWbGk1pipw5Bkm1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getNonce(address,uint192)": {
								"notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
							},
							"incrementNonce(uint192)": {
								"notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
							}
						},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol": {
				"IStakeManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposit",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeDelaySec",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawTime",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint112",
											"name": "deposit",
											"type": "uint112"
										},
										{
											"internalType": "bool",
											"name": "staked",
											"type": "bool"
										},
										{
											"internalType": "uint112",
											"name": "stake",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "unstakeDelaySec",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "withdrawTime",
											"type": "uint48"
										}
									],
									"internalType": "struct IStakeManager.DepositInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"_unstakeDelaySec": "the new lock duration before the deposit can be withdrawn."
								}
							},
							"balanceOf(address)": {
								"returns": {
									"_0": "the deposit (for gas payment) of the account"
								}
							},
							"getDepositInfo(address)": {
								"returns": {
									"info": "- full deposit information of given account"
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"withdrawAddress": "the address to send withdrawn value.",
									"withdrawAmount": "the amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"balanceOf(address)": "70a08231",
							"depositTo(address)": "b760faf9",
							"getDepositInfo(address)": "5287ce12",
							"unlockStake()": "bb9fe6bf",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol\":{\"keccak256\":\"0x56ed36384e0c62253769a2219b2e9161d88e5f58ae1f781fd3a540c8a399b9a7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9f26a6b28abc3eee5cf63938205ee6274d508b6f3acd5d1af0f041a2f239be45\",\"dweb:/ipfs/QmY4DYvnqU93ta3VNSa6nxNjoWoum6B8t8k9D7wLUvk6m1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"StakeLocked(address,uint256,uint256)": {
								"notice": "Emitted when stake or unstake delay are modified"
							},
							"StakeUnlocked(address,uint256)": {
								"notice": "Emitted once a stake is scheduled for withdrawal"
							}
						},
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "add to the account's stake - amount and delay any pending unstake is first cancelled."
							},
							"depositTo(address)": {
								"notice": "add to the deposit of the given account"
							},
							"unlockStake()": {
								"notice": "attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."
							},
							"withdrawStake(address)": {
								"notice": "withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"
							},
							"withdrawTo(address,uint256)": {
								"notice": "withdraw from the deposit."
							}
						},
						"notice": "manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \"unstakeDelay\" by the staked entity.",
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"author": "thirdweb",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":91:5189  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":91:5189  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fa5fe845d392c5cb68ddc666862e6b7fa73341e9851eccfe188d41318f46ad3664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fa5fe845d392c5cb68ddc666862e6b7fa73341e9851eccfe188d41318f46ad3664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH0 0xE8 GASLIMIT 0xD3 SWAP3 0xC5 0xCB PUSH9 0xDDC666862E6B7FA733 COINBASE 0xE9 DUP6 0x1E 0xCC INVALID XOR DUP14 COINBASE BALANCE DUP16 CHAINID 0xAD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "91:5098:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fa5fe845d392c5cb68ddc666862e6b7fa73341e9851eccfe188d41318f46ad3664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH0 0xE8 GASLIMIT 0xD3 SWAP3 0xC5 0xCB PUSH9 0xDDC666862E6B7FA733 COINBASE 0xE9 DUP6 0x1E 0xCC INVALID XOR DUP14 COINBASE BALANCE DUP16 CHAINID 0xAD CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "91:5098:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 91,
									"end": 5189,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa5fe845d392c5cb68ddc666862e6b7fa73341e9851eccfe188d41318f46ad3664736f6c63430008180033",
									".code": [
										{
											"begin": 91,
											"end": 5189,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 91,
											"end": 5189,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"thirdweb\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":{\"keccak256\":\"0x3793ed8492fa575cf73beed883a26cda685bb53f63950599c1280eae9a73fada\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9e2916d53829baff87699664e65b95ff536c25d02d4b9ff2433eab54812f9b0\",\"dweb:/ipfs/QmXSqLvmNZ3qLLC42TCDzNEia2mUmALdTTfLxKmfdqNEot\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol": {
				"BytesLib": {
					"abi": [],
					"devdoc": {
						"author": "thirdweb Credits: https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol\":186:576  library BytesLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol\":186:576  library BytesLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220790bc36f1f68fe3095ae1591703356e6feeaefb6a9231441049eae9be133889c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220790bc36f1f68fe3095ae1591703356e6feeaefb6a9231441049eae9be133889c64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xBC36F1F68FE3095AE1591703356E6FEEAEFB6A9231441049EAE SWAP12 0xE1 CALLER DUP9 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "186:390:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220790bc36f1f68fe3095ae1591703356e6feeaefb6a9231441049eae9be133889c64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xBC36F1F68FE3095AE1591703356E6FEEAEFB6A9231441049EAE SWAP12 0xE1 CALLER DUP9 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "186:390:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toAddress(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 186,
									"end": 576,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220790bc36f1f68fe3095ae1591703356e6feeaefb6a9231441049eae9be133889c64736f6c63430008180033",
									".code": [
										{
											"begin": 186,
											"end": 576,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 186,
											"end": 576,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 186,
											"end": 576,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 186,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 186,
											"end": 576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 576,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 186,
											"end": 576,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"thirdweb Credits: https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol\":{\"keccak256\":\"0x2516d3f849615cb70f26692e1f1c4c25d056eb74fa68b18aa46c46edb7fa5ec7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a38ea655a3553fa7a32610ee11de2e3d5ae36367a667a0d1c229ffa6c073c5e\",\"dweb:/ipfs/QmU9GUNZkvWnSbRoGWfbqDnZb6GAMnXHBerkrqN93bqeig\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol\":773:4117  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol\":773:4117  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207041511168196ca1952d3b520bb2848f847b114097f82b90cd70037d0bb06bea64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207041511168196ca1952d3b520bb2848f847b114097f82b90cd70037d0bb06bea64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x41511168196CA1952D3B520BB2848F847B GT BLOCKHASH SWAP8 0xF8 0x2B SWAP1 0xCD PUSH17 0x37D0BB06BEA64736F6C63430008180033 ",
							"sourceMap": "773:3344:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207041511168196ca1952d3b520bb2848f847b114097f82b90cd70037d0bb06bea64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x41511168196CA1952D3B520BB2848F847B GT BLOCKHASH SWAP8 0xF8 0x2B SWAP1 0xCD PUSH17 0x37D0BB06BEA64736F6C63430008180033 ",
							"sourceMap": "773:3344:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 773,
									"end": 4117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207041511168196ca1952d3b520bb2848f847b114097f82b90cd70037d0bb06bea64736f6c63430008180033",
									".code": [
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 773,
											"end": 4117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol\":\"Clones\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol\":{\"keccak256\":\"0x2362d7dd406da7ffbd665a99fd4a9c033d5d0e0113429f28848a54ff603d1878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://963cfd950920cc1703d1190b0f0bcd6d5bbce666773e13f1d5955cc356bd9ba8\",\"dweb:/ipfs/QmT6pkaQqEYcvDwHvJakuwNTtBRnaJJFhGW85Mn6238EUh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol\":1265:13048  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol\":1265:13048  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc4a36342476d60c98a464db5b40a495c3299d41696a6191aec67829cdd01e0864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fc4a36342476d60c98a464db5b40a495c3299d41696a6191aec67829cdd01e0864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC BLOBBASEFEE CALLDATASIZE CALLVALUE 0x24 PUSH23 0xD60C98A464DB5B40A495C3299D41696A6191AEC67829CD 0xD0 0x1E ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1265:11783:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fc4a36342476d60c98a464db5b40a495c3299d41696a6191aec67829cdd01e0864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC BLOBBASEFEE CALLDATASIZE CALLVALUE 0x24 PUSH23 0xD60C98A464DB5B40A495C3299D41696A6191AEC67829CD 0xD0 0x1E ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1265:11783:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc4a36342476d60c98a464db5b40a495c3299d41696a6191aec67829cdd01e0864736f6c63430008180033",
									".code": [
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
								".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol\":{\"keccak256\":\"0x3fcc70973c4fd46e32562aa3cb2b5bb465200dc76dd6ac32a6ac83ca36605294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e25c92065f2afba193544cfef02fd8803f192447ed45ddc6e7bed5f892bd21b3\",\"dweb:/ipfs/QmP5Xbh7YBDieZ4rKoX3RCGbG8cmA2NbxYqSio4PfvuW4T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol": {
				"BaseAccount": {
					"abi": [
						{
							"inputs": [],
							"name": "entryPoint",
							"outputs": [
								{
									"internalType": "contract IEntryPoint",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "uint256",
											"name": "callGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "verificationGasLimit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxPriorityFeePerGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct UserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "missingAccountFunds",
									"type": "uint256"
								}
							],
							"name": "validateUserOp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"entryPoint()": "b0d691fe",
							"getNonce()": "d087d288",
							"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":{\"keccak256\":\"0x0844576ffce3c3fd6ec5454d3a142efe5ed119112d7e1c6698c99b5b93a6476f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5e788a3d11d336be698790552bd9f31f1bdc72f43a22a5b2574fb248c819076f\",\"dweb:/ipfs/QmcfToLtD2tA36AL6FKB8Du7EWr43zC5yo2HZFGKeY41Z4\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol\":{\"keccak256\":\"0xdbf3f91dd92200e52294b0606a1344bc7f959426577e27f4fd1e757d04e7b045\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8ea4061342a16e18c5ad652e19fa7d0343493e6302470e498c79f12cd5b4bf6\",\"dweb:/ipfs/QmTvSGFxEZkSg656mx1ombm6a1CU33L8JxqTVtUKN5daML\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol\":{\"keccak256\":\"0x516d1dcafa4a239386340533d87ed0c1eff291c631cf596afaf82262ddfa603d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ed5974a9e0fe8de3de6779ca0ef4c1655a26ca9a73a94b4d8a26789ac1bd09ef\",\"dweb:/ipfs/QmXxjfVDdZS6bqyHo5AfbZthZUtytcCt8Gn87jg8bdM4wv\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol\":{\"keccak256\":\"0xef4668624f5de2d35eba19dd3edfddc3acd5a2b845cae211f299c1311e216f2c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8769f0c62103b659084e7cefdb26eeb9b46b31de03fd4002e264e9afa64868a8\",\"dweb:/ipfs/QmZovAx1SQH6rmhciv1tGSJTAxRq1YBUjUo63mqsrw3did\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol\":{\"keccak256\":\"0x77085fe40d8352eb6d16f02cca3b8b57db016e97173b5341104d4c4fc677531f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c7eec5d8ebaef50e8e856364a6570cac01f609a3dfcd611af6d7fa550f05d54\",\"dweb:/ipfs/QmToDwfQAymfgUWUTg4VMnfZW72fGcmxWbGk1pipw5Bkm1\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol\":{\"keccak256\":\"0x56ed36384e0c62253769a2219b2e9161d88e5f58ae1f781fd3a540c8a399b9a7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9f26a6b28abc3eee5cf63938205ee6274d508b6f3acd5d1af0f041a2f239be45\",\"dweb:/ipfs/QmY4DYvnqU93ta3VNSa6nxNjoWoum6B8t8k9D7wLUvk6m1\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol\":{\"keccak256\":\"0xd9d9a4c7f3189c8b8fa153188096c142f5e3761aacbf983ce3d65640fb3572ed\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b59ca955c5764341e61c27fb41aa048fe135477e9a16cf22e6c0ed199dc0a3cf\",\"dweb:/ipfs/Qmd7f4ei7wo5CkjnVXff2H7mVUnmHTv2zuCrJUDNBfkDTk\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol\":{\"keccak256\":\"0x78aa2145fcfb195f533e68486fd1617a3b6b5bdf53af1b8fd2ab7211459bc8ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1ea19d4707c245e5bdad9df43cd89bbc451b08e074b0cb2156a04c0e1e2c6da\",\"dweb:/ipfs/QmVas9dTRJt9HJQomia5ZTBgQanxyz1akyDAkCHRL3ecx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"entryPoint()": {
								"notice": "return the entryPoint used by this account. subclass should return the current entryPoint used by this account."
							},
							"getNonce()": {
								"notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
							},
							"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
								"notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
							}
						},
						"notice": "Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic",
						"version": 1
					}
				}
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol": {
				"BaseAccountFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "accountAdmin",
									"type": "address"
								}
							],
							"name": "AccountCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "SignerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "SignerRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accountImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "createAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entrypoint",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_end",
									"type": "uint256"
								}
							],
							"name": "getAccounts",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "getAccountsOfSigner",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_adminSigner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllAccounts",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_salt",
									"type": "bytes32"
								}
							],
							"name": "onRegister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_salt",
									"type": "bytes32"
								}
							],
							"name": "onSignerAdded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_salt",
									"type": "bytes32"
								}
							],
							"name": "onSignerRemoved",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAccounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "Receives and executes a batch of function calls on this contract.",
								"params": {
									"data": "The bytes data that makes up the batch of function calls to execute."
								},
								"returns": {
									"results": "The bytes data that makes up the result of the batch of function calls executed."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accountImplementation()": "11464fbe",
							"createAccount(address,bytes)": "d8fd8f44",
							"entrypoint()": "a65d69d4",
							"getAccounts(uint256,uint256)": "e68a7c3b",
							"getAccountsOfSigner(address)": "0e6254fd",
							"getAddress(address,bytes)": "8878ed33",
							"getAllAccounts()": "08e93d0a",
							"isRegistered(address)": "c3c5a547",
							"multicall(bytes[])": "ac9650d8",
							"onRegister(bytes32)": "83a03f8c",
							"onSignerAdded(address,bytes32)": "0b61e12b",
							"onSignerRemoved(address,bytes32)": "9387a380",
							"totalAccounts()": "58451f97"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAdmin\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrypoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"getAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getAccountsOfSigner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminSigner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerAdded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerRemoved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AccountCreated(address,address)\":{\"notice\":\"Emitted when a new Account is created.\"},\"SignerAdded(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"},\"SignerRemoved(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"}},\"kind\":\"user\",\"methods\":{\"accountImplementation()\":{\"notice\":\"Returns the address of the Account implementation.\"},\"createAccount(address,bytes)\":{\"notice\":\"Deploys a new Account for admin.\"},\"getAccounts(uint256,uint256)\":{\"notice\":\"Returns all accounts between the given indices.\"},\"getAccountsOfSigner(address)\":{\"notice\":\"Returns all accounts that the given address is a signer of.\"},\"getAddress(address,bytes)\":{\"notice\":\"Returns the address of an Account that would be deployed with the given admin signer.\"},\"getAllAccounts()\":{\"notice\":\"Returns all accounts created on the factory.\"},\"isRegistered(address)\":{\"notice\":\"Returns whether an account is registered on this factory.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"onRegister(bytes32)\":{\"notice\":\"Callback function for an Account to register itself on the factory.\"},\"onSignerRemoved(address,bytes32)\":{\"notice\":\"Callback function for an Account to un-register its signers.\"},\"totalAccounts()\":{\"notice\":\"Returns the total number of accounts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol\":\"BaseAccountFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol\":{\"keccak256\":\"0x82921a9d2813a43b54ef82352e252f112ce7542accb95f5cfd2db18ef392646b\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://9ad280ac58a70a423deb3a938da2dbbeabc6e3f861abf61073f7c0a218903a57\",\"dweb:/ipfs/QmXy7k5P7z4s6YpJfeAKWWpE1fJdny8hJStHTYVv23RWzg\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol\":{\"keccak256\":\"0x0844576ffce3c3fd6ec5454d3a142efe5ed119112d7e1c6698c99b5b93a6476f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5e788a3d11d336be698790552bd9f31f1bdc72f43a22a5b2574fb248c819076f\",\"dweb:/ipfs/QmcfToLtD2tA36AL6FKB8Du7EWr43zC5yo2HZFGKeY41Z4\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol\":{\"keccak256\":\"0xdbf3f91dd92200e52294b0606a1344bc7f959426577e27f4fd1e757d04e7b045\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8ea4061342a16e18c5ad652e19fa7d0343493e6302470e498c79f12cd5b4bf6\",\"dweb:/ipfs/QmTvSGFxEZkSg656mx1ombm6a1CU33L8JxqTVtUKN5daML\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol\":{\"keccak256\":\"0x820f45842ad539f214db3fbca19fea58702b5ecdd496aa770951904a4938d7e4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://091e913a25e6a3cde14596525e8d5a8656275fd5fcd8fcb56ec3fd7a66d050f9\",\"dweb:/ipfs/Qmbp73fgRHMWyQ2ETsCpVanUXj6NxnzBiJxcEupZwCAKWx\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol\":{\"keccak256\":\"0x65c5ed98c2b7dd9ba4f2c83eaa652b1069470999a04625e33ea197e39aff63b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a3d0c5d28efdae547f3714e341b6caf71f27358d9409a6dcc72ca569aeb9ff6\",\"dweb:/ipfs/QmUBZHg1bCsNGWrSC9d34oPDqriLregwxiRCUjmYYZeR5E\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol\":{\"keccak256\":\"0x34e998c2cfac71ae5837280e487215fc64f17c4212270192442e541527a38871\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://51d201d243ade4b6aa37f88e6dbd8f4886ef2b15a290630367b8b95f8ef1a69c\",\"dweb:/ipfs/QmfHdzvzEugZMatjex3sbp2ehjcRE3mDi7QxEHCi6A25Ww\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol\":{\"keccak256\":\"0x516d1dcafa4a239386340533d87ed0c1eff291c631cf596afaf82262ddfa603d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ed5974a9e0fe8de3de6779ca0ef4c1655a26ca9a73a94b4d8a26789ac1bd09ef\",\"dweb:/ipfs/QmXxjfVDdZS6bqyHo5AfbZthZUtytcCt8Gn87jg8bdM4wv\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol\":{\"keccak256\":\"0xef4668624f5de2d35eba19dd3edfddc3acd5a2b845cae211f299c1311e216f2c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8769f0c62103b659084e7cefdb26eeb9b46b31de03fd4002e264e9afa64868a8\",\"dweb:/ipfs/QmZovAx1SQH6rmhciv1tGSJTAxRq1YBUjUo63mqsrw3did\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol\":{\"keccak256\":\"0xa569531ddd48bf1bd6fcb12927a732ea49a5277429fbba7e44108f4f8d336234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd423a5b7315e40dd6cf31ce3c34d236d349c8959d0fed44a1dc84eb431429c\",\"dweb:/ipfs/QmYR9XkzCvPzT48HieLHkujzF1cAAZT3E8pazRCgCU8NaJ\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol\":{\"keccak256\":\"0x77085fe40d8352eb6d16f02cca3b8b57db016e97173b5341104d4c4fc677531f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c7eec5d8ebaef50e8e856364a6570cac01f609a3dfcd611af6d7fa550f05d54\",\"dweb:/ipfs/QmToDwfQAymfgUWUTg4VMnfZW72fGcmxWbGk1pipw5Bkm1\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol\":{\"keccak256\":\"0x56ed36384e0c62253769a2219b2e9161d88e5f58ae1f781fd3a540c8a399b9a7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9f26a6b28abc3eee5cf63938205ee6274d508b6f3acd5d1af0f041a2f239be45\",\"dweb:/ipfs/QmY4DYvnqU93ta3VNSa6nxNjoWoum6B8t8k9D7wLUvk6m1\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol\":{\"keccak256\":\"0x3793ed8492fa575cf73beed883a26cda685bb53f63950599c1280eae9a73fada\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9e2916d53829baff87699664e65b95ff536c25d02d4b9ff2433eab54812f9b0\",\"dweb:/ipfs/QmXSqLvmNZ3qLLC42TCDzNEia2mUmALdTTfLxKmfdqNEot\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol\":{\"keccak256\":\"0x2516d3f849615cb70f26692e1f1c4c25d056eb74fa68b18aa46c46edb7fa5ec7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a38ea655a3553fa7a32610ee11de2e3d5ae36367a667a0d1c229ffa6c073c5e\",\"dweb:/ipfs/QmU9GUNZkvWnSbRoGWfbqDnZb6GAMnXHBerkrqN93bqeig\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol\":{\"keccak256\":\"0x2362d7dd406da7ffbd665a99fd4a9c033d5d0e0113429f28848a54ff603d1878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://963cfd950920cc1703d1190b0f0bcd6d5bbce666773e13f1d5955cc356bd9ba8\",\"dweb:/ipfs/QmT6pkaQqEYcvDwHvJakuwNTtBRnaJJFhGW85Mn6238EUh\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol\":{\"keccak256\":\"0x3fcc70973c4fd46e32562aa3cb2b5bb465200dc76dd6ac32a6ac83ca36605294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e25c92065f2afba193544cfef02fd8803f192447ed45ddc6e7bed5f892bd21b3\",\"dweb:/ipfs/QmP5Xbh7YBDieZ4rKoX3RCGbG8cmA2NbxYqSio4PfvuW4T\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol\":{\"keccak256\":\"0xd9d9a4c7f3189c8b8fa153188096c142f5e3761aacbf983ce3d65640fb3572ed\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b59ca955c5764341e61c27fb41aa048fe135477e9a16cf22e6c0ed199dc0a3cf\",\"dweb:/ipfs/Qmd7f4ei7wo5CkjnVXff2H7mVUnmHTv2zuCrJUDNBfkDTk\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol\":{\"keccak256\":\"0x5b64d43318db2c3f3497777044d12acf761bc60256b10ca1b742a6735a3bbe40\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e8b780ec4a55c0031fe6cc9597db2e42362fadd3ff39b75761fac38d586446a5\",\"dweb:/ipfs/QmeGyjZTVnTXtQmdABnUiAZmGCKuie8T8uhyG12fjEsSTX\"]},\".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol\":{\"keccak256\":\"0x78aa2145fcfb195f533e68486fd1617a3b6b5bdf53af1b8fd2ab7211459bc8ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a1ea19d4707c245e5bdad9df43cd89bbc451b08e074b0cb2156a04c0e1e2c6da\",\"dweb:/ipfs/QmVas9dTRJt9HJQomia5ZTBgQanxyz1akyDAkCHRL3ecx7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2062,
								"contract": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol:BaseAccountFactory",
								"label": "allAccounts",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(AddressSet)1608_storage"
							},
							{
								"astId": 2067,
								"contract": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol:BaseAccountFactory",
								"label": "accountsOfSigner",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(AddressSet)1608_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(AddressSet)1608_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1608_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1608_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1607,
										"contract": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol:BaseAccountFactory",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1307_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1307_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1302,
										"contract": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol:BaseAccountFactory",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1306,
										"contract": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol:BaseAccountFactory",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"AccountCreated(address,address)": {
								"notice": "Emitted when a new Account is created."
							},
							"SignerAdded(address,address)": {
								"notice": "Emitted when a new signer is added to an Account."
							},
							"SignerRemoved(address,address)": {
								"notice": "Emitted when a new signer is added to an Account."
							}
						},
						"kind": "user",
						"methods": {
							"accountImplementation()": {
								"notice": "Returns the address of the Account implementation."
							},
							"createAccount(address,bytes)": {
								"notice": "Deploys a new Account for admin."
							},
							"getAccounts(uint256,uint256)": {
								"notice": "Returns all accounts between the given indices."
							},
							"getAccountsOfSigner(address)": {
								"notice": "Returns all accounts that the given address is a signer of."
							},
							"getAddress(address,bytes)": {
								"notice": "Returns the address of an Account that would be deployed with the given admin signer."
							},
							"getAllAccounts()": {
								"notice": "Returns all accounts created on the factory."
							},
							"isRegistered(address)": {
								"notice": "Returns whether an account is registered on this factory."
							},
							"multicall(bytes[])": {
								"notice": "Receives and executes a batch of function calls on this contract."
							},
							"onRegister(bytes32)": {
								"notice": "Callback function for an Account to register itself on the factory."
							},
							"onSignerRemoved(address,bytes32)": {
								"notice": "Callback function for an Account to un-register its signers."
							},
							"totalAccounts()": {
								"notice": "Returns the total number of accounts."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
					"exportedSymbols": {
						"Address": [
							1186
						],
						"IMulticall": [
							748
						],
						"Multicall": [
							58
						]
					},
					"id": 59,
					"license": "Apache 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:0"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
							"file": "../../src/lib/Address.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 1187,
							"src": "91:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
							"file": "../../src/interface/IMulticall.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 749,
							"src": "128:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IMulticall",
										"nameLocations": [
											"329:10:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 748,
										"src": "329:10:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "329:10:0"
								}
							],
							"canonicalName": "Multicall",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "176:129:0",
								"text": " @dev Provides a function to batch together multiple calls in a single external call.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58,
								748
							],
							"name": "Multicall",
							"nameLocation": "316:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										747
									],
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "833:222:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "results",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "844:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 21,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "866:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "bytes calldata[] calldata"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "871:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "866:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "854:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 18,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "858:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																},
																"id": 19,
																"nodeType": "ArrayTypeName",
																"src": "858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
																	"typeString": "bytes[]"
																}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "854:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes memory[] memory"
														}
													},
													"src": "844:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
														"typeString": "bytes memory[] memory"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "844:34:0"
											},
											{
												"body": {
													"id": 52,
													"nodeType": "Block",
													"src": "931:92:0",
													"statements": [
														{
															"expression": {
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 37,
																		"name": "results",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "946:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 39,
																	"indexExpression": {
																		"id": 38,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "946:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "996:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Multicall_$58",
																						"typeString": "contract Multicall"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Multicall_$58",
																						"typeString": "contract Multicall"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "988:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "988:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "988:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 46,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "1003:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "bytes calldata[] calldata"
																				}
																			},
																			"id": 48,
																			"indexExpression": {
																				"id": 47,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "1008:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1003:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 40,
																			"name": "Address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1186,
																			"src": "959:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Address_$1186_$",
																				"typeString": "type(library Address)"
																			}
																		},
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "967:20:0",
																		"memberName": "functionDelegateCall",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1113,
																		"src": "959:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (address,bytes memory) returns (bytes memory)"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "959:52:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"src": "946:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 51,
															"nodeType": "ExpressionStatement",
															"src": "946:65:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "909:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 31,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "918:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "913:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "909:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"initializationExpression": {
													"assignments": [
														27
													],
													"declarations": [
														{
															"constant": false,
															"id": 27,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "902:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 53,
															"src": "894:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 26,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "894:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 29,
													"initialValue": {
														"hexValue": "30",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "894:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "926:3:0",
														"subExpression": {
															"id": 34,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "926:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 36,
													"nodeType": "ExpressionStatement",
													"src": "926:3:0"
												},
												"nodeType": "ForStatement",
												"src": "889:134:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "results",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "1040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
														"typeString": "bytes memory[] memory"
													}
												},
												"functionReturnParameters": 16,
												"id": 55,
												"nodeType": "Return",
												"src": "1033:14:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "347:379:0",
										"text": "  @notice Receives and executes a batch of function calls on this contract.\n  @dev Receives and executes a batch of function calls on this contract.\n  @param data The bytes data that makes up the batch of function calls to execute.\n  @return results The bytes data that makes up the result of the batch of function calls executed."
									},
									"functionSelector": "ac9650d8",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "741:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 12,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "791:8:0"
									},
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "768:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "751:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 8,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "751:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 9,
													"nodeType": "ArrayTypeName",
													"src": "751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:23:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "824:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "809:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 13,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "809:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 14,
													"nodeType": "ArrayTypeName",
													"src": "809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:24:0"
									},
									"scope": 58,
									"src": "732:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 59,
							"src": "307:751:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:1018:0"
				},
				"id": 0
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
					"exportedSymbols": {
						"UserOperation": [
							86
						],
						"UserOperationLib": [
							256
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 257,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:1"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
							"file": "../../src/utils/Helpers.sol",
							"id": 62,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 257,
							"sourceUnit": 2717,
							"src": "109:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 61,
										"name": "calldataKeccak",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2716,
										"src": "118:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "UserOperation",
							"documentation": {
								"id": 63,
								"nodeType": "StructuredDocumentation",
								"src": "174:1004:1",
								"text": " User Operation struct\n @param sender the sender account of this request.\n @param nonce unique value the sender uses to verify it is not a replay.\n @param initCode if set, the account contract will be created by this constructor/\n @param callData the method call to execute on this account.\n @param callGasLimit the gas limit passed to the callData method call.\n @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n @param maxFeePerGas same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID."
							},
							"id": 86,
							"members": [
								{
									"constant": false,
									"id": 65,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "1216:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1208:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 64,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 67,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1237:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1229:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 66,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1229:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "initCode",
									"nameLocation": "1255:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1249:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 68,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1249:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "mutable",
									"name": "callData",
									"nameLocation": "1276:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1270:14:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 70,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1270:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "callGasLimit",
									"nameLocation": "1299:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1291:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1291:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 75,
									"mutability": "mutable",
									"name": "verificationGasLimit",
									"nameLocation": "1326:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1318:28:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 74,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1318:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 77,
									"mutability": "mutable",
									"name": "preVerificationGas",
									"nameLocation": "1361:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1353:26:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1353:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 79,
									"mutability": "mutable",
									"name": "maxFeePerGas",
									"nameLocation": "1394:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1386:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 78,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1386:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 81,
									"mutability": "mutable",
									"name": "maxPriorityFeePerGas",
									"nameLocation": "1421:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1413:28:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 80,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1413:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "paymasterAndData",
									"nameLocation": "1454:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1448:22:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 82,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1448:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "signature",
									"nameLocation": "1483:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1477:15:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 84,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1477:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "UserOperation",
							"nameLocation": "1187:13:1",
							"nodeType": "StructDefinition",
							"scope": 257,
							"src": "1180:316:1",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserOperationLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "1500:79:1",
								"text": " Utility functions helpful when working with UserOperation structs."
							},
							"fullyImplemented": true,
							"id": 256,
							"linearizedBaseContracts": [
								256
							],
							"name": "UserOperationLib",
							"nameLocation": "1589:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1695:228:1",
										"statements": [
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1714:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "1706:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 95,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1706:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"nodeType": "VariableDeclarationStatement",
												"src": "1706:12:1"
											},
											{
												"AST": {
													"nativeSrc": "1822:54:1",
													"nodeType": "YulBlock",
													"src": "1822:54:1",
													"statements": [
														{
															"nativeSrc": "1837:28:1",
															"nodeType": "YulAssignment",
															"src": "1837:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "userOp",
																		"nativeSrc": "1858:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1845:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1845:12:1"
																},
																"nativeSrc": "1845:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1845:20:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1837:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1837:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 96,
														"isOffset": false,
														"isSlot": false,
														"src": "1837:4:1",
														"valueSize": 1
													},
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "1858:6:1",
														"valueSize": 1
													}
												],
												"id": 98,
												"nodeType": "InlineAssembly",
												"src": "1813:63:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 103,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1909:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 101,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "1901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1901:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1893:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 99,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1893:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1893:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 106,
												"nodeType": "Return",
												"src": "1886:29:1"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSender",
									"nameLocation": "1622:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1655:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1632:29:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 89,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 88,
														"name": "UserOperation",
														"nameLocations": [
															"1632:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "1632:13:1"
													},
													"referencedDeclaration": 86,
													"src": "1632:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:31:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1686:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:1"
									},
									"scope": 256,
									"src": "1613:310:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "2148:437:1",
										"statements": [
											{
												"id": 141,
												"nodeType": "UncheckedBlock",
												"src": "2159:419:1",
												"statements": [
													{
														"assignments": [
															117
														],
														"declarations": [
															{
																"constant": false,
																"id": 117,
																"mutability": "mutable",
																"name": "maxFeePerGas",
																"nameLocation": "2192:12:1",
																"nodeType": "VariableDeclaration",
																"scope": 141,
																"src": "2184:20:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 116,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2184:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 120,
														"initialValue": {
															"expression": {
																"id": 118,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2207:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2214:12:1",
															"memberName": "maxFeePerGas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 79,
															"src": "2207:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2184:42:1"
													},
													{
														"assignments": [
															122
														],
														"declarations": [
															{
																"constant": false,
																"id": 122,
																"mutability": "mutable",
																"name": "maxPriorityFeePerGas",
																"nameLocation": "2249:20:1",
																"nodeType": "VariableDeclaration",
																"scope": 141,
																"src": "2241:28:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2241:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 125,
														"initialValue": {
															"expression": {
																"id": 123,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2272:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2279:20:1",
															"memberName": "maxPriorityFeePerGas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 81,
															"src": "2272:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2241:58:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 126,
																"name": "maxFeePerGas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2318:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 127,
																"name": "maxPriorityFeePerGas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2334:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2318:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 132,
														"nodeType": "IfStatement",
														"src": "2314:176:1",
														"trueBody": {
															"id": 131,
															"nodeType": "Block",
															"src": "2356:134:1",
															"statements": [
																{
																	"expression": {
																		"id": 129,
																		"name": "maxFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "2462:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 115,
																	"id": 130,
																	"nodeType": "Return",
																	"src": "2455:19:1"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 134,
																	"name": "maxFeePerGas",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "2515:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 135,
																		"name": "maxPriorityFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "2529:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 136,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2558:7:1",
																		"memberName": "basefee",
																		"nodeType": "MemberAccess",
																		"src": "2552:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2529:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 133,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "2511:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:55:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 115,
														"id": 140,
														"nodeType": "Return",
														"src": "2504:62:1"
													}
												]
											}
										]
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gasPrice",
									"nameLocation": "2076:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2108:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "2085:29:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 109,
														"name": "UserOperation",
														"nameLocations": [
															"2085:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "2085:13:1"
													},
													"referencedDeclaration": 86,
													"src": "2085:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:31:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "2139:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:9:1"
									},
									"scope": 256,
									"src": "2067:518:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2679:997:1",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2698:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2690:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 151,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2690:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [
														{
															"id": 154,
															"name": "userOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "2717:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																"typeString": "struct UserOperation calldata"
															}
														],
														"id": 153,
														"name": "getSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2707:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$86_calldata_ptr_$returns$_t_address_$",
															"typeString": "function (struct UserOperation calldata) pure returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2690:34:1"
											},
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "2743:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2735:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2735:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": {
													"expression": {
														"id": 159,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2751:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2758:5:1",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 67,
													"src": "2751:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2735:28:1"
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "hashInitCode",
														"nameLocation": "2782:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2774:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 162,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 165,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "2812:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2819:8:1",
															"memberName": "initCode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "2812:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 164,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2716,
														"src": "2797:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2797:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2774:54:1"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "hashCallData",
														"nameLocation": "2847:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2839:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 169,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2839:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 172,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "2877:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:8:1",
															"memberName": "callData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 71,
															"src": "2877:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 171,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2716,
														"src": "2862:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2862:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2839:54:1"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "callGasLimit",
														"nameLocation": "2912:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2904:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 176,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2904:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2927:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2934:12:1",
													"memberName": "callGasLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 73,
													"src": "2927:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2904:42:1"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "verificationGasLimit",
														"nameLocation": "2965:20:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2957:28:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2957:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"expression": {
														"id": 183,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2988:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2995:20:1",
													"memberName": "verificationGasLimit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 75,
													"src": "2988:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2957:58:1"
											},
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "preVerificationGas",
														"nameLocation": "3034:18:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "3026:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3026:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 190,
												"initialValue": {
													"expression": {
														"id": 188,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "3055:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3062:18:1",
													"memberName": "preVerificationGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 77,
													"src": "3055:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:54:1"
											},
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "maxFeePerGas",
														"nameLocation": "3099:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "3091:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3091:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"expression": {
														"id": 193,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "3114:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3121:12:1",
													"memberName": "maxFeePerGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 79,
													"src": "3114:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3091:42:1"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "maxPriorityFeePerGas",
														"nameLocation": "3152:20:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "3144:28:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3144:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"expression": {
														"id": 198,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "3175:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
															"typeString": "struct UserOperation calldata"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3182:20:1",
													"memberName": "maxPriorityFeePerGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 81,
													"src": "3175:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3144:58:1"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "hashPaymasterAndData",
														"nameLocation": "3221:20:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "3213:28:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 201,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3213:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 204,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3259:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3266:16:1",
															"memberName": "paymasterAndData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 83,
															"src": "3259:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 203,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2716,
														"src": "3244:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3244:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3213:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "3345:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "3370:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 212,
															"name": "hashInitCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3394:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "hashCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3425:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "callGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3456:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 215,
															"name": "verificationGasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3487:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 216,
															"name": "preVerificationGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "3526:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 217,
															"name": "maxFeePerGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3563:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 218,
															"name": "maxPriorityFeePerGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3594:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 219,
															"name": "hashPaymasterAndData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "3633:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 208,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3316:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3320:6:1",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "3316:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3316:352:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 150,
												"id": 221,
												"nodeType": "Return",
												"src": "3296:372:1"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pack",
									"nameLocation": "2602:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2630:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2607:29:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 144,
														"name": "UserOperation",
														"nameLocations": [
															"2607:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "2607:13:1"
													},
													"referencedDeclaration": 86,
													"src": "2607:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:31:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "2674:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2661:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2661:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:18:1"
									},
									"scope": 256,
									"src": "2593:1083:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "3761:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 233,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "3794:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																		"typeString": "struct UserOperation calldata"
																	}
																],
																"id": 232,
																"name": "pack",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "3789:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_UserOperation_$86_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (struct UserOperation calldata) pure returns (bytes memory)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3789:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 231,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3779:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3779:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 230,
												"id": 236,
												"nodeType": "Return",
												"src": "3772:30:1"
											}
										]
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "3693:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3721:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3698:29:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "UserOperation",
														"nameLocations": [
															"3698:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "3698:13:1"
													},
													"referencedDeclaration": 86,
													"src": "3698:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3697:31:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:9:1"
									},
									"scope": 256,
									"src": "3684:126:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "3885:39:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 247,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3903:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 248,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3907:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3903:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 251,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "3915:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3903:13:1",
													"trueExpression": {
														"id": 250,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "3911:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 253,
												"nodeType": "Return",
												"src": "3896:20:1"
											}
										]
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3827:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3839:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3831:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3850:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3842:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3842:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:22:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3875:9:1"
									},
									"scope": 256,
									"src": "3818:106:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 257,
							"src": "1581:2346:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:3890:1"
				},
				"id": 1
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
					"exportedSymbols": {
						"IAccount": [
							273
						],
						"UserOperation": [
							86
						],
						"UserOperationLib": [
							256
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 274,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:2"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
							"file": "../../extension/upgradeable/UserOperation.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 274,
							"sourceUnit": 257,
							"src": "65:55:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccount",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 273,
							"linearizedBaseContracts": [
								273
							],
							"name": "IAccount",
							"nameLocation": "134:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "150:1884:2",
										"text": " Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n      The excess is left as a deposit in the entrypoint, for future calls.\n      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
									},
									"functionSelector": "3a871cdd",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOp",
									"nameLocation": "2049:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2097:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2074:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 261,
														"name": "UserOperation",
														"nameLocations": [
															"2074:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "2074:13:2"
													},
													"referencedDeclaration": 86,
													"src": "2074:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2122:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2114:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "missingAccountFunds",
												"nameLocation": "2151:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2143:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:114:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "2204:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2196:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:24:2"
									},
									"scope": 273,
									"src": "2040:180:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 274,
							"src": "124:2099:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:2186:2"
				},
				"id": 2
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
					"exportedSymbols": {
						"IAccountFactory": [
							295
						],
						"IAccountFactoryCore": [
							361
						]
					},
					"id": 296,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 275,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:3"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
							"file": "./IAccountFactoryCore.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 362,
							"src": "65:35:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "IAccountFactoryCore",
										"nameLocations": [
											"133:19:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "133:19:3"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "133:19:3"
								}
							],
							"canonicalName": "IAccountFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								361
							],
							"name": "IAccountFactory",
							"nameLocation": "114:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "347:69:3",
										"text": "@notice Callback function for an Account to register its signers."
									},
									"functionSelector": "0b61e12b",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onSignerAdded",
									"nameLocation": "431:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "453:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "445:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "469:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "461:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:30:3"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:0:3"
									},
									"scope": 295,
									"src": "422:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "492:72:3",
										"text": "@notice Callback function for an Account to un-register its signers."
									},
									"functionSelector": "9387a380",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onSignerRemoved",
									"nameLocation": "579:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "603:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "595:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "619:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "611:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:30:3"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "633:0:3"
									},
									"scope": 295,
									"src": "570:64:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 296,
							"src": "104:533:3",
							"usedErrors": [],
							"usedEvents": [
								304,
								311,
								318
							]
						}
					],
					"src": "37:600:3"
				},
				"id": 3
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactoryCore.sol",
					"exportedSymbols": {
						"IAccountFactoryCore": [
							361
						]
					},
					"id": 362,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccountFactoryCore",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 361,
							"linearizedBaseContracts": [
								361
							],
							"name": "IAccountFactoryCore",
							"nameLocation": "75:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "285:50:4",
										"text": "@notice Emitted when a new Account is created."
									},
									"eventSelector": "ac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc8",
									"id": 304,
									"name": "AccountCreated",
									"nameLocation": "347:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "378:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "362:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "accountAdmin",
												"nameLocation": "403:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "387:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:55:4"
									},
									"src": "341:76:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "425:61:4",
										"text": "@notice Emitted when a new signer is added to an Account."
									},
									"eventSelector": "12146497b3b826918ec47f0cac7272a09ed06b30c16c030e99ec48ff5dd60b47",
									"id": 311,
									"name": "SignerAdded",
									"nameLocation": "498:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "510:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"indexed": true,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "551:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "535:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:49:4"
									},
									"src": "492:67:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "567:61:4",
										"text": "@notice Emitted when a new signer is added to an Account."
									},
									"eventSelector": "98d1ebbe00ae92a5de96a0f49742a8afa89f42363592bc2e7cfaaed68b45e7a6",
									"id": 318,
									"name": "SignerRemoved",
									"nameLocation": "640:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "670:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "654:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "679:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "634:69:4"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "899:44:4",
										"text": "@notice Deploys a new Account for admin."
									},
									"functionSelector": "d8fd8f44",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAccount",
									"nameLocation": "958:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "980:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "972:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "987:20:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "987:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:37:4"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 361,
									"src": "949:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1239:62:4",
										"text": "@notice Returns the address of the Account implementation."
									},
									"functionSelector": "11464fbe",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accountImplementation",
									"nameLocation": "1316:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:4"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1363:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:9:4"
									},
									"scope": 361,
									"src": "1307:65:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1380:56:4",
										"text": "@notice Returns all accounts created on the factory."
									},
									"functionSelector": "08e93d0a",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllAccounts",
									"nameLocation": "1451:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:2:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1491:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1491:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "1491:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:18:4"
									},
									"scope": 361,
									"src": "1442:67:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1517:97:4",
										"text": "@notice Returns the address of an Account that would be deployed with the given admin signer."
									},
									"functionSelector": "8878ed33",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "1629:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "adminSigner",
												"nameLocation": "1648:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1640:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1676:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1661:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1661:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:42:4"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1705:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:9:4"
									},
									"scope": 361,
									"src": "1620:94:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1722:88:4",
										"text": "@notice Returns all accounts on which a signer has (active or inactive) permissions."
									},
									"functionSelector": "0e6254fd",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountsOfSigner",
									"nameLocation": "1825:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1853:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1845:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1844:16:4"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "1901:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1884:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 356,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1884:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 357,
													"nodeType": "ArrayTypeName",
													"src": "1884:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1883:27:4"
									},
									"scope": 361,
									"src": "1816:95:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 362,
							"src": "65:1849:4",
							"usedErrors": [],
							"usedEvents": [
								304,
								311,
								318
							]
						}
					],
					"src": "37:1877:4"
				},
				"id": 4
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
					"exportedSymbols": {
						"IAccountPermissions": [
							494
						]
					},
					"id": 495,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccountPermissions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 364,
								"nodeType": "StructuredDocumentation",
								"src": "67:22:5",
								"text": "@author thirdweb"
							},
							"fullyImplemented": false,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "IAccountPermissions",
							"nameLocation": "101:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IAccountPermissions.SignerPermissionRequest",
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "310:1066:5",
										"text": "  @notice The payload that must be signed by an authorized wallet to set permissions for a signer to use the smart wallet.\n  @param signer The addres of the signer to give permissions.\n  @param approvedTargets The list of approved targets that a role holder can call using the smart wallet.\n  @param nativeTokenLimitPerTransaction The maximum value that can be transferred by a role holder in a single transaction.\n  @param permissionStartTimestamp The UNIX timestamp at and after which a signer has permission to use the smart wallet.\n  @param permissionEndTimestamp The UNIX timestamp at and after which a signer no longer has permission to use the smart wallet.\n  @param reqValidityStartTimestamp The UNIX timestamp at and after which a signature is valid.\n  @param reqValidityEndTimestamp The UNIX timestamp at and after which a signature is invalid/expired.\n  @param uid A unique non-repeatable ID for the payload.\n  @param isAdmin Whether the signer should be an admin."
									},
									"id": 385,
									"members": [
										{
											"constant": false,
											"id": 367,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "1432:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1424:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 366,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "isAdmin",
											"nameLocation": "1455:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1449:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 368,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1449:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "approvedTargets",
											"nameLocation": "1483:15:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1473:25:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 371,
												"nodeType": "ArrayTypeName",
												"src": "1473:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 374,
											"mutability": "mutable",
											"name": "nativeTokenLimitPerTransaction",
											"nameLocation": "1517:30:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1509:38:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 373,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1509:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 376,
											"mutability": "mutable",
											"name": "permissionStartTimestamp",
											"nameLocation": "1566:24:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1558:32:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 375,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1558:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 378,
											"mutability": "mutable",
											"name": "permissionEndTimestamp",
											"nameLocation": "1609:22:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1601:30:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 377,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1601:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 380,
											"mutability": "mutable",
											"name": "reqValidityStartTimestamp",
											"nameLocation": "1650:25:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1642:33:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 379,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1642:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 382,
											"mutability": "mutable",
											"name": "reqValidityEndTimestamp",
											"nameLocation": "1694:23:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1686:31:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 381,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 384,
											"mutability": "mutable",
											"name": "uid",
											"nameLocation": "1736:3:5",
											"nodeType": "VariableDeclaration",
											"scope": 385,
											"src": "1728:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 383,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1728:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignerPermissionRequest",
									"nameLocation": "1389:23:5",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "1382:365:5",
									"visibility": "public"
								},
								{
									"canonicalName": "IAccountPermissions.SignerPermissions",
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1755:634:5",
										"text": "  @notice The permissions that a signer has to use the smart wallet.\n  @param signer The address of the signer.\n  @param approvedTargets The list of approved targets that a role holder can call using the smart wallet.\n  @param nativeTokenLimitPerTransaction The maximum value that can be transferred by a role holder in a single transaction.\n  @param startTimestamp The UNIX timestamp at and after which a signer has permission to use the smart wallet.\n  @param endTimestamp The UNIX timestamp at and after which a signer no longer has permission to use the smart wallet."
									},
									"id": 398,
									"members": [
										{
											"constant": false,
											"id": 388,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "2439:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "2431:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 387,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2431:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 391,
											"mutability": "mutable",
											"name": "approvedTargets",
											"nameLocation": "2466:15:5",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "2456:25:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 390,
												"nodeType": "ArrayTypeName",
												"src": "2456:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 393,
											"mutability": "mutable",
											"name": "nativeTokenLimitPerTransaction",
											"nameLocation": "2500:30:5",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "2492:38:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 392,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2492:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 395,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2549:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "2541:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 394,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2541:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 397,
											"mutability": "mutable",
											"name": "endTimestamp",
											"nameLocation": "2582:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 398,
											"src": "2574:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 396,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2574:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignerPermissions",
									"nameLocation": "2402:17:5",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "2395:207:5",
									"visibility": "public"
								},
								{
									"canonicalName": "IAccountPermissions.SignerPermissionsStatic",
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "2610:493:5",
										"text": "  @notice Internal struct for storing permissions for a signer (without approved targets).\n  @param nativeTokenLimitPerTransaction The maximum value that can be transferred by a role holder in a single transaction.\n  @param startTimestamp The UNIX timestamp at and after which a signer has permission to use the smart wallet.\n  @param endTimestamp The UNIX timestamp at and after which a signer no longer has permission to use the smart wallet."
									},
									"id": 406,
									"members": [
										{
											"constant": false,
											"id": 401,
											"mutability": "mutable",
											"name": "nativeTokenLimitPerTransaction",
											"nameLocation": "3159:30:5",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "3151:38:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 400,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3151:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 403,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "3208:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "3200:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 402,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "3200:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 405,
											"mutability": "mutable",
											"name": "endTimestamp",
											"nameLocation": "3241:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 406,
											"src": "3233:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 404,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "3233:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignerPermissionsStatic",
									"nameLocation": "3116:23:5",
									"nodeType": "StructDefinition",
									"scope": 494,
									"src": "3109:152:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3452:62:5",
										"text": "@notice Emitted when permissions for a signer are updated."
									},
									"eventSelector": "f21d10c26e35863a8df291aca54181ee8c4a3bc8e00246c3f7a5a14b69d826a7",
									"id": 416,
									"name": "SignerPermissionsUpdated",
									"nameLocation": "3526:24:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"mutability": "mutable",
												"name": "authorizingSigner",
												"nameLocation": "3577:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3561:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "targetSigner",
												"nameLocation": "3621:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3605:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3605:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "3668:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3644:35:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignerPermissionRequest_$385_memory_ptr",
													"typeString": "struct IAccountPermissions.SignerPermissionRequest"
												},
												"typeName": {
													"id": 413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 412,
														"name": "SignerPermissionRequest",
														"nameLocations": [
															"3644:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 385,
														"src": "3644:23:5"
													},
													"referencedDeclaration": 385,
													"src": "3644:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignerPermissionRequest_$385_storage_ptr",
														"typeString": "struct IAccountPermissions.SignerPermissionRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:136:5"
									},
									"src": "3520:167:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "3695:52:5",
										"text": "@notice Emitted when an admin is set or removed."
									},
									"eventSelector": "235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a11133",
									"id": 423,
									"name": "AdminUpdated",
									"nameLocation": "3759:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"indexed": true,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "3788:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3772:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3772:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "isAdmin",
												"nameLocation": "3801:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3796:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3796:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:38:5"
									},
									"src": "3753:57:5"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "4005:58:5",
										"text": "@notice Returns whether the given account is an admin."
									},
									"functionSelector": "24d7806c",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "4078:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "4094:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4086:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:16:5"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4125:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4125:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:6:5"
									},
									"scope": 494,
									"src": "4069:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "4139:81:5",
										"text": "@notice Returns whether the given account is an active signer on the account."
									},
									"functionSelector": "7dff5a79",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isActiveSigner",
									"nameLocation": "4235:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "4258:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4250:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4249:16:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4289:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4289:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:6:5"
									},
									"scope": 494,
									"src": "4226:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4303:83:5",
										"text": "@notice Returns the restrictions under which a signer can use the smart wallet."
									},
									"functionSelector": "f15d424e",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPermissionsForSigner",
									"nameLocation": "4401:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "4433:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4425:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:16:5"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "4489:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4464:36:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignerPermissions_$398_memory_ptr",
													"typeString": "struct IAccountPermissions.SignerPermissions"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "SignerPermissions",
														"nameLocations": [
															"4464:17:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 398,
														"src": "4464:17:5"
													},
													"referencedDeclaration": 398,
													"src": "4464:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignerPermissions_$398_storage_ptr",
														"typeString": "struct IAccountPermissions.SignerPermissions"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:38:5"
									},
									"scope": 494,
									"src": "4392:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "4510:67:5",
										"text": "@notice Returns all active and inactive signers of the account."
									},
									"functionSelector": "d42f2f35",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllSigners",
									"nameLocation": "4592:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4605:2:5"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "signers",
												"nameLocation": "4658:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4631:34:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignerPermissions_$398_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IAccountPermissions.SignerPermissions[]"
												},
												"typeName": {
													"baseType": {
														"id": 452,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 451,
															"name": "SignerPermissions",
															"nameLocations": [
																"4631:17:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 398,
															"src": "4631:17:5"
														},
														"referencedDeclaration": 398,
														"src": "4631:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignerPermissions_$398_storage_ptr",
															"typeString": "struct IAccountPermissions.SignerPermissions"
														}
													},
													"id": 453,
													"nodeType": "ArrayTypeName",
													"src": "4631:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignerPermissions_$398_storage_$dyn_storage_ptr",
														"typeString": "struct IAccountPermissions.SignerPermissions[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:36:5"
									},
									"scope": 494,
									"src": "4583:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4675:75:5",
										"text": "@notice Returns all signers with active permissions to use the account."
									},
									"functionSelector": "8b52d723",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllActiveSigners",
									"nameLocation": "4765:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4784:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "signers",
												"nameLocation": "4837:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4810:34:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignerPermissions_$398_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IAccountPermissions.SignerPermissions[]"
												},
												"typeName": {
													"baseType": {
														"id": 460,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 459,
															"name": "SignerPermissions",
															"nameLocations": [
																"4810:17:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 398,
															"src": "4810:17:5"
														},
														"referencedDeclaration": 398,
														"src": "4810:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignerPermissions_$398_storage_ptr",
															"typeString": "struct IAccountPermissions.SignerPermissions"
														}
													},
													"id": 461,
													"nodeType": "ArrayTypeName",
													"src": "4810:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignerPermissions_$398_storage_$dyn_storage_ptr",
														"typeString": "struct IAccountPermissions.SignerPermissions[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4809:36:5"
									},
									"scope": 494,
									"src": "4756:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "4854:46:5",
										"text": "@notice Returns all admins of the account."
									},
									"functionSelector": "e9523c97",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllAdmins",
									"nameLocation": "4915:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4927:2:5"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "admins",
												"nameLocation": "4970:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4953:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 467,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4953:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 468,
													"nodeType": "ArrayTypeName",
													"src": "4953:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4952:25:5"
									},
									"scope": 494,
									"src": "4906:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4986:68:5",
										"text": "@dev Verifies that a request is signed by an authorized account."
									},
									"functionSelector": "a9082d84",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignerPermissionRequest",
									"nameLocation": "5069:29:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "5142:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5109:36:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignerPermissionRequest_$385_calldata_ptr",
													"typeString": "struct IAccountPermissions.SignerPermissionRequest"
												},
												"typeName": {
													"id": 474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 473,
														"name": "SignerPermissionRequest",
														"nameLocations": [
															"5109:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 385,
														"src": "5109:23:5"
													},
													"referencedDeclaration": 385,
													"src": "5109:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignerPermissionRequest_$385_storage_ptr",
														"typeString": "struct IAccountPermissions.SignerPermissionRequest"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5171:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5156:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5156:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5098:89:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5216:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5211:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5211:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "5233:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "5225:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:30:5"
									},
									"scope": 494,
									"src": "5060:181:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "5440:52:5",
										"text": "@notice Sets the permissions for a given signer."
									},
									"functionSelector": "5892e236",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPermissionsForSigner",
									"nameLocation": "5507:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "req",
												"nameLocation": "5564:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "5531:36:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignerPermissionRequest_$385_calldata_ptr",
													"typeString": "struct IAccountPermissions.SignerPermissionRequest"
												},
												"typeName": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "SignerPermissionRequest",
														"nameLocations": [
															"5531:23:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 385,
														"src": "5531:23:5"
													},
													"referencedDeclaration": 385,
													"src": "5531:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignerPermissionRequest_$385_storage_ptr",
														"typeString": "struct IAccountPermissions.SignerPermissionRequest"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5584:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "5569:24:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5569:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5530:64:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5603:0:5"
									},
									"scope": 494,
									"src": "5498:106:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 495,
							"src": "91:5516:5",
							"usedErrors": [],
							"usedEvents": [
								416,
								423
							]
						}
					],
					"src": "40:5567:5"
				},
				"id": 5
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
					"exportedSymbols": {
						"IAggregator": [
							528
						],
						"UserOperation": [
							86
						],
						"UserOperationLib": [
							256
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 529,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:6"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
							"file": "../../extension/upgradeable/UserOperation.sol",
							"id": 497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 529,
							"sourceUnit": 257,
							"src": "65:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAggregator",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 498,
								"nodeType": "StructuredDocumentation",
								"src": "124:45:6",
								"text": " Aggregated Signatures validator."
							},
							"fullyImplemented": false,
							"id": 528,
							"linearizedBaseContracts": [
								528
							],
							"name": "IAggregator",
							"nameLocation": "181:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "200:139:6",
										"text": " validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."
									},
									"functionSelector": "e3563a4f",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateSignatures",
									"nameLocation": "354:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "userOps",
												"nameLocation": "398:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "373:32:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 501,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 500,
															"name": "UserOperation",
															"nameLocations": [
																"373:13:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 86,
															"src": "373:13:6"
														},
														"referencedDeclaration": 86,
														"src": "373:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
															"typeString": "struct UserOperation"
														}
													},
													"id": 502,
													"nodeType": "ArrayTypeName",
													"src": "373:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_storage_$dyn_storage_ptr",
														"typeString": "struct UserOperation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "422:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "407:24:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "407:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:60:6"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:6"
									},
									"scope": 528,
									"src": "345:102:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "455:583:6",
										"text": " validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""
									},
									"functionSelector": "64c530cd",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOpSignature",
									"nameLocation": "1053:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1100:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1077:29:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 510,
														"name": "UserOperation",
														"nameLocations": [
															"1077:13:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "1077:13:6"
													},
													"referencedDeclaration": 86,
													"src": "1077:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:31:6"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "sigForUserOp",
												"nameLocation": "1144:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1131:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1131:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:27:6"
									},
									"scope": 528,
									"src": "1044:114:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "1166:374:6",
										"text": " aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"
									},
									"functionSelector": "275e2d79",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "aggregateSignatures",
									"nameLocation": "1555:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "userOps",
												"nameLocation": "1610:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1585:32:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 519,
															"name": "UserOperation",
															"nameLocations": [
																"1585:13:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 86,
															"src": "1585:13:6"
														},
														"referencedDeclaration": 86,
														"src": "1585:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
															"typeString": "struct UserOperation"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "1585:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_storage_$dyn_storage_ptr",
														"typeString": "struct UserOperation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1574:50:6"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "aggregatedSignature",
												"nameLocation": "1661:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1648:32:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1648:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:34:6"
									},
									"scope": 528,
									"src": "1546:136:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 529,
							"src": "171:1514:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1648:6"
				},
				"id": 6
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
					"exportedSymbols": {
						"IAggregator": [
							528
						],
						"IEntryPoint": [
							734
						],
						"INonceManager": [
							767
						],
						"IStakeManager": [
							873
						],
						"UserOperation": [
							86
						],
						"UserOperationLib": [
							256
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 735,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "168:24:7"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/UserOperation.sol",
							"file": "../../extension/upgradeable/UserOperation.sol",
							"id": 531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 735,
							"sourceUnit": 257,
							"src": "322:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
							"file": "./IStakeManager.sol",
							"id": 532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 735,
							"sourceUnit": 874,
							"src": "379:29:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAggregator.sol",
							"file": "./IAggregator.sol",
							"id": 533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 735,
							"sourceUnit": 529,
							"src": "410:27:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
							"file": "./INonceManager.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 735,
							"sourceUnit": 768,
							"src": "439:29:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 535,
										"name": "IStakeManager",
										"nameLocations": [
											"497:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 873,
										"src": "497:13:7"
									},
									"id": 536,
									"nodeType": "InheritanceSpecifier",
									"src": "497:13:7"
								},
								{
									"baseName": {
										"id": 537,
										"name": "INonceManager",
										"nameLocations": [
											"512:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "512:13:7"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "512:13:7"
								}
							],
							"canonicalName": "IEntryPoint",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 734,
							"linearizedBaseContracts": [
								734,
								767,
								873
							],
							"name": "IEntryPoint",
							"nameLocation": "482:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f",
									"id": 554,
									"name": "UserOperationEvent",
									"nameLocation": "1243:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1288:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1272:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 539,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1325:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1309:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "1358:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1342:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1386:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1378:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1407:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1402:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualGasCost",
												"nameLocation": "1433:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1425:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualGasUsed",
												"nameLocation": "1465:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1457:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:224:7"
									},
									"src": "1237:249:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1494:339:7",
										"text": " account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"
									},
									"eventSelector": "d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d",
									"id": 565,
									"name": "AccountDeployed",
									"nameLocation": "1845:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1877:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1861:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 556,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1905:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1889:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": false,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1921:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1913:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "1938:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1930:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:88:7"
									},
									"src": "1839:110:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1957:343:7",
										"text": " An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."
									},
									"eventSelector": "1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201",
									"id": 576,
									"name": "UserOperationRevertReason",
									"nameLocation": "2312:25:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2364:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2348:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2401:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2385:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2426:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2418:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": false,
												"mutability": "mutable",
												"name": "revertReason",
												"nameLocation": "2448:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2442:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2442:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:130:7"
									},
									"src": "2306:162:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2476:161:7",
										"text": " an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."
									},
									"eventSelector": "bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972",
									"id": 579,
									"name": "BeforeExecution",
									"nameLocation": "2649:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2664:2:7"
									},
									"src": "2643:24:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2675:103:7",
										"text": " signature aggregator used by the following UserOperationEvents within this bundle."
									},
									"eventSelector": "575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d",
									"id": 584,
									"name": "SignatureAggregatorChanged",
									"nameLocation": "2790:26:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": true,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "2833:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2817:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:28:7"
									},
									"src": "2784:61:7"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "2853:765:7",
										"text": " a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."
									},
									"errorSelector": "220266b6",
									"id": 591,
									"name": "FailedOp",
									"nameLocation": "3630:8:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "opIndex",
												"nameLocation": "3647:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3639:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3639:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "3663:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3656:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3656:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3638:32:7"
									},
									"src": "3624:47:7"
								},
								{
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "3679:116:7",
										"text": " error case when a signature aggregator fails to verify the aggregated signature it had created."
									},
									"errorSelector": "86a9f750",
									"id": 596,
									"name": "SignatureValidationFailed",
									"nameLocation": "3807:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "3841:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3833:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:20:7"
									},
									"src": "3801:52:7"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "3861:333:7",
										"text": " Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"
									},
									"errorSelector": "e0cff05f",
									"id": 611,
									"name": "ValidationResult",
									"nameLocation": "4206:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "returnInfo",
												"nameLocation": "4234:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4223:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReturnInfo_$709_memory_ptr",
													"typeString": "struct IEntryPoint.ReturnInfo"
												},
												"typeName": {
													"id": 599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 598,
														"name": "ReturnInfo",
														"nameLocations": [
															"4223:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 709,
														"src": "4223:10:7"
													},
													"referencedDeclaration": 709,
													"src": "4223:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReturnInfo_$709_storage_ptr",
														"typeString": "struct IEntryPoint.ReturnInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "senderInfo",
												"nameLocation": "4256:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4246:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 602,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 601,
														"name": "StakeInfo",
														"nameLocations": [
															"4246:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 825,
														"src": "4246:9:7"
													},
													"referencedDeclaration": 825,
													"src": "4246:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "factoryInfo",
												"nameLocation": "4278:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4268:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 605,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 604,
														"name": "StakeInfo",
														"nameLocations": [
															"4268:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 825,
														"src": "4268:9:7"
													},
													"referencedDeclaration": 825,
													"src": "4268:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "paymasterInfo",
												"nameLocation": "4301:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4291:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 607,
														"name": "StakeInfo",
														"nameLocations": [
															"4291:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 825,
														"src": "4291:9:7"
													},
													"referencedDeclaration": 825,
													"src": "4291:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:93:7"
									},
									"src": "4200:116:7"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "4324:569:7",
										"text": " Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"
									},
									"errorSelector": "faecb4e4",
									"id": 629,
									"name": "ValidationResultWithAggregation",
									"nameLocation": "4905:31:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "returnInfo",
												"nameLocation": "4958:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4947:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReturnInfo_$709_memory_ptr",
													"typeString": "struct IEntryPoint.ReturnInfo"
												},
												"typeName": {
													"id": 614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 613,
														"name": "ReturnInfo",
														"nameLocations": [
															"4947:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 709,
														"src": "4947:10:7"
													},
													"referencedDeclaration": 709,
													"src": "4947:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReturnInfo_$709_storage_ptr",
														"typeString": "struct IEntryPoint.ReturnInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "senderInfo",
												"nameLocation": "4989:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4979:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "StakeInfo",
														"nameLocations": [
															"4979:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 825,
														"src": "4979:9:7"
													},
													"referencedDeclaration": 825,
													"src": "4979:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "factoryInfo",
												"nameLocation": "5020:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5010:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 619,
														"name": "StakeInfo",
														"nameLocations": [
															"5010:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 825,
														"src": "5010:9:7"
													},
													"referencedDeclaration": 825,
													"src": "5010:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "paymasterInfo",
												"nameLocation": "5052:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5042:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_memory_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												},
												"typeName": {
													"id": 623,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 622,
														"name": "StakeInfo",
														"nameLocations": [
															"5042:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 825,
														"src": "5042:9:7"
													},
													"referencedDeclaration": 825,
													"src": "5042:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
														"typeString": "struct IStakeManager.StakeInfo"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "aggregatorInfo",
												"nameLocation": "5096:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5076:34:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AggregatorStakeInfo_$716_memory_ptr",
													"typeString": "struct IEntryPoint.AggregatorStakeInfo"
												},
												"typeName": {
													"id": 626,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 625,
														"name": "AggregatorStakeInfo",
														"nameLocations": [
															"5076:19:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 716,
														"src": "5076:19:7"
													},
													"referencedDeclaration": 716,
													"src": "5076:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AggregatorStakeInfo_$716_storage_ptr",
														"typeString": "struct IEntryPoint.AggregatorStakeInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4936:181:7"
									},
									"src": "4899:219:7"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "5126:53:7",
										"text": " return value of getSenderAddress"
									},
									"errorSelector": "6ca7b806",
									"id": 634,
									"name": "SenderAddressResult",
									"nameLocation": "5191:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:16:7"
									},
									"src": "5185:42:7"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "5235:53:7",
										"text": " return value of simulateHandleOp"
									},
									"errorSelector": "8b7ac980",
									"id": 649,
									"name": "ExecutionResult",
									"nameLocation": "5300:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "preOpGas",
												"nameLocation": "5334:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5326:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "paid",
												"nameLocation": "5361:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5353:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5353:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "5383:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5376:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 640,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5376:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "5411:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5404:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 642,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5404:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "targetSuccess",
												"nameLocation": "5437:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5432:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5432:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "targetResult",
												"nameLocation": "5467:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "5461:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:171:7"
									},
									"src": "5294:193:7"
								},
								{
									"canonicalName": "IEntryPoint.UserOpsPerAggregator",
									"id": 659,
									"members": [
										{
											"constant": false,
											"id": 653,
											"mutability": "mutable",
											"name": "userOps",
											"nameLocation": "5589:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "5573:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_storage_$dyn_storage_ptr",
												"typeString": "struct UserOperation[]"
											},
											"typeName": {
												"baseType": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "UserOperation",
														"nameLocations": [
															"5573:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "5573:13:7"
													},
													"referencedDeclaration": 86,
													"src": "5573:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"id": 652,
												"nodeType": "ArrayTypeName",
												"src": "5573:15:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_storage_$dyn_storage_ptr",
													"typeString": "struct UserOperation[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 656,
											"mutability": "mutable",
											"name": "aggregator",
											"nameLocation": "5650:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "5638:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAggregator_$528",
												"typeString": "contract IAggregator"
											},
											"typeName": {
												"id": 655,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 654,
													"name": "IAggregator",
													"nameLocations": [
														"5638:11:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 528,
													"src": "5638:11:7"
												},
												"referencedDeclaration": 528,
												"src": "5638:11:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAggregator_$528",
													"typeString": "contract IAggregator"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "5710:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 659,
											"src": "5704:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 657,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5704:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserOpsPerAggregator",
									"nameLocation": "5541:20:7",
									"nodeType": "StructDefinition",
									"scope": 734,
									"src": "5534:193:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "5735:375:7",
										"text": " Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"
									},
									"functionSelector": "1fad948c",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleOps",
									"nameLocation": "6125:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "6160:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6135:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 662,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 661,
															"name": "UserOperation",
															"nameLocations": [
																"6135:13:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 86,
															"src": "6135:13:7"
														},
														"referencedDeclaration": 86,
														"src": "6135:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
															"typeString": "struct UserOperation"
														}
													},
													"id": 663,
													"nodeType": "ArrayTypeName",
													"src": "6135:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOperation_$86_storage_$dyn_storage_ptr",
														"typeString": "struct UserOperation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6181:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6165:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6165:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6134:59:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6202:0:7"
									},
									"scope": 734,
									"src": "6116:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "6211:253:7",
										"text": " Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"
									},
									"functionSelector": "4b1d7cf5",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAggregatedOps",
									"nameLocation": "6479:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "opsPerAggregator",
												"nameLocation": "6541:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6509:48:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$659_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
												},
												"typeName": {
													"baseType": {
														"id": 672,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 671,
															"name": "UserOpsPerAggregator",
															"nameLocations": [
																"6509:20:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 659,
															"src": "6509:20:7"
														},
														"referencedDeclaration": 659,
														"src": "6509:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOpsPerAggregator_$659_storage_ptr",
															"typeString": "struct IEntryPoint.UserOpsPerAggregator"
														}
													},
													"id": 673,
													"nodeType": "ArrayTypeName",
													"src": "6509:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$659_storage_$dyn_storage_ptr",
														"typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6584:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6568:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6568:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:104:7"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6611:0:7"
									},
									"scope": 734,
									"src": "6470:142:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6620:200:7",
										"text": " generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
									},
									"functionSelector": "a6193531",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserOpHash",
									"nameLocation": "6835:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "6872:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "6849:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "UserOperation",
														"nameLocations": [
															"6849:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "6849:13:7"
													},
													"referencedDeclaration": 86,
													"src": "6849:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6848:31:7"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "6903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 685,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6902:9:7"
									},
									"scope": 734,
									"src": "6826:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "6920:403:7",
										"text": " Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."
									},
									"functionSelector": "ee219423",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "simulateValidation",
									"nameLocation": "7338:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "7380:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7357:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 691,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 690,
														"name": "UserOperation",
														"nameLocations": [
															"7357:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "7357:13:7"
													},
													"referencedDeclaration": 86,
													"src": "7357:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7356:31:7"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7396:0:7"
									},
									"scope": 734,
									"src": "7329:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IEntryPoint.ReturnInfo",
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "7405:596:7",
										"text": " gas and return values during simulation\n @param preOpGas the gas used for validation (including preValidationGas)\n @param prefund the required prefund for this operation\n @param sigFailed validateUserOp's (or paymaster's) signature check failed\n @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)"
									},
									"id": 709,
									"members": [
										{
											"constant": false,
											"id": 698,
											"mutability": "mutable",
											"name": "preOpGas",
											"nameLocation": "8044:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "8036:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 697,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8036:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 700,
											"mutability": "mutable",
											"name": "prefund",
											"nameLocation": "8071:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "8063:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 699,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8063:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 702,
											"mutability": "mutable",
											"name": "sigFailed",
											"nameLocation": "8094:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "8089:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 701,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8089:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 704,
											"mutability": "mutable",
											"name": "validAfter",
											"nameLocation": "8121:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "8114:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 703,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "8114:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 706,
											"mutability": "mutable",
											"name": "validUntil",
											"nameLocation": "8149:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "8142:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 705,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "8142:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 708,
											"mutability": "mutable",
											"name": "paymasterContext",
											"nameLocation": "8176:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "8170:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 707,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "8170:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReturnInfo",
									"nameLocation": "8014:10:7",
									"nodeType": "StructDefinition",
									"scope": 734,
									"src": "8007:193:7",
									"visibility": "public"
								},
								{
									"canonicalName": "IEntryPoint.AggregatorStakeInfo",
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "8208:127:7",
										"text": " returned aggregated signature info.\n the aggregator returned by the account, and its current stake."
									},
									"id": 716,
									"members": [
										{
											"constant": false,
											"id": 712,
											"mutability": "mutable",
											"name": "aggregator",
											"nameLocation": "8387:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 716,
											"src": "8379:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 711,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8379:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 715,
											"mutability": "mutable",
											"name": "stakeInfo",
											"nameLocation": "8418:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 716,
											"src": "8408:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
												"typeString": "struct IStakeManager.StakeInfo"
											},
											"typeName": {
												"id": 714,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 713,
													"name": "StakeInfo",
													"nameLocations": [
														"8408:9:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 825,
													"src": "8408:9:7"
												},
												"referencedDeclaration": 825,
												"src": "8408:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$825_storage_ptr",
													"typeString": "struct IStakeManager.StakeInfo"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AggregatorStakeInfo",
									"nameLocation": "8348:19:7",
									"nodeType": "StructDefinition",
									"scope": 734,
									"src": "8341:94:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "8443:342:7",
										"text": " Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."
									},
									"functionSelector": "9b249f69",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSenderAddress",
									"nameLocation": "8800:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "initCode",
												"nameLocation": "8830:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "8817:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8817:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8816:23:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8848:0:7"
									},
									"scope": 734,
									"src": "8791:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "8857:855:7",
										"text": " simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"
									},
									"functionSelector": "d6383f94",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "simulateHandleOp",
									"nameLocation": "9727:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "op",
												"nameLocation": "9767:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9744:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 724,
														"name": "UserOperation",
														"nameLocations": [
															"9744:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "9744:13:7"
													},
													"referencedDeclaration": 86,
													"src": "9744:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9779:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9771:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9771:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "targetCallData",
												"nameLocation": "9802:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9787:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9787:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9743:74:7"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9826:0:7"
									},
									"scope": 734,
									"src": "9718:109:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 735,
							"src": "472:9358:7",
							"usedErrors": [
								591,
								596,
								611,
								629,
								634,
								649
							],
							"usedEvents": [
								554,
								565,
								576,
								579,
								584,
								776,
								784,
								793,
								800,
								808
							]
						}
					],
					"src": "168:9662:7"
				},
				"id": 7
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IMulticall.sol",
					"exportedSymbols": {
						"IMulticall": [
							748
						]
					},
					"id": 749,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMulticall",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 737,
								"nodeType": "StructuredDocumentation",
								"src": "84:129:8",
								"text": " @dev Provides a function to batch together multiple calls in a single external call.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 748,
							"linearizedBaseContracts": [
								748
							],
							"name": "IMulticall",
							"nameLocation": "225:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "243:91:8",
										"text": " @dev Receives and executes a batch of function calls on this contract."
									},
									"functionSelector": "ac9650d8",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "349:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "376:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "359:21:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 739,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "359:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 740,
													"nodeType": "ArrayTypeName",
													"src": "359:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:23:8"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "415:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "400:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 743,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "400:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 744,
													"nodeType": "ArrayTypeName",
													"src": "400:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:24:8"
									},
									"scope": 748,
									"src": "340:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 749,
							"src": "215:212:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:394:8"
				},
				"id": 8
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/INonceManager.sol",
					"exportedSymbols": {
						"INonceManager": [
							767
						]
					},
					"id": 768,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INonceManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "INonceManager",
							"nameLocation": "75:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "96:424:9",
										"text": " Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."
									},
									"functionSelector": "35567e1a",
									"id": 760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "535:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "552:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "544:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "568:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "560:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 754,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:29:9"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "604:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "596:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:15:9"
									},
									"scope": 767,
									"src": "526:85:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "619:456:9",
										"text": " Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."
									},
									"functionSelector": "0bd28e3b",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "incrementNonce",
									"nameLocation": "1090:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1113:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1105:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 762,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:13:9"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:9"
									},
									"scope": 767,
									"src": "1081:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 768,
							"src": "65:1065:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1093:9"
				},
				"id": 9
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IStakeManager.sol",
					"exportedSymbols": {
						"IStakeManager": [
							873
						]
					},
					"id": 874,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakeManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 770,
								"nodeType": "StructuredDocumentation",
								"src": "70:215:10",
								"text": " manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."
							},
							"fullyImplemented": false,
							"id": 873,
							"linearizedBaseContracts": [
								873
							],
							"name": "IStakeManager",
							"nameLocation": "297:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 776,
									"name": "Deposited",
									"nameLocation": "324:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "350:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "334:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDeposit",
												"nameLocation": "367:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "359:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:47:10"
									},
									"src": "318:63:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb",
									"id": 784,
									"name": "Withdrawn",
									"nameLocation": "395:9:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "421:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "405:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "438:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "430:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "463:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "455:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:66:10"
									},
									"src": "389:82:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "479:52:10",
										"text": "Emitted when stake or unstake delay are modified"
									},
									"eventSelector": "a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01",
									"id": 793,
									"name": "StakeLocked",
									"nameLocation": "543:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "571:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "555:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalStaked",
												"nameLocation": "588:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "580:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakeDelaySec",
												"nameLocation": "609:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "601:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:71:10"
									},
									"src": "537:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "634:52:10",
										"text": "Emitted once a stake is scheduled for withdrawal"
									},
									"eventSelector": "fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a",
									"id": 800,
									"name": "StakeUnlocked",
									"nameLocation": "698:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "728:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "712:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawTime",
												"nameLocation": "745:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "737:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:47:10"
									},
									"src": "692:67:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3",
									"id": 808,
									"name": "StakeWithdrawn",
									"nameLocation": "773:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "804:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "788:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "821:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "813:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "846:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "838:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:66:10"
									},
									"src": "767:87:10"
								},
								{
									"canonicalName": "IStakeManager.DepositInfo",
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "862:643:10",
										"text": " @param deposit the entity's deposit\n @param staked true if this entity is staked.\n @param stake actual amount of ether staked for this entity.\n @param unstakeDelaySec minimum delay to withdraw the stake.\n @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n    and the rest fit into a 2nd cell.\n    112 bit allows for 10^15 eth\n    48 bit for full timestamp\n    32 bit allows 150 years for unstake delay"
									},
									"id": 820,
									"members": [
										{
											"constant": false,
											"id": 811,
											"mutability": "mutable",
											"name": "deposit",
											"nameLocation": "1549:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 820,
											"src": "1541:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 810,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "1541:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 813,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "1572:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 820,
											"src": "1567:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 812,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1567:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 815,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1597:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 820,
											"src": "1589:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 814,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "1589:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 817,
											"mutability": "mutable",
											"name": "unstakeDelaySec",
											"nameLocation": "1620:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 820,
											"src": "1613:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 816,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 819,
											"mutability": "mutable",
											"name": "withdrawTime",
											"nameLocation": "1653:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 820,
											"src": "1646:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 818,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "1646:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DepositInfo",
									"nameLocation": "1518:11:10",
									"nodeType": "StructDefinition",
									"scope": 873,
									"src": "1511:162:10",
									"visibility": "public"
								},
								{
									"canonicalName": "IStakeManager.StakeInfo",
									"id": 825,
									"members": [
										{
											"constant": false,
											"id": 822,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1779:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 825,
											"src": "1771:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 821,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1771:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 824,
											"mutability": "mutable",
											"name": "unstakeDelaySec",
											"nameLocation": "1803:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 825,
											"src": "1795:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 823,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1795:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "1750:9:10",
									"nodeType": "StructDefinition",
									"scope": 873,
									"src": "1743:83:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1834:60:10",
										"text": "@return info - full deposit information of given account"
									},
									"functionSelector": "5287ce12",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositInfo",
									"nameLocation": "1909:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1932:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1924:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:17:10"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "1983:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1964:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DepositInfo_$820_memory_ptr",
													"typeString": "struct IStakeManager.DepositInfo"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "DepositInfo",
														"nameLocations": [
															"1964:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 820,
														"src": "1964:11:10"
													},
													"referencedDeclaration": 820,
													"src": "1964:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DepositInfo_$820_storage_ptr",
														"typeString": "struct IStakeManager.DepositInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:25:10"
									},
									"scope": 873,
									"src": "1900:89:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "1997:56:10",
										"text": "@return the deposit (for gas payment) of the account"
									},
									"functionSelector": "70a08231",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2068:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2086:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2078:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:17:10"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2118:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:9:10"
									},
									"scope": 873,
									"src": "2059:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "2135:60:10",
										"text": " add to the deposit of the given account"
									},
									"functionSelector": "b760faf9",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositTo",
									"nameLocation": "2210:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2228:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2220:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:17:10"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2253:0:10"
									},
									"scope": 873,
									"src": "2201:53:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "2262:205:10",
										"text": " add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."
									},
									"functionSelector": "0396cb60",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addStake",
									"nameLocation": "2482:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "_unstakeDelaySec",
												"nameLocation": "2498:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2491:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 850,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:25:10"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:0:10"
									},
									"scope": 873,
									"src": "2473:60:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2541:131:10",
										"text": " attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."
									},
									"functionSelector": "bb9fe6bf",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockStake",
									"nameLocation": "2687:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2698:2:10"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2709:0:10"
									},
									"scope": 873,
									"src": "2678:32:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "2718:198:10",
										"text": " withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."
									},
									"functionSelector": "c23a5cea",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "2931:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "2961:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2945:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2945:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2944:33:10"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2986:0:10"
									},
									"scope": 873,
									"src": "2922:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2995:169:10",
										"text": " withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."
									},
									"functionSelector": "205c2878",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawTo",
									"nameLocation": "3179:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "3206:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3190:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3190:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "withdrawAmount",
												"nameLocation": "3231:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3223:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3189:57:10"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:10"
									},
									"scope": 873,
									"src": "3170:86:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 874,
							"src": "287:2972:10",
							"usedErrors": [],
							"usedEvents": [
								776,
								784,
								793,
								800,
								808
							]
						}
					],
					"src": "42:3217:10"
				},
				"id": 10
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Address.sol",
					"exportedSymbols": {
						"Address": [
							1186
						]
					},
					"id": 1187,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 876,
								"nodeType": "StructuredDocumentation",
								"src": "67:22:11",
								"text": "@author thirdweb"
							},
							"fullyImplemented": true,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "Address",
							"nameLocation": "99:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "661:49:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 884,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "679:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "687:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "679:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "692:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "679:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "701:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "679:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 883,
												"id": 889,
												"nodeType": "Return",
												"src": "672:30:11"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "114:475:11",
										"text": "  @dev Returns whether an address is a smart contract.\n  `account` MAY NOT be a smart contract when this function returns `true`\n  Other than EOAs, `isContract` will return `false` for:\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n  - a contract in construction (since the code is only stored at the end of\n    the constructor execution)"
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "604:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "623:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "615:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:17:11"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "655:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "655:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:6:11"
									},
									"scope": 1186,
									"src": "595:115:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "841:248:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 902,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "868:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1186",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1186",
																				"typeString": "library Address"
																			}
																		],
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "860:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 900,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "860:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "860:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "874:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "860:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 905,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "885:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "860:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "852:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "852:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "852:73:11"
											},
											{
												"assignments": [
													911,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "944:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "939:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 910,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "939:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 918,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "989:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 912,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "957:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "967:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "957:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 914,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "980:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "957:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "1011:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1020:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1003:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1003:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1003:78:11"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "718:46:11",
										"text": "@dev Sends `amount` of wei to `recipient`."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "779:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "805:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "789:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "789:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "824:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "816:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:43:11"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:0:11"
									},
									"scope": 1186,
									"src": "770:319:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "1251:86:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "1282:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "1290:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1296:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 935,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															942,
															962
														],
														"referencedDeclaration": 962,
														"src": "1269:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 934,
												"id": 940,
												"nodeType": "Return",
												"src": "1262:67:11"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1097:59:11",
										"text": "@dev Performs a low-level call on `target` with `data`."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "1171:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1192:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1184:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1213:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1200:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1200:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:35:11"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1237:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1237:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:14:11"
									},
									"scope": 1186,
									"src": "1162:175:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "1636:78:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "1676:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1684:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1690:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 958,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1693:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 954,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															982,
															1038
														],
														"referencedDeclaration": 1038,
														"src": "1654:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 953,
												"id": 960,
												"nodeType": "Return",
												"src": "1647:59:11"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "1345:134:11",
										"text": "@dev Performs a call on `target` with `data`, with `errorMessage` as a fallback\n      revert reason when `target` reverts."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "1494:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1525:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1517:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1555:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1542:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1542:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1584:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1570:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 948,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1570:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:97:11"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1622:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1622:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:14:11"
									},
									"scope": 1186,
									"src": "1485:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1912:113:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "1952:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1960:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 977,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1966:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1973:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 974,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															982,
															1038
														],
														"referencedDeclaration": 1038,
														"src": "1930:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 973,
												"id": 980,
												"nodeType": "Return",
												"src": "1923:94:11"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1722:71:11",
										"text": "@dev Performs a low-level call on `target` with `data` and `value`."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "1808:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1838:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1830:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1859:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1846:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1846:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1873:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1865:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:50:11"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1898:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1898:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:14:11"
									},
									"scope": 1186,
									"src": "1799:226:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "2376:347:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 999,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2403:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1186",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1186",
																				"typeString": "library Address"
																			}
																		],
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2395:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 997,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2395:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2395:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2409:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2395:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1002,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "2420:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2395:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2427:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2387:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2387:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2387:81:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1009,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "2498:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "2487:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2487:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2509:23:11",
																"subExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1012,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2521:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2525:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2521:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1011,
																		"name": "isContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "2510:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address) view returns (bool)"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2510:22:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2487:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e76616c69642063616c6c",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebc0abbc5e1e8b19b08c1a3aee83b7d1702a7180d541d06c555033d5c557d1e1",
																"typeString": "literal_string \"Address: invalid call\""
															},
															"value": "Address: invalid call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebc0abbc5e1e8b19b08c1a3aee83b7d1702a7180d541d06c555033d5c557d1e1",
																"typeString": "literal_string \"Address: invalid call\""
															}
														],
														"id": 1007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2479:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2479:79:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "2479:79:11"
											},
											{
												"assignments": [
													1021,
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2577:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2572:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1020,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2572:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "2599:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "2586:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1022,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2586:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"arguments": [
														{
															"id": 1028,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2641:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1024,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "2613:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2620:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2613:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1026,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "2633:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2613:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2613:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2571:75:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "2681:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1033,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "2690:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1034,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "2702:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1031,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "2664:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 995,
												"id": 1036,
												"nodeType": "Return",
												"src": "2657:58:11"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2033:153:11",
										"text": "@dev Performs a static call on `target` with `data` and `value`, with `errorMessage` as a fallback\n      revert reason when `target` reverts."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2201:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2241:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2233:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2271:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2258:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2258:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2294:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2286:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2324:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2310:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2310:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:121:11"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2362:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2362:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:14:11"
									},
									"scope": 1186,
									"src": "2192:531:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "2893:99:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "2930:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "2938:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2944:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1048,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1055,
															1096
														],
														"referencedDeclaration": 1096,
														"src": "2911:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2911:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1053,
												"nodeType": "Return",
												"src": "2904:80:11"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "2731:56:11",
										"text": "@dev Performs a static call on `target` with `data`."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "2802:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2829:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "2821:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2850:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "2837:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2837:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:35:11"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "2879:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2879:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:14:11"
									},
									"scope": 1186,
									"src": "2793:199:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "3309:252:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1069,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "3339:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1068,
																	"name": "isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "3328:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3328:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3350:23:11",
																"subExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1072,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3362:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3366:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3362:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1071,
																		"name": "isContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "3351:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address) view returns (bool)"
																		}
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3351:22:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3328:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e76616c6964207374617469632063616c6c",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3375:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a83f6569cd7b0511b9024d50c70631d00cac1036fa6375df5067191d1ad04de",
																"typeString": "literal_string \"Address: invalid static call\""
															},
															"value": "Address: invalid static call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a83f6569cd7b0511b9024d50c70631d00cac1036fa6375df5067191d1ad04de",
																"typeString": "literal_string \"Address: invalid static call\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3320:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "3320:86:11"
											},
											{
												"assignments": [
													1081,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3425:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3420:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1080,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3420:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3447:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "3434:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1082,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3434:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "3479:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1084,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3461:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3468:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3461:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3461:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3419:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3519:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1091,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3528:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1092,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "3540:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1089,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "3502:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3502:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1094,
												"nodeType": "Return",
												"src": "3495:58:11"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "3000:141:11",
										"text": "@dev Performs a static call on `target` with `data`, with `errorMessage` as a fallback\n      revert reason when `target` reverts."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3156:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3193:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3185:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3185:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3223:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3210:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3210:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3252:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3238:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3238:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:97:11"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "3295:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3295:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3294:14:11"
									},
									"scope": 1186,
									"src": "3147:414:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "3730:103:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "3769:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3777:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3783:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1106,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1113,
															1154
														],
														"referencedDeclaration": 1154,
														"src": "3748:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3748:77:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1111,
												"nodeType": "Return",
												"src": "3741:84:11"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "3569:58:11",
										"text": "@dev Performs a delegate call on `target` with `data`."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3642:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3671:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3663:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3692:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3679:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3679:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3662:35:11"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3716:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3716:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3715:14:11"
									},
									"scope": 1186,
									"src": "3633:200:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "4149:256:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "4179:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1126,
																	"name": "isContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "4168:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4168:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4190:23:11",
																"subExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1130,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4202:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4206:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4202:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1129,
																		"name": "isContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "4191:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address) view returns (bool)"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4191:22:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4168:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e76616c69642064656c65676174652063616c6c",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4215:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2",
																"typeString": "literal_string \"Address: invalid delegate call\""
															},
															"value": "Address: invalid delegate call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37f2e94a2da33dc5b2bb1cd517eab7af4dd556410d8dbe5e865f9cdba3b770a2",
																"typeString": "literal_string \"Address: invalid delegate call\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4160:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:88:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "4160:88:11"
											},
											{
												"assignments": [
													1139,
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1139,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4267:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "4262:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1138,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4262:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4289:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "4276:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1140,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4276:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"arguments": [
														{
															"id": 1144,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "4323:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1142,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "4303:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4310:12:11",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4303:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4303:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4261:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4363:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1149,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "4372:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1150,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "4384:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1147,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "4346:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4346:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1152,
												"nodeType": "Return",
												"src": "4339:58:11"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "3841:143:11",
										"text": "@dev Performs a delegate call on `target` with `data`, with `errorMessage` as a fallback\n      revert reason when `target` reverts."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3999:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4038:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4030:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4068:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4055:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4055:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4097:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4083:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4083:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4019:97:11"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4135:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4135:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4134:14:11"
									},
									"scope": 1186,
									"src": "3990:415:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "4638:548:11",
										"statements": [
											{
												"condition": {
													"id": 1166,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "4653:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "4712:467:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1170,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "4798:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4809:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4798:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4798:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1180,
																"nodeType": "Block",
																"src": "5113:55:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1177,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "5139:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1176,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "5132:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5132:20:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1179,
																		"nodeType": "ExpressionStatement",
																		"src": "5132:20:11"
																	}
																]
															},
															"id": 1181,
															"nodeType": "IfStatement",
															"src": "4794:374:11",
															"trueBody": {
																"id": 1175,
																"nodeType": "Block",
																"src": "4821:286:11",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "4944:148:11",
																			"nodeType": "YulBlock",
																			"src": "4944:148:11",
																			"statements": [
																				{
																					"nativeSrc": "4967:40:11",
																					"nodeType": "YulVariableDeclaration",
																					"src": "4967:40:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "4996:10:11",
																								"nodeType": "YulIdentifier",
																								"src": "4996:10:11"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "4990:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "4990:5:11"
																						},
																						"nativeSrc": "4990:17:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4990:17:11"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "4971:15:11",
																							"nodeType": "YulTypedName",
																							"src": "4971:15:11",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "5040:2:11",
																										"nodeType": "YulLiteral",
																										"src": "5040:2:11",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "5044:10:11",
																										"nodeType": "YulIdentifier",
																										"src": "5044:10:11"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5036:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5036:3:11"
																								},
																								"nativeSrc": "5036:19:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5036:19:11"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "5057:15:11",
																								"nodeType": "YulIdentifier",
																								"src": "5057:15:11"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "5029:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5029:6:11"
																						},
																						"nativeSrc": "5029:44:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5029:44:11"
																					},
																					"nativeSrc": "5029:44:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "5029:44:11"
																				}
																			]
																		},
																		"evmVersion": "shanghai",
																		"externalReferences": [
																			{
																				"declaration": 1159,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4996:10:11",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1159,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5044:10:11",
																				"valueSize": 1
																			}
																		],
																		"id": 1174,
																		"nodeType": "InlineAssembly",
																		"src": "4935:157:11"
																	}
																]
															}
														}
													]
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "4649:530:11",
												"trueBody": {
													"id": 1169,
													"nodeType": "Block",
													"src": "4662:44:11",
													"statements": [
														{
															"expression": {
																"id": 1167,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "4684:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1165,
															"id": 1168,
															"nodeType": "Return",
															"src": "4677:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "4413:55:11",
										"text": "@dev Verifies that a low level call was successful."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "4483:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4515:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4510:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4510:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4546:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4533:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4533:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4581:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4567:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4567:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:101:11"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4624:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4624:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4623:14:11"
									},
									"scope": 1186,
									"src": "4474:712:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1187,
							"src": "91:5098:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:5149:11"
				},
				"id": 11
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
					"exportedSymbols": {
						"BytesLib": [
							1216
						]
					},
					"id": 1217,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BytesLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1189,
								"nodeType": "StructuredDocumentation",
								"src": "67:117:12",
								"text": "@author thirdweb\n Credits: https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol"
							},
							"fullyImplemented": true,
							"id": 1216,
							"linearizedBaseContracts": [
								1216
							],
							"name": "BytesLib",
							"nameLocation": "194:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "298:275:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1199,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "317:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "324:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "317:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1201,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "334:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "343:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "334:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "317:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f75744f66426f756e6473",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "347:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															},
															"value": "toAddress_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "309:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "309:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "309:62:12"
											},
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "tempAddress",
														"nameLocation": "390:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "382:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1208,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "382:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"nodeType": "VariableDeclarationStatement",
												"src": "382:19:12"
											},
											{
												"AST": {
													"nativeSrc": "423:112:12",
													"nodeType": "YulBlock",
													"src": "423:112:12",
													"statements": [
														{
															"nativeSrc": "438:86:12",
															"nodeType": "YulAssignment",
															"src": "438:86:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes",
																								"nativeSrc": "471:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "471:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "479:4:12",
																								"nodeType": "YulLiteral",
																								"src": "479:4:12",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "467:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "467:3:12"
																						},
																						"nativeSrc": "467:17:12",
																						"nodeType": "YulFunctionCall",
																						"src": "467:17:12"
																					},
																					{
																						"name": "_start",
																						"nativeSrc": "486:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "486:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "463:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "463:3:12"
																				},
																				"nativeSrc": "463:30:12",
																				"nodeType": "YulFunctionCall",
																				"src": "463:30:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "457:5:12"
																		},
																		"nativeSrc": "457:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "457:37:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:27:12",
																		"nodeType": "YulLiteral",
																		"src": "496:27:12",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "453:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:12"
																},
																"nativeSrc": "453:71:12",
																"nodeType": "YulFunctionCall",
																"src": "453:71:12"
															},
															"variableNames": [
																{
																	"name": "tempAddress",
																	"nativeSrc": "438:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "438:11:12"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1191,
														"isOffset": false,
														"isSlot": false,
														"src": "471:6:12",
														"valueSize": 1
													},
													{
														"declaration": 1193,
														"isOffset": false,
														"isSlot": false,
														"src": "486:6:12",
														"valueSize": 1
													},
													{
														"declaration": 1209,
														"isOffset": false,
														"isSlot": false,
														"src": "438:11:12",
														"valueSize": 1
													}
												],
												"id": 1211,
												"nodeType": "InlineAssembly",
												"src": "414:121:12"
											},
											{
												"expression": {
													"id": 1212,
													"name": "tempAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1209,
													"src": "554:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1197,
												"id": 1213,
												"nodeType": "Return",
												"src": "547:18:12"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nameLocation": "219:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "242:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "229:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "229:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "258:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "250:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:37:12"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "289:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:9:12"
									},
									"scope": 1216,
									"src": "210:363:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1217,
							"src": "186:390:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:536:12"
				},
				"id": 12
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							1296
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1219,
								"nodeType": "StructuredDocumentation",
								"src": "130:641:13",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 1296,
							"linearizedBaseContracts": [
								1296
							],
							"name": "Clones",
							"nameLocation": "781:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "1072:695:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1136:556:13",
													"nodeType": "YulBlock",
													"src": "1136:556:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:13",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1357:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1357:4:13",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1367:4:13",
																								"nodeType": "YulLiteral",
																								"src": "1367:4:13",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "1373:14:13",
																								"nodeType": "YulIdentifier",
																								"src": "1373:14:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1363:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1363:3:13"
																						},
																						"nativeSrc": "1363:25:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1363:25:13"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "1353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:13"
																				},
																				"nativeSrc": "1353:36:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1353:36:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1391:48:13",
																				"nodeType": "YulLiteral",
																				"src": "1391:48:13",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1350:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1350:2:13"
																		},
																		"nativeSrc": "1350:90:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:90:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1337:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:13"
																},
																"nativeSrc": "1337:104:13",
																"nodeType": "YulFunctionCall",
																"src": "1337:104:13"
															},
															"nativeSrc": "1337:104:13",
															"nodeType": "YulExpressionStatement",
															"src": "1337:104:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1564:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1564:4:13",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1577:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1577:4:13",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "1583:14:13",
																						"nodeType": "YulIdentifier",
																						"src": "1583:14:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1573:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1573:3:13"
																				},
																				"nativeSrc": "1573:25:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1573:25:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1600:32:13",
																				"nodeType": "YulLiteral",
																				"src": "1600:32:13",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1570:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1570:2:13"
																		},
																		"nativeSrc": "1570:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1570:63:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1557:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:13"
																},
																"nativeSrc": "1557:77:13",
																"nodeType": "YulFunctionCall",
																"src": "1557:77:13"
															},
															"nativeSrc": "1557:77:13",
															"nodeType": "YulExpressionStatement",
															"src": "1557:77:13"
														},
														{
															"nativeSrc": "1648:33:13",
															"nodeType": "YulAssignment",
															"src": "1648:33:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1667:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1667:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1670:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1670:4:13",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1676:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1676:4:13",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "1660:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:13"
																},
																"nativeSrc": "1660:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1660:21:13"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "1648:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1648:8:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1222,
														"isOffset": false,
														"isSlot": false,
														"src": "1373:14:13",
														"valueSize": 1
													},
													{
														"declaration": 1222,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:14:13",
														"valueSize": 1
													},
													{
														"declaration": 1225,
														"isOffset": false,
														"isSlot": false,
														"src": "1648:8:13",
														"valueSize": 1
													}
												],
												"id": 1227,
												"nodeType": "InlineAssembly",
												"src": "1127:565:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "1710:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1730:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1230,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1722:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1710:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1734:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1702:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1702:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1702:57:13"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "795:196:13",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1006:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1020:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1012:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:24:13"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1062:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1054:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:18:13"
									},
									"scope": 1296,
									"src": "997:770:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "2253:703:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2317:563:13",
													"nodeType": "YulBlock",
													"src": "2317:563:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2525:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2525:4:13",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2538:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2538:4:13",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2548:4:13",
																								"nodeType": "YulLiteral",
																								"src": "2548:4:13",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2554:14:13",
																								"nodeType": "YulIdentifier",
																								"src": "2554:14:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2544:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2544:3:13"
																						},
																						"nativeSrc": "2544:25:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2544:25:13"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2534:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2534:3:13"
																				},
																				"nativeSrc": "2534:36:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2534:36:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2572:48:13",
																				"nodeType": "YulLiteral",
																				"src": "2572:48:13",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2531:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2531:2:13"
																		},
																		"nativeSrc": "2531:90:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2531:90:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:13"
																},
																"nativeSrc": "2518:104:13",
																"nodeType": "YulFunctionCall",
																"src": "2518:104:13"
															},
															"nativeSrc": "2518:104:13",
															"nodeType": "YulExpressionStatement",
															"src": "2518:104:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2745:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2745:4:13",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2758:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2758:4:13",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2764:14:13",
																						"nodeType": "YulIdentifier",
																						"src": "2764:14:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2754:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:13"
																				},
																				"nativeSrc": "2754:25:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2754:25:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2781:32:13",
																				"nodeType": "YulLiteral",
																				"src": "2781:32:13",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2751:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:13"
																		},
																		"nativeSrc": "2751:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2751:63:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2738:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2738:6:13"
																},
																"nativeSrc": "2738:77:13",
																"nodeType": "YulFunctionCall",
																"src": "2738:77:13"
															},
															"nativeSrc": "2738:77:13",
															"nodeType": "YulExpressionStatement",
															"src": "2738:77:13"
														},
														{
															"nativeSrc": "2829:40:13",
															"nodeType": "YulAssignment",
															"src": "2829:40:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2849:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2849:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2852:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:13",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2858:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2858:4:13",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "2864:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2864:4:13"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "2841:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2841:7:13"
																},
																"nativeSrc": "2841:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2841:28:13"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2829:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2829:8:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "2554:14:13",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "2764:14:13",
														"valueSize": 1
													},
													{
														"declaration": 1247,
														"isOffset": false,
														"isSlot": false,
														"src": "2829:8:13",
														"valueSize": 1
													},
													{
														"declaration": 1244,
														"isOffset": false,
														"isSlot": false,
														"src": "2864:4:13",
														"valueSize": 1
													}
												],
												"id": 1249,
												"nodeType": "InlineAssembly",
												"src": "2308:572:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "2898:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2918:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2910:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1252,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2910:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2910:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2898:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2922:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2890:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2890:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "2890:58:13"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1775:370:13",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2160:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2187:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2179:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2211:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2203:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:38:13"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2243:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2235:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:18:13"
									},
									"scope": 1296,
									"src": "2151:805:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "3240:527:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3304:456:13",
													"nodeType": "YulBlock",
													"src": "3304:456:13",
													"statements": [
														{
															"nativeSrc": "3319:22:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3319:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3336:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3336:4:13",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3330:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3330:5:13"
																},
																"nativeSrc": "3330:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3330:11:13"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3323:3:13",
																	"nodeType": "YulTypedName",
																	"src": "3323:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3366:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3366:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3371:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3371:4:13",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3362:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:13"
																		},
																		"nativeSrc": "3362:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3362:14:13"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "3378:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "3378:8:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3355:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:13"
																},
																"nativeSrc": "3355:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3355:32:13"
															},
															"nativeSrc": "3355:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "3355:32:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3412:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3412:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3417:4:13",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3408:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:13"
																		},
																		"nativeSrc": "3408:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3424:34:13",
																		"nodeType": "YulLiteral",
																		"src": "3424:34:13",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3401:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:13"
																},
																"nativeSrc": "3401:58:13",
																"nodeType": "YulFunctionCall",
																"src": "3401:58:13"
															},
															"nativeSrc": "3401:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "3401:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3484:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3484:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3489:4:13",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3480:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3480:3:13"
																		},
																		"nativeSrc": "3480:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3480:14:13"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "3496:14:13",
																		"nodeType": "YulIdentifier",
																		"src": "3496:14:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:13"
																},
																"nativeSrc": "3473:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3473:38:13"
															},
															"nativeSrc": "3473:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "3473:38:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3532:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3532:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3537:42:13",
																		"nodeType": "YulLiteral",
																		"src": "3537:42:13",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3525:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3525:6:13"
																},
																"nativeSrc": "3525:55:13",
																"nodeType": "YulFunctionCall",
																"src": "3525:55:13"
															},
															"nativeSrc": "3525:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "3525:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3605:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3605:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3610:4:13",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3601:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3601:3:13"
																		},
																		"nativeSrc": "3601:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:14:13"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "3617:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3617:4:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3594:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:13"
																},
																"nativeSrc": "3594:28:13",
																"nodeType": "YulFunctionCall",
																"src": "3594:28:13"
															},
															"nativeSrc": "3594:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "3594:28:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3647:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3647:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3652:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3652:4:13",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3643:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:13"
																		},
																		"nativeSrc": "3643:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3643:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "3673:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3673:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3678:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3678:4:13",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3669:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3669:3:13"
																				},
																				"nativeSrc": "3669:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3669:14:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3685:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3685:4:13",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3659:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "3659:9:13"
																		},
																		"nativeSrc": "3659:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3659:31:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:13"
																},
																"nativeSrc": "3636:55:13",
																"nodeType": "YulFunctionCall",
																"src": "3636:55:13"
															},
															"nativeSrc": "3636:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "3636:55:13"
														},
														{
															"nativeSrc": "3705:44:13",
															"nodeType": "YulAssignment",
															"src": "3705:44:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3732:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3732:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3737:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3737:4:13",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3728:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3728:3:13"
																		},
																		"nativeSrc": "3728:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3728:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3744:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3744:4:13",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:13"
																},
																"nativeSrc": "3718:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3718:31:13"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "3705:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3705:9:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1268,
														"isOffset": false,
														"isSlot": false,
														"src": "3378:8:13",
														"valueSize": 1
													},
													{
														"declaration": 1264,
														"isOffset": false,
														"isSlot": false,
														"src": "3496:14:13",
														"valueSize": 1
													},
													{
														"declaration": 1271,
														"isOffset": false,
														"isSlot": false,
														"src": "3705:9:13",
														"valueSize": 1
													},
													{
														"declaration": 1266,
														"isOffset": false,
														"isSlot": false,
														"src": "3617:4:13",
														"valueSize": 1
													}
												],
												"id": 1273,
												"nodeType": "InlineAssembly",
												"src": "3295:465:13"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2964:101:13",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3080:27:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3126:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3118:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3159:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3151:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3182:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3174:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:90:13"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3229:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3221:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3221:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3220:19:13"
									},
									"scope": 1296,
									"src": "3071:696:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "4024:90:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4070:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "4086:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 1290,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4100:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$1296",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$1296",
																		"typeString": "library Clones"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4092:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4092:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4092:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1285,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1275,
															1295
														],
														"referencedDeclaration": 1275,
														"src": "4042:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1293,
												"nodeType": "Return",
												"src": "4035:71:13"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "3775:101:13",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3891:27:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3937:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "3929:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3970:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "3962:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3962:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:63:13"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4013:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "4005:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:19:13"
									},
									"scope": 1296,
									"src": "3882:232:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1297,
							"src": "773:3344:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:4014:13"
				},
				"id": 13
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1895
						]
					},
					"id": 1896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1299,
								"nodeType": "StructuredDocumentation",
								"src": "145:1118:14",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1895,
							"linearizedBaseContracts": [
								1895
							],
							"name": "EnumerableSet",
							"nameLocation": "1273:13:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1307,
									"members": [
										{
											"constant": false,
											"id": 1302,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1809:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1307,
											"src": "1799:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1301,
												"nodeType": "ArrayTypeName",
												"src": "1799:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1306,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1980:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 1307,
											"src": "1952:36:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1305,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1952:27:14",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1750:3:14",
									"nodeType": "StructDefinition",
									"scope": 1895,
									"src": "1743:253:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "2243:345:14",
										"statements": [
											{
												"condition": {
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2258:22:14",
													"subExpression": {
														"arguments": [
															{
																"id": 1319,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "2269:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "2274:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1318,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "2259:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:21:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1346,
													"nodeType": "Block",
													"src": "2542:39:14",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1317,
															"id": 1345,
															"nodeType": "Return",
															"src": "2557:12:14"
														}
													]
												},
												"id": 1347,
												"nodeType": "IfStatement",
												"src": "2254:327:14",
												"trueBody": {
													"id": 1343,
													"nodeType": "Block",
													"src": "2282:254:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1328,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "2314:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1323,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "2297:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2301:7:14",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1302,
																		"src": "2297:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2309:4:14",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2297:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:23:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "2297:23:14"
														},
														{
															"expression": {
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1331,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "2458:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2462:8:14",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1306,
																		"src": "2458:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1335,
																	"indexExpression": {
																		"id": 1333,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "2471:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2458:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1336,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "2480:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2484:7:14",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1302,
																		"src": "2480:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2492:6:14",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2480:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1340,
															"nodeType": "ExpressionStatement",
															"src": "2458:40:14"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1317,
															"id": 1342,
															"nodeType": "Return",
															"src": "2513:11:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "2004:164:14",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2183:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2200:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2188:15:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1310,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1309,
														"name": "Set",
														"nameLocations": [
															"2188:3:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1307,
														"src": "2188:3:14"
													},
													"referencedDeclaration": 1307,
													"src": "2188:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2213:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2205:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:14"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2237:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2237:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:6:14"
									},
									"scope": 1895,
									"src": "2174:414:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "2836:1348:14",
										"statements": [
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2956:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "2948:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2948:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1362,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "2969:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2973:8:14",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1306,
														"src": "2969:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1365,
													"indexExpression": {
														"id": 1364,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "2982:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:40:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1367,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "3005:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3019:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3005:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1430,
													"nodeType": "Block",
													"src": "4138:39:14",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4160:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1359,
															"id": 1429,
															"nodeType": "Return",
															"src": "4153:12:14"
														}
													]
												},
												"id": 1431,
												"nodeType": "IfStatement",
												"src": "3001:1176:14",
												"trueBody": {
													"id": 1427,
													"nodeType": "Block",
													"src": "3022:1110:14",
													"statements": [
														{
															"assignments": [
																1371
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1371,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3388:13:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1427,
																	"src": "3380:21:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1370,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3380:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1375,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1372,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "3404:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3404:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3380:38:14"
														},
														{
															"assignments": [
																1377
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1377,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3441:9:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 1427,
																	"src": "3433:17:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1376,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3433:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1383,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1378,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "3453:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3457:7:14",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1302,
																		"src": "3453:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3465:6:14",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3453:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3453:22:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3433:42:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1384,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "3496:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1385,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "3509:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3496:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1411,
															"nodeType": "IfStatement",
															"src": "3492:405:14",
															"trueBody": {
																"id": 1410,
																"nodeType": "Block",
																"src": "3524:373:14",
																"statements": [
																	{
																		"assignments": [
																			1388
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1388,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 1410,
																				"src": "3543:17:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1387,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1393,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1389,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1353,
																					"src": "3563:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3567:7:14",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1302,
																				"src": "3563:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1392,
																			"indexExpression": {
																				"id": 1391,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "3575:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:14"
																	},
																	{
																		"expression": {
																			"id": 1400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1394,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1353,
																						"src": "3688:3:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1397,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3692:7:14",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1302,
																					"src": "3688:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1398,
																				"indexExpression": {
																					"id": 1396,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1371,
																					"src": "3700:13:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3688:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1399,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "3717:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3688:38:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1401,
																		"nodeType": "ExpressionStatement",
																		"src": "3688:38:14"
																	},
																	{
																		"expression": {
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1402,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1353,
																						"src": "3802:3:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3806:8:14",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1306,
																					"src": "3802:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1406,
																				"indexExpression": {
																					"id": 1404,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1388,
																					"src": "3815:9:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3802:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1407,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1361,
																				"src": "3828:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3802:36:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1409,
																		"nodeType": "ExpressionStatement",
																		"src": "3802:36:14"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1412,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "3978:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3982:7:14",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1302,
																		"src": "3978:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3990:3:14",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3978:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "3978:17:14"
														},
														{
															"expression": {
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4066:26:14",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1419,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "4073:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4077:8:14",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1306,
																		"src": "4073:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1422,
																	"indexExpression": {
																		"id": 1421,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "4086:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4073:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1424,
															"nodeType": "ExpressionStatement",
															"src": "4066:26:14"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4116:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1359,
															"id": 1426,
															"nodeType": "Return",
															"src": "4109:11:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "2596:162:14",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2773:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2793:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2781:15:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1351,
														"name": "Set",
														"nameLocations": [
															"2781:3:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1307,
														"src": "2781:3:14"
													},
													"referencedDeclaration": 1307,
													"src": "2781:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2798:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:32:14"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2830:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:14"
									},
									"scope": 1895,
									"src": "2764:1420:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "4349:50:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1444,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "4367:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4371:8:14",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1306,
															"src": "4367:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1447,
														"indexExpression": {
															"id": 1446,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "4380:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4367:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4390:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4367:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1443,
												"id": 1450,
												"nodeType": "Return",
												"src": "4360:31:14"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:14",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4279:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4301:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4289:15:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "Set",
														"nameLocations": [
															"4289:3:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1307,
														"src": "4289:3:14"
													},
													"referencedDeclaration": 1307,
													"src": "4289:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4314:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4306:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:32:14"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "4343:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:6:14"
									},
									"scope": 1895,
									"src": "4270:129:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "4550:44:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1461,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "4568:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4572:7:14",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1302,
														"src": "4568:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4580:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4568:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1464,
												"nodeType": "Return",
												"src": "4561:25:14"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "4407:72:14",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4494:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4514:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4502:15:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "Set",
														"nameLocations": [
															"4502:3:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1307,
														"src": "4502:3:14"
													},
													"referencedDeclaration": 1307,
													"src": "4502:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:17:14"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "4541:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:9:14"
									},
									"scope": 1895,
									"src": "4485:109:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "5024:44:14",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1477,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "5042:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5046:7:14",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1302,
														"src": "5042:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1480,
													"indexExpression": {
														"id": 1479,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "5054:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5042:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1481,
												"nodeType": "Return",
												"src": "5035:25:14"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "4602:340:14",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4957:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4973:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4961:15:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1468,
														"name": "Set",
														"nameLocations": [
															"4961:3:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1307,
														"src": "4961:3:14"
													},
													"referencedDeclaration": 1307,
													"src": "4961:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4986:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "4978:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:32:14"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "5015:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:14"
									},
									"scope": 1895,
									"src": "4948:120:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "5692:37:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1493,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "5710:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5714:7:14",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1302,
													"src": "5710:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1495,
												"nodeType": "Return",
												"src": "5703:18:14"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "5076:536:14",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5627:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5647:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "5635:15:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1485,
														"name": "Set",
														"nameLocations": [
															"5635:3:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1307,
														"src": "5635:3:14"
													},
													"referencedDeclaration": 1307,
													"src": "5635:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:17:14"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "5674:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1489,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1490,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:18:14"
									},
									"scope": 1895,
									"src": "5618:111:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1501,
									"members": [
										{
											"constant": false,
											"id": 1500,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5791:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1501,
											"src": "5787:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1499,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1498,
													"name": "Set",
													"nameLocations": [
														"5787:3:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1307,
													"src": "5787:3:14"
												},
												"referencedDeclaration": 1307,
												"src": "5787:3:14",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5765:10:14",
									"nodeType": "StructDefinition",
									"scope": 1895,
									"src": "5758:47:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "6059:49:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1513,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "6082:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6086:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "6082:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1515,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "6094:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1512,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "6077:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1517,
												"nodeType": "Return",
												"src": "6070:30:14"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "5813:164:14",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5992:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6015:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "5996:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1503,
														"name": "Bytes32Set",
														"nameLocations": [
															"5996:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1501,
														"src": "5996:10:14"
													},
													"referencedDeclaration": 1501,
													"src": "5996:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6028:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6020:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:39:14"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6053:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:14"
									},
									"scope": 1895,
									"src": "5983:125:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "6363:52:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1531,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "6389:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6393:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "6389:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1533,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "6401:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1530,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "6381:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1535,
												"nodeType": "Return",
												"src": "6374:33:14"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "6116:162:14",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6293:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6319:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "6300:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1521,
														"name": "Bytes32Set",
														"nameLocations": [
															"6300:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1501,
														"src": "6300:10:14"
													},
													"referencedDeclaration": 1501,
													"src": "6300:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6332:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "6324:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:39:14"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "6357:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6357:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:6:14"
									},
									"scope": 1895,
									"src": "6284:131:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "6587:54:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1549,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "6615:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6619:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "6615:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1551,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "6627:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1548,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "6605:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1553,
												"nodeType": "Return",
												"src": "6598:35:14"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "6423:72:14",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6510:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6538:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6519:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1539,
														"name": "Bytes32Set",
														"nameLocations": [
															"6519:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1501,
														"src": "6519:10:14"
													},
													"referencedDeclaration": 1501,
													"src": "6519:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6551:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6543:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:39:14"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6581:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:6:14"
									},
									"scope": 1895,
									"src": "6501:140:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "6799:45:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1565,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "6825:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6829:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "6825:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1564,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "6817:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1568,
												"nodeType": "Return",
												"src": "6810:26:14"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "6649:72:14",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6736:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6762:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6743:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1557,
														"name": "Bytes32Set",
														"nameLocations": [
															"6743:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1501,
														"src": "6743:10:14"
													},
													"referencedDeclaration": 1501,
													"src": "6743:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6742:24:14"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6790:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:14"
									},
									"scope": 1895,
									"src": "6727:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "7281:48:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1582,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "7303:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7307:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "7303:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1584,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "7315:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1581,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "7299:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1580,
												"id": 1586,
												"nodeType": "Return",
												"src": "7292:29:14"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "6852:340:14",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7207:2:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7229:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "7210:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1572,
														"name": "Bytes32Set",
														"nameLocations": [
															"7210:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1501,
														"src": "7210:10:14"
													},
													"referencedDeclaration": 1501,
													"src": "7210:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7242:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "7234:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:39:14"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "7272:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:9:14"
									},
									"scope": 1895,
									"src": "7198:131:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "7960:45:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1599,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "7986:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7990:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "7986:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1598,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "7978:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1602,
												"nodeType": "Return",
												"src": "7971:26:14"
											}
										]
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "7337:536:14",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7888:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7914:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "7895:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1591,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1590,
														"name": "Bytes32Set",
														"nameLocations": [
															"7895:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1501,
														"src": "7895:10:14"
													},
													"referencedDeclaration": 1501,
													"src": "7895:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1501_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:24:14"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "7942:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1594,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7942:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1595,
													"nodeType": "ArrayTypeName",
													"src": "7942:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:18:14"
									},
									"scope": 1895,
									"src": "7879:126:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1608,
									"members": [
										{
											"constant": false,
											"id": 1607,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8067:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1608,
											"src": "8063:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1606,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1605,
													"name": "Set",
													"nameLocations": [
														"8063:3:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1307,
													"src": "8063:3:14"
												},
												"referencedDeclaration": 1307,
												"src": "8063:3:14",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8041:10:14",
									"nodeType": "StructDefinition",
									"scope": 1895,
									"src": "8034:47:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "8335:76:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1620,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "8358:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8362:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "8358:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1628,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1614,
																					"src": "8394:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8386:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1626,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8386:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8378:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1624,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8378:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:23:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8370:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1622,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8370:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8370:32:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1619,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "8353:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:50:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1633,
												"nodeType": "Return",
												"src": "8346:57:14"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "8089:164:14",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8268:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8291:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "8272:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1611,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1610,
														"name": "AddressSet",
														"nameLocations": [
															"8272:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "8272:10:14"
													},
													"referencedDeclaration": 1608,
													"src": "8272:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8304:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "8296:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:39:14"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "8329:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8329:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:6:14"
									},
									"scope": 1895,
									"src": "8259:152:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "8666:79:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1647,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "8692:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8696:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "8692:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1655,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "8728:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8720:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1653,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8720:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8720:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8712:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1651,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8712:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8712:23:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8704:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1649,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8704:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8704:32:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1646,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "8684:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1660,
												"nodeType": "Return",
												"src": "8677:60:14"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "8419:162:14",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8596:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8622:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "8603:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1637,
														"name": "AddressSet",
														"nameLocations": [
															"8603:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "8603:10:14"
													},
													"referencedDeclaration": 1608,
													"src": "8603:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8635:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "8627:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8602:39:14"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "8660:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:14"
									},
									"scope": 1895,
									"src": "8587:158:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "8917:81:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1674,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "8945:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8949:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "8945:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1682,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1668,
																					"src": "8981:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8973:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1680,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8973:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8973:14:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8965:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1678,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8965:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8965:23:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1676,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:32:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1673,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "8935:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1687,
												"nodeType": "Return",
												"src": "8928:62:14"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "8753:72:14",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8840:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8868:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8849:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1665,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1664,
														"name": "AddressSet",
														"nameLocations": [
															"8849:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "8849:10:14"
													},
													"referencedDeclaration": 1608,
													"src": "8849:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8881:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8873:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:39:14"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "8911:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8911:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:6:14"
									},
									"scope": 1895,
									"src": "8831:167:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "9156:45:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1699,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "9182:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9186:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "9182:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1698,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "9174:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1702,
												"nodeType": "Return",
												"src": "9167:26:14"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "9006:72:14",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9093:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9119:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "9100:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1691,
														"name": "AddressSet",
														"nameLocations": [
															"9100:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "9100:10:14"
													},
													"referencedDeclaration": 1608,
													"src": "9100:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:24:14"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "9147:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9146:9:14"
									},
									"scope": 1895,
									"src": "9084:117:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "9638:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1722,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1708,
																						"src": "9684:3:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1723,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9688:6:14",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1607,
																					"src": "9684:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1307_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1724,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1710,
																					"src": "9696:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1307_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1721,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1483,
																				"src": "9680:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9680:22:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9672:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1719,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9672:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9672:31:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9664:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1717,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9664:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9664:40:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9656:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1715,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1714,
												"id": 1729,
												"nodeType": "Return",
												"src": "9649:56:14"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "9209:340:14",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "9567:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1706,
														"name": "AddressSet",
														"nameLocations": [
															"9567:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "9567:10:14"
													},
													"referencedDeclaration": 1608,
													"src": "9567:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "9591:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:14"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "9629:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:14"
									},
									"scope": 1895,
									"src": "9555:158:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "10344:229:14",
										"statements": [
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10372:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "10355:22:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1743,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10355:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1744,
															"nodeType": "ArrayTypeName",
															"src": "10355:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1747,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "10388:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10392:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1607,
															"src": "10388:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1746,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "10380:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10355:44:14"
											},
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10427:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "10410:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1753,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10410:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1754,
															"nodeType": "ArrayTypeName",
															"src": "10410:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:23:14"
											},
											{
												"AST": {
													"nativeSrc": "10499:41:14",
													"nodeType": "YulBlock",
													"src": "10499:41:14",
													"statements": [
														{
															"nativeSrc": "10514:15:14",
															"nodeType": "YulAssignment",
															"src": "10514:15:14",
															"value": {
																"name": "store",
																"nativeSrc": "10524:5:14",
																"nodeType": "YulIdentifier",
																"src": "10524:5:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10514:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1755,
														"isOffset": false,
														"isSlot": false,
														"src": "10514:6:14",
														"valueSize": 1
													},
													{
														"declaration": 1745,
														"isOffset": false,
														"isSlot": false,
														"src": "10524:5:14",
														"valueSize": 1
													}
												],
												"id": 1757,
												"nodeType": "InlineAssembly",
												"src": "10490:50:14"
											},
											{
												"expression": {
													"id": 1758,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1755,
													"src": "10559:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1759,
												"nodeType": "Return",
												"src": "10552:13:14"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "9721:536:14",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10272:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10298:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "10279:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1733,
														"name": "AddressSet",
														"nameLocations": [
															"10279:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "10279:10:14"
													},
													"referencedDeclaration": 1608,
													"src": "10279:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:24:14"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "10326:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1737,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10326:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1738,
													"nodeType": "ArrayTypeName",
													"src": "10326:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:18:14"
									},
									"scope": 1895,
									"src": "10263:310:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1765,
									"members": [
										{
											"constant": false,
											"id": 1764,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10629:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1765,
											"src": "10625:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1763,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1762,
													"name": "Set",
													"nameLocations": [
														"10625:3:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1307,
													"src": "10625:3:14"
												},
												"referencedDeclaration": 1307,
												"src": "10625:3:14",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1307_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10606:7:14",
									"nodeType": "StructDefinition",
									"scope": 1895,
									"src": "10599:44:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "10894:58:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1777,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "10917:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10921:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "10917:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1781,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "10937:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10929:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1779,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10929:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10929:14:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1776,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "10912:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1784,
												"nodeType": "Return",
												"src": "10905:39:14"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "10651:164:14",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10830:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10850:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "10834:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1767,
														"name": "UintSet",
														"nameLocations": [
															"10834:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1765,
														"src": "10834:7:14"
													},
													"referencedDeclaration": 1765,
													"src": "10834:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10863:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "10855:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:36:14"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "10888:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10888:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:6:14"
									},
									"scope": 1895,
									"src": "10821:131:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "11204:61:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1798,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "11230:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11234:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "11230:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "11250:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11242:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1800,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11242:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11242:14:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1797,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "11222:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1805,
												"nodeType": "Return",
												"src": "11215:42:14"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "10960:162:14",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11137:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11160:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "11144:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1788,
														"name": "UintSet",
														"nameLocations": [
															"11144:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1765,
														"src": "11144:7:14"
													},
													"referencedDeclaration": 1765,
													"src": "11144:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11173:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "11165:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:36:14"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "11198:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11198:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:6:14"
									},
									"scope": 1895,
									"src": "11128:137:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "11434:63:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1819,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "11462:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11466:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "11462:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "11482:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11474:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1821,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11474:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11474:14:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1818,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "11452:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1826,
												"nodeType": "Return",
												"src": "11445:44:14"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "11273:72:14",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11360:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11385:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "11369:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1810,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1809,
														"name": "UintSet",
														"nameLocations": [
															"11369:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1765,
														"src": "11369:7:14"
													},
													"referencedDeclaration": 1765,
													"src": "11369:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11398:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "11390:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11390:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:36:14"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "11428:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11428:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11427:6:14"
									},
									"scope": 1895,
									"src": "11351:146:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "11652:45:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1838,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "11678:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11682:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "11678:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1837,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "11670:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1836,
												"id": 1841,
												"nodeType": "Return",
												"src": "11663:26:14"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "11505:72:14",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11592:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11615:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "11599:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1830,
														"name": "UintSet",
														"nameLocations": [
															"11599:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1765,
														"src": "11599:7:14"
													},
													"referencedDeclaration": 1765,
													"src": "11599:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:21:14"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "11643:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11642:9:14"
									},
									"scope": 1895,
									"src": "11583:114:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "12131:57:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1857,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "12161:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12165:6:14",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1764,
																	"src": "12161:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1307_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1859,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "12173:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1307_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1856,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "12157:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12157:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12149:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12149:7:14",
															"typeDescriptions": {}
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1862,
												"nodeType": "Return",
												"src": "12142:38:14"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "11705:340:14",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12060:2:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12079:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "12063:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1845,
														"name": "UintSet",
														"nameLocations": [
															"12063:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1765,
														"src": "12063:7:14"
													},
													"referencedDeclaration": 1765,
													"src": "12063:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12092:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "12084:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:36:14"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "12122:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:9:14"
									},
									"scope": 1895,
									"src": "12051:137:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "12816:229:14",
										"statements": [
											{
												"assignments": [
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12844:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "12827:22:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1876,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12827:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1877,
															"nodeType": "ArrayTypeName",
															"src": "12827:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1880,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "12860:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12864:6:14",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1764,
															"src": "12860:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1307_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1879,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "12852:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1307_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12827:44:14"
											},
											{
												"assignments": [
													1888
												],
												"declarations": [
													{
														"constant": false,
														"id": 1888,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12899:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "12882:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1886,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1887,
															"nodeType": "ArrayTypeName",
															"src": "12882:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1889,
												"nodeType": "VariableDeclarationStatement",
												"src": "12882:23:14"
											},
											{
												"AST": {
													"nativeSrc": "12971:41:14",
													"nodeType": "YulBlock",
													"src": "12971:41:14",
													"statements": [
														{
															"nativeSrc": "12986:15:14",
															"nodeType": "YulAssignment",
															"src": "12986:15:14",
															"value": {
																"name": "store",
																"nativeSrc": "12996:5:14",
																"nodeType": "YulIdentifier",
																"src": "12996:5:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12986:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1888,
														"isOffset": false,
														"isSlot": false,
														"src": "12986:6:14",
														"valueSize": 1
													},
													{
														"declaration": 1878,
														"isOffset": false,
														"isSlot": false,
														"src": "12996:5:14",
														"valueSize": 1
													}
												],
												"id": 1890,
												"nodeType": "InlineAssembly",
												"src": "12962:50:14"
											},
											{
												"expression": {
													"id": 1891,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1888,
													"src": "13031:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1873,
												"id": 1892,
												"nodeType": "Return",
												"src": "13024:13:14"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "12196:536:14",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12747:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12770:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "12754:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1866,
														"name": "UintSet",
														"nameLocations": [
															"12754:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1765,
														"src": "12754:7:14"
													},
													"referencedDeclaration": 1765,
													"src": "12754:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1765_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:21:14"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "12798:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1870,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1871,
													"nodeType": "ArrayTypeName",
													"src": "12798:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:18:14"
									},
									"scope": 1895,
									"src": "12738:307:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1896,
							"src": "1265:11783:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:12930:14"
				},
				"id": 14
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
					"exportedSymbols": {
						"BaseAccount": [
							2037
						],
						"IAccount": [
							273
						],
						"IAggregator": [
							528
						],
						"IEntryPoint": [
							734
						],
						"INonceManager": [
							767
						],
						"IStakeManager": [
							873
						],
						"UserOperation": [
							86
						],
						"UserOperationLib": [
							256
						],
						"ValidationData": [
							2487
						],
						"_intersectTimeRange": [
							2631
						],
						"_packValidationData": [
							2668,
							2706
						],
						"_parseValidationData": [
							2546
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 2038,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1897,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:15"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccount.sol",
							"file": "../interface/IAccount.sol",
							"id": 1898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 274,
							"src": "151:35:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
							"file": "../interface/IEntrypoint.sol",
							"id": 1899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 735,
							"src": "188:38:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
							"file": "./Helpers.sol",
							"id": 1900,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 2717,
							"src": "228:23:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1902,
										"name": "IAccount",
										"nameLocations": [
											"526:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 273,
										"src": "526:8:15"
									},
									"id": 1903,
									"nodeType": "InheritanceSpecifier",
									"src": "526:8:15"
								}
							],
							"canonicalName": "BaseAccount",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1901,
								"nodeType": "StructuredDocumentation",
								"src": "255:236:15",
								"text": " Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"
							},
							"fullyImplemented": false,
							"id": 2037,
							"linearizedBaseContracts": [
								2037,
								273
							],
							"name": "BaseAccount",
							"nameLocation": "511:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1907,
									"libraryName": {
										"id": 1904,
										"name": "UserOperationLib",
										"nameLocations": [
											"548:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 256,
										"src": "548:16:15"
									},
									"nodeType": "UsingForDirective",
									"src": "542:41:15",
									"typeName": {
										"id": 1906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1905,
											"name": "UserOperation",
											"nameLocations": [
												"569:13:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 86,
											"src": "569:13:15"
										},
										"referencedDeclaration": 86,
										"src": "569:13:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
											"typeString": "struct UserOperation"
										}
									}
								},
								{
									"constant": true,
									"id": 1910,
									"mutability": "constant",
									"name": "SIG_VALIDATION_FAILED",
									"nameLocation": "740:21:15",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "714:51:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "714:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1909,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "764:1:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "1018:65:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1921,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1066:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseAccount_$2037",
																		"typeString": "contract BaseAccount"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseAccount_$2037",
																		"typeString": "contract BaseAccount"
																	}
																],
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1058:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1919,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1058:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1058:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1073:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1916,
																"name": "entryPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$734_$",
																	"typeString": "function () view returns (contract IEntryPoint)"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1036:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$734",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1049:8:15",
														"memberName": "getNonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1036:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$",
															"typeString": "function (address,uint192) view external returns (uint256)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1036:39:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1925,
												"nodeType": "Return",
												"src": "1029:46:15"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "774:180:15",
										"text": " Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
									},
									"functionSelector": "d087d288",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "969:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "977:2:15"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1009:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:9:15"
									},
									"scope": 2037,
									"src": "960:123:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "1091:140:15",
										"text": " return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."
									},
									"functionSelector": "b0d691fe",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "entryPoint",
									"nameLocation": "1246:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:15"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1288:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEntryPoint_$734",
													"typeString": "contract IEntryPoint"
												},
												"typeName": {
													"id": 1931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1930,
														"name": "IEntryPoint",
														"nameLocations": [
															"1288:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 734,
														"src": "1288:11:15"
													},
													"referencedDeclaration": 734,
													"src": "1288:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$734",
														"typeString": "contract IEntryPoint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:13:15"
									},
									"scope": 2037,
									"src": "1237:64:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										272
									],
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "1694:191:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1948,
														"name": "_requireFromEntryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "1705:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1705:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "1705:24:15"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1951,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "1740:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1953,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "1776:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															{
																"id": 1954,
																"name": "userOpHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "1784:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1952,
															"name": "_validateSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "1757:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$86_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
																"typeString": "function (struct UserOperation calldata,bytes32) returns (uint256)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1757:38:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1740:55:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "1740:55:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1959,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "1821:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
																	"typeString": "struct UserOperation calldata"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1828:5:15",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 67,
															"src": "1821:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "_validateNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "1806:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "1806:28:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1964,
															"name": "missingAccountFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "1857:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1963,
														"name": "_payPrefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "1845:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "1845:32:15"
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "1309:182:15",
										"text": " Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
									},
									"functionSelector": "3a871cdd",
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOp",
									"nameLocation": "1506:14:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1944,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1652:8:15"
									},
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1554:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1531:29:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 1937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1936,
														"name": "UserOperation",
														"nameLocations": [
															"1531:13:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "1531:13:15"
													},
													"referencedDeclaration": 86,
													"src": "1531:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1579:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1571:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1939,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "missingAccountFunds",
												"nameLocation": "1608:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1600:27:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:114:15"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "1678:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1670:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:24:15"
									},
									"scope": 2037,
									"src": "1497:388:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "2027:95:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1973,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2046:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2050:6:15",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2046:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1977,
																			"name": "entryPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "2068:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$734_$",
																				"typeString": "function () view returns (contract IEntryPoint)"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2068:12:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEntryPoint_$734",
																			"typeString": "contract IEntryPoint"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IEntryPoint_$734",
																			"typeString": "contract IEntryPoint"
																		}
																	],
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2060:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1975,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2060:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2060:21:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2046:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6163636f756e743a206e6f742066726f6d20456e747279506f696e74",
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2083:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
																"typeString": "literal_string \"account: not from EntryPoint\""
															},
															"value": "account: not from EntryPoint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
																"typeString": "literal_string \"account: not from EntryPoint\""
															}
														],
														"id": 1972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2038:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:76:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "2038:76:15"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "1893:72:15",
										"text": " ensure the request comes from the known entrypoint."
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireFromEntryPoint",
									"nameLocation": "1980:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:2:15"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:0:15"
									},
									"scope": 2037,
									"src": "1971:151:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "2130:916:15",
										"text": " validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
									},
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_validateSignature",
									"nameLocation": "3061:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3113:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "3090:29:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserOperation_$86_calldata_ptr",
													"typeString": "struct UserOperation"
												},
												"typeName": {
													"id": 1988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1987,
														"name": "UserOperation",
														"nameLocations": [
															"3090:13:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 86,
														"src": "3090:13:15"
													},
													"referencedDeclaration": 86,
													"src": "3090:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserOperation_$86_storage_ptr",
														"typeString": "struct UserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "3138:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "3130:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1990,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3079:76:15"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "3190:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "3182:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:24:15"
									},
									"scope": 2037,
									"src": "3052:154:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "3936:2:15",
										"statements": []
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "3214:655:15",
										"text": " Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateNonce",
									"nameLocation": "3884:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3907:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "3899:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:15:15"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3936:0:15"
									},
									"scope": 2037,
									"src": "3875:63:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "4523:277:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2009,
														"name": "missingAccountFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "4538:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4561:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4538:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2034,
												"nodeType": "IfStatement",
												"src": "4534:259:15",
												"trueBody": {
													"id": 2033,
													"nodeType": "Block",
													"src": "4564:229:15",
													"statements": [
														{
															"assignments": [
																2013,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2013,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "4585:7:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2033,
																	"src": "4580:12:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2012,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4580:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2029,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4677:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2016,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4606:3:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2017,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4610:6:15",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4606:10:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4598:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 2014,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4598:8:15",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4598:19:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4618:4:15",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "4598:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 2026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value",
																		"gas"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 2020,
																			"name": "missingAccountFunds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2006,
																			"src": "4631:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 2023,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4662:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2022,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4662:7:15",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 2021,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "4657:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4657:13:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 2025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4671:3:15",
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "4657:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "4598:78:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4598:82:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4579:101:15"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 2030,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2013,
																		"src": "4696:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4695:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2032,
															"nodeType": "ExpressionStatement",
															"src": "4695:9:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "3946:504:15",
										"text": " sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payPrefund",
									"nameLocation": "4465:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "missingAccountFunds",
												"nameLocation": "4485:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "4477:27:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:29:15"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4523:0:15"
									},
									"scope": 2037,
									"src": "4456:344:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2038,
							"src": "493:4310:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:4766:15"
				},
				"id": 15
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccountFactory.sol",
					"exportedSymbols": {
						"Address": [
							1186
						],
						"BaseAccount": [
							2037
						],
						"BaseAccountFactory": [
							2477
						],
						"BytesLib": [
							1216
						],
						"Clones": [
							1296
						],
						"EnumerableSet": [
							1895
						],
						"IAccount": [
							273
						],
						"IAccountFactory": [
							295
						],
						"IAccountFactoryCore": [
							361
						],
						"IAccountPermissions": [
							494
						],
						"IAggregator": [
							528
						],
						"IEntryPoint": [
							734
						],
						"IMulticall": [
							748
						],
						"INonceManager": [
							767
						],
						"IStakeManager": [
							873
						],
						"Multicall": [
							58
						],
						"UserOperation": [
							86
						],
						"UserOperationLib": [
							256
						],
						"ValidationData": [
							2487
						],
						"_intersectTimeRange": [
							2631
						],
						"_packValidationData": [
							2668,
							2706
						],
						"_parseValidationData": [
							2546
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 2478,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:16"
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/extension/upgradeable/Multicall.sol",
							"file": "../../extension/upgradeable/Multicall.sol",
							"id": 2040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 59,
							"src": "75:51:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/Clones.sol",
							"file": "../lib/Clones.sol",
							"id": 2041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 1297,
							"src": "128:27:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/EnumerableSet.sol",
							"file": "../lib/EnumerableSet.sol",
							"id": 2042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 1896,
							"src": "157:34:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/BaseAccount.sol",
							"file": "../utils/BaseAccount.sol",
							"id": 2043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 2038,
							"src": "193:34:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountPermissions.sol",
							"file": "../interface/IAccountPermissions.sol",
							"id": 2044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 495,
							"src": "229:46:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/lib/BytesLib.sol",
							"file": "../lib/BytesLib.sol",
							"id": 2045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 1217,
							"src": "277:29:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IEntrypoint.sol",
							"file": "../interface/IEntrypoint.sol",
							"id": 2046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 735,
							"src": "324:38:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/interface/IAccountFactory.sol",
							"file": "../interface/IAccountFactory.sol",
							"id": 2047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2478,
							"sourceUnit": 296,
							"src": "364:42:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2048,
										"name": "IAccountFactory",
										"nameLocations": [
											"1099:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "1099:15:16"
									},
									"id": 2049,
									"nodeType": "InheritanceSpecifier",
									"src": "1099:15:16"
								},
								{
									"baseName": {
										"id": 2050,
										"name": "Multicall",
										"nameLocations": [
											"1116:9:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 58,
										"src": "1116:9:16"
									},
									"id": 2051,
									"nodeType": "InheritanceSpecifier",
									"src": "1116:9:16"
								}
							],
							"canonicalName": "BaseAccountFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 2477,
							"linearizedBaseContracts": [
								2477,
								58,
								748,
								295,
								361
							],
							"name": "BaseAccountFactory",
							"nameLocation": "1077:18:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2055,
									"libraryName": {
										"id": 2052,
										"name": "EnumerableSet",
										"nameLocations": [
											"1139:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1895,
										"src": "1139:13:16"
									},
									"nodeType": "UsingForDirective",
									"src": "1133:49:16",
									"typeName": {
										"id": 2054,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2053,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"1157:13:16",
												"1171:10:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1608,
											"src": "1157:24:16"
										},
										"referencedDeclaration": 1608,
										"src": "1157:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"baseFunctions": [
										334
									],
									"constant": false,
									"functionSelector": "11464fbe",
									"id": 2057,
									"mutability": "immutable",
									"name": "accountImplementation",
									"nameLocation": "1397:21:16",
									"nodeType": "VariableDeclaration",
									"scope": 2477,
									"src": "1372:46:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2056,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1372:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a65d69d4",
									"id": 2059,
									"mutability": "immutable",
									"name": "entrypoint",
									"nameLocation": "1450:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 2477,
									"src": "1425:35:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2058,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1425:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2062,
									"mutability": "mutable",
									"name": "allAccounts",
									"nameLocation": "1502:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2477,
									"src": "1469:44:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 2061,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2060,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"1469:13:16",
												"1483:10:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1608,
											"src": "1469:24:16"
										},
										"referencedDeclaration": 1608,
										"src": "1469:24:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2067,
									"mutability": "mutable",
									"name": "accountsOfSigner",
									"nameLocation": "1574:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 2477,
									"src": "1520:70:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1608_storage_$",
										"typeString": "mapping(address => struct EnumerableSet.AddressSet)"
									},
									"typeName": {
										"id": 2066,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2063,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1528:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1520:44:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1608_storage_$",
											"typeString": "mapping(address => struct EnumerableSet.AddressSet)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2065,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2064,
												"name": "EnumerableSet.AddressSet",
												"nameLocations": [
													"1539:13:16",
													"1553:10:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1608,
												"src": "1539:24:16"
											},
											"referencedDeclaration": 1608,
											"src": "1539:24:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1608_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "1838:90:16",
										"statements": [
											{
												"expression": {
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2074,
														"name": "accountImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2057,
														"src": "1849:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2075,
														"name": "_accountImpl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "1873:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1849:36:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "1849:36:16"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2078,
														"name": "entrypoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2059,
														"src": "1896:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2079,
														"name": "_entrypoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "1909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1896:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "1896:24:16"
											}
										]
									},
									"id": 2083,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "_accountImpl",
												"nameLocation": "1803:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "1795:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "_entrypoint",
												"nameLocation": "1825:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "1817:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1794:43:16"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:0:16"
									},
									"scope": 2477,
									"src": "1783:145:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										328
									],
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "2278:605:16",
										"statements": [
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "impl",
														"nameLocation": "2297:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "2289:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2094,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2289:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2097,
												"initialValue": {
													"id": 2096,
													"name": "accountImplementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2057,
													"src": "2304:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2289:36:16"
											},
											{
												"assignments": [
													2099
												],
												"declarations": [
													{
														"constant": false,
														"id": 2099,
														"mutability": "mutable",
														"name": "salt",
														"nameLocation": "2344:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "2336:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2098,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": {
													"arguments": [
														{
															"id": 2101,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2365:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2102,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "2373:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2100,
														"name": "_generateSalt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2466,
														"src": "2351:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (address,bytes memory) view returns (bytes32)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:43:16"
											},
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "2398:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "2390:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2105,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2390:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2112,
												"initialValue": {
													"arguments": [
														{
															"id": 2109,
															"name": "impl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "2443:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "2449:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2107,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "2408:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$1296_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2415:27:16",
														"memberName": "predictDeterministicAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1295,
														"src": "2408:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view returns (address)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2408:46:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2390:64:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2113,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "2471:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2479:4:16",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2471:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2484:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2471:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2493:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2471:23:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "IfStatement",
												"src": "2467:70:16",
												"trueBody": {
													"id": 2120,
													"nodeType": "Block",
													"src": "2496:41:16",
													"statements": [
														{
															"expression": {
																"id": 2118,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "2518:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"functionReturnParameters": 2093,
															"id": 2119,
															"nodeType": "Return",
															"src": "2511:14:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2122,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "2549:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2125,
																"name": "impl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "2585:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2126,
																"name": "salt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "2591:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2123,
																"name": "Clones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "2559:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Clones_$1296_$",
																	"typeString": "type(library Clones)"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2566:18:16",
															"memberName": "cloneDeterministic",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1261,
															"src": "2559:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (address,bytes32) returns (address)"
															}
														},
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2559:37:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2549:47:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "2549:47:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2130,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2613:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2617:6:16",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2613:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2132,
														"name": "entrypoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2059,
														"src": "2627:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2613:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2143,
												"nodeType": "IfStatement",
												"src": "2609:136:16",
												"trueBody": {
													"id": 2142,
													"nodeType": "Block",
													"src": "2639:106:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2137,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2106,
																				"src": "2678:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 2135,
																				"name": "allAccounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2062,
																				"src": "2662:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																					"typeString": "struct EnumerableSet.AddressSet storage ref"
																				}
																			},
																			"id": 2136,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2674:3:16",
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1635,
																			"src": "2662:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1608_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
																				"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
																			}
																		},
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2662:24:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4163636f756e74466163746f72793a206163636f756e7420616c72656164792072656769737465726564",
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2688:44:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d759aa24bcb789327fa64c7912abd554339daee5b9ef994758ed2ee97fa14df6",
																			"typeString": "literal_string \"AccountFactory: account already registered\""
																		},
																		"value": "AccountFactory: account already registered"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d759aa24bcb789327fa64c7912abd554339daee5b9ef994758ed2ee97fa14df6",
																			"typeString": "literal_string \"AccountFactory: account already registered\""
																		}
																	],
																	"id": 2134,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2654:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2654:79:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2141,
															"nodeType": "ExpressionStatement",
															"src": "2654:79:16"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2145,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "2776:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2146,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2785:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2147,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "2793:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2144,
														"name": "_initializeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "2757:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address,address,bytes calldata)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2757:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "2757:42:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "2832:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2152,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "2841:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2150,
														"name": "AccountCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2817:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2817:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "EmitStatement",
												"src": "2812:36:16"
											},
											{
												"expression": {
													"id": 2155,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2106,
													"src": "2868:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2093,
												"id": 2156,
												"nodeType": "Return",
												"src": "2861:14:16"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "2123:44:16",
										"text": "@notice Deploys a new Account for admin."
									},
									"functionSelector": "d8fd8f44",
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAccount",
									"nameLocation": "2182:13:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2090,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2251:8:16"
									},
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "2204:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "2196:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2227:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "2212:20:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2212:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:38:16"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "2269:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:9:16"
									},
									"scope": 2477,
									"src": "2173:710:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2185,
										"nodeType": "Block",
										"src": "3020:229:16",
										"statements": [
											{
												"assignments": [
													2165
												],
												"declarations": [
													{
														"constant": false,
														"id": 2165,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "3039:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2185,
														"src": "3031:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2164,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3031:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2168,
												"initialValue": {
													"expression": {
														"id": 2166,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3049:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3053:6:16",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3049:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:28:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2171,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "3098:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2172,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "3107:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2170,
																"name": "_isAccountOfFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "3078:19:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (address,bytes32) view returns (bool)"
																}
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3078:35:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74466163746f72793a206e6f7420616e206163636f756e742e",
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3115:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_469dbac098a877e9485383e88a6e0a3d8224a6983302edadf5957ea2cd8be35b",
																"typeString": "literal_string \"AccountFactory: not an account.\""
															},
															"value": "AccountFactory: not an account."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_469dbac098a877e9485383e88a6e0a3d8224a6983302edadf5957ea2cd8be35b",
																"typeString": "literal_string \"AccountFactory: not an account.\""
															}
														],
														"id": 2169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3070:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:79:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2176,
												"nodeType": "ExpressionStatement",
												"src": "3070:79:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2180,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "3186:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2178,
																	"name": "allAccounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "3170:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3182:3:16",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1635,
																"src": "3170:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1608_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3170:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74466163746f72793a206163636f756e7420616c72656164792072656769737465726564",
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3196:44:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d759aa24bcb789327fa64c7912abd554339daee5b9ef994758ed2ee97fa14df6",
																"typeString": "literal_string \"AccountFactory: account already registered\""
															},
															"value": "AccountFactory: account already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d759aa24bcb789327fa64c7912abd554339daee5b9ef994758ed2ee97fa14df6",
																"typeString": "literal_string \"AccountFactory: account already registered\""
															}
														],
														"id": 2177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3162:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3162:79:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "3162:79:16"
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "2891:79:16",
										"text": "@notice Callback function for an Account to register itself on the factory."
									},
									"functionSelector": "83a03f8c",
									"id": 2186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onRegister",
									"nameLocation": "2985:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "_salt",
												"nameLocation": "3004:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "2996:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2160,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:15:16"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3020:0:16"
									},
									"scope": 2477,
									"src": "2976:273:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										286
									],
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "3321:297:16",
										"statements": [
											{
												"assignments": [
													2194
												],
												"declarations": [
													{
														"constant": false,
														"id": 2194,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "3340:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2223,
														"src": "3332:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2193,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3332:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"expression": {
														"id": 2195,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3350:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3354:6:16",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3350:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3332:28:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2200,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "3399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2201,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "3408:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2199,
																"name": "_isAccountOfFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "3379:19:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (address,bytes32) view returns (bool)"
																}
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3379:35:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74466163746f72793a206e6f7420616e206163636f756e742e",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3416:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_469dbac098a877e9485383e88a6e0a3d8224a6983302edadf5957ea2cd8be35b",
																"typeString": "literal_string \"AccountFactory: not an account.\""
															},
															"value": "AccountFactory: not an account."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_469dbac098a877e9485383e88a6e0a3d8224a6983302edadf5957ea2cd8be35b",
																"typeString": "literal_string \"AccountFactory: not an account.\""
															}
														],
														"id": 2198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3371:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3371:79:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "3371:79:16"
											},
											{
												"assignments": [
													2207
												],
												"declarations": [
													{
														"constant": false,
														"id": 2207,
														"mutability": "mutable",
														"name": "isNewSigner",
														"nameLocation": "3468:11:16",
														"nodeType": "VariableDeclaration",
														"scope": 2223,
														"src": "3463:16:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3463:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"arguments": [
														{
															"id": 2212,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "3512:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2208,
																"name": "accountsOfSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3482:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1608_storage_$",
																	"typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2210,
															"indexExpression": {
																"id": 2209,
																"name": "_signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "3499:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3482:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3508:3:16",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1635,
														"src": "3482:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1608_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3482:38:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3463:57:16"
											},
											{
												"condition": {
													"id": 2215,
													"name": "isNewSigner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2207,
													"src": "3537:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2222,
												"nodeType": "IfStatement",
												"src": "3533:78:16",
												"trueBody": {
													"id": 2221,
													"nodeType": "Block",
													"src": "3550:61:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2217,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2194,
																		"src": "3582:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2218,
																		"name": "_signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2188,
																		"src": "3591:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2216,
																	"name": "SignerAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "3570:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3570:29:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2220,
															"nodeType": "EmitStatement",
															"src": "3565:34:16"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0b61e12b",
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onSignerAdded",
									"nameLocation": "3266:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "3288:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "3280:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_salt",
												"nameLocation": "3305:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "3297:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:32:16"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3321:0:16"
									},
									"scope": 2477,
									"src": "3257:361:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										294
									],
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "3770:298:16",
										"statements": [
											{
												"assignments": [
													2233
												],
												"declarations": [
													{
														"constant": false,
														"id": 2233,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "3789:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "3781:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3781:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2236,
												"initialValue": {
													"expression": {
														"id": 2234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3799:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3803:6:16",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3799:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3781:28:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2239,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2233,
																	"src": "3848:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2240,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "3857:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2238,
																"name": "_isAccountOfFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "3828:19:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (address,bytes32) view returns (bool)"
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3828:35:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74466163746f72793a206e6f7420616e206163636f756e742e",
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3865:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_469dbac098a877e9485383e88a6e0a3d8224a6983302edadf5957ea2cd8be35b",
																"typeString": "literal_string \"AccountFactory: not an account.\""
															},
															"value": "AccountFactory: not an account."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_469dbac098a877e9485383e88a6e0a3d8224a6983302edadf5957ea2cd8be35b",
																"typeString": "literal_string \"AccountFactory: not an account.\""
															}
														],
														"id": 2237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3820:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:79:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2244,
												"nodeType": "ExpressionStatement",
												"src": "3820:79:16"
											},
											{
												"assignments": [
													2246
												],
												"declarations": [
													{
														"constant": false,
														"id": 2246,
														"mutability": "mutable",
														"name": "isAccount",
														"nameLocation": "3917:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "3912:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3912:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2253,
												"initialValue": {
													"arguments": [
														{
															"id": 2251,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "3962:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2247,
																"name": "accountsOfSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "3929:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1608_storage_$",
																	"typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2249,
															"indexExpression": {
																"id": 2248,
																"name": "_signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "3946:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3929:25:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3955:6:16",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "3929:32:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1608_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3929:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3912:58:16"
											},
											{
												"condition": {
													"id": 2254,
													"name": "isAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2246,
													"src": "3987:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2261,
												"nodeType": "IfStatement",
												"src": "3983:78:16",
												"trueBody": {
													"id": 2260,
													"nodeType": "Block",
													"src": "3998:63:16",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2256,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "4032:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2257,
																		"name": "_signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2227,
																		"src": "4041:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2255,
																	"name": "SignerRemoved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "4018:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4018:31:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2259,
															"nodeType": "EmitStatement",
															"src": "4013:36:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "3626:72:16",
										"text": "@notice Callback function for an Account to un-register its signers."
									},
									"functionSelector": "9387a380",
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onSignerRemoved",
									"nameLocation": "3713:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "3737:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3729:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "_salt",
												"nameLocation": "3754:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3746:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3746:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3728:32:16"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3770:0:16"
									},
									"scope": 2477,
									"src": "3704:364:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "4407:56:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2273,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "4446:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2271,
															"name": "allAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4425:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4437:8:16",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1689,
														"src": "4425:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1608_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4425:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2275,
												"nodeType": "Return",
												"src": "4418:37:16"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "4263:69:16",
										"text": "@notice Returns whether an account is registered on this factory."
									},
									"functionSelector": "c3c5a547",
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRegistered",
									"nameLocation": "4347:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4368:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "4360:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4360:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:18:16"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "4401:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4401:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:6:16"
									},
									"scope": 2477,
									"src": "4338:125:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "4583:46:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2283,
															"name": "allAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4601:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4613:6:16",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1704,
														"src": "4601:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1608_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4601:20:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2282,
												"id": 2286,
												"nodeType": "Return",
												"src": "4594:27:16"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "4471:49:16",
										"text": "@notice Returns the total number of accounts."
									},
									"functionSelector": "58451f97",
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAccounts",
									"nameLocation": "4535:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4548:2:16"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "4574:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4573:9:16"
									},
									"scope": 2477,
									"src": "4526:103:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "4803:318:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2300,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2291,
																	"src": "4822:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2301,
																	"name": "_end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2293,
																	"src": "4831:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4822:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2303,
																	"name": "_end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2293,
																	"src": "4839:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2304,
																			"name": "allAccounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "4847:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																				"typeString": "struct EnumerableSet.AddressSet storage ref"
																			}
																		},
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4859:6:16",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1704,
																		"src": "4847:18:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1608_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
																			"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4847:20:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4839:28:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4822:45:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426173654163636f756e74466163746f72793a20696e76616c696420696e6469636573",
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4869:37:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29ee3e85e96f7a77c75dc9d12aa90f74aff8ee837db8bd0df507b87452df3dbd",
																"typeString": "literal_string \"BaseAccountFactory: invalid indices\""
															},
															"value": "BaseAccountFactory: invalid indices"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29ee3e85e96f7a77c75dc9d12aa90f74aff8ee837db8bd0df507b87452df3dbd",
																"typeString": "literal_string \"BaseAccountFactory: invalid indices\""
															}
														],
														"id": 2299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4814:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4814:93:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2311,
												"nodeType": "ExpressionStatement",
												"src": "4814:93:16"
											},
											{
												"assignments": [
													2313
												],
												"declarations": [
													{
														"constant": false,
														"id": 2313,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "4928:3:16",
														"nodeType": "VariableDeclaration",
														"scope": 2352,
														"src": "4920:11:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4920:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2317,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "_end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2293,
														"src": "4934:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2315,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "4941:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4934:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4920:27:16"
											},
											{
												"expression": {
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2318,
														"name": "accounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "4958:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2322,
																	"name": "_end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2293,
																	"src": "4983:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2323,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2291,
																	"src": "4990:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4983:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4969:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2319,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4973:7:16",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2320,
																"nodeType": "ArrayTypeName",
																"src": "4973:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4969:28:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "4958:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 2327,
												"nodeType": "ExpressionStatement",
												"src": "4958:39:16"
											},
											{
												"body": {
													"id": 2350,
													"nodeType": "Block",
													"src": "5047:67:16",
													"statements": [
														{
															"expression": {
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2339,
																		"name": "accounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "5062:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 2341,
																	"indexExpression": {
																		"id": 2340,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "5071:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5062:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2344,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2329,
																				"src": "5091:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2345,
																				"name": "_start",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2291,
																				"src": "5095:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5091:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2342,
																			"name": "allAccounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "5076:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																				"typeString": "struct EnumerableSet.AddressSet storage ref"
																			}
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5088:2:16",
																		"memberName": "at",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1731,
																		"src": "5076:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1608_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
																			"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
																		}
																	},
																	"id": 2347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5076:26:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5062:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2349,
															"nodeType": "ExpressionStatement",
															"src": "5062:40:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2332,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "5030:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2333,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "5034:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5030:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2351,
												"initializationExpression": {
													"assignments": [
														2329
													],
													"declarations": [
														{
															"constant": false,
															"id": 2329,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5023:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2351,
															"src": "5015:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2328,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5015:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2331,
													"initialValue": {
														"hexValue": "30",
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5027:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5015:13:16"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2335,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "5039:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5044:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5039:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2338,
													"nodeType": "ExpressionStatement",
													"src": "5039:6:16"
												},
												"nodeType": "ForStatement",
												"src": "5010:104:16"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "4637:59:16",
										"text": "@notice Returns all accounts between the given indices."
									},
									"functionSelector": "e68a7c3b",
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccounts",
									"nameLocation": "4711:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "_start",
												"nameLocation": "4731:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4723:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "_end",
												"nameLocation": "4747:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4739:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4739:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4722:30:16"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "4793:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4776:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2295,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4776:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2296,
													"nodeType": "ArrayTypeName",
													"src": "4776:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4775:27:16"
									},
									"scope": 2477,
									"src": "4702:419:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										341
									],
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "5258:46:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2360,
															"name": "allAccounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "5276:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2361,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5288:6:16",
														"memberName": "values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "5276:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1608_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5276:20:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2359,
												"id": 2363,
												"nodeType": "Return",
												"src": "5269:27:16"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "5129:56:16",
										"text": "@notice Returns all accounts created on the factory."
									},
									"functionSelector": "08e93d0a",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllAccounts",
									"nameLocation": "5200:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5214:2:16"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "5240:16:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2356,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5240:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2357,
													"nodeType": "ArrayTypeName",
													"src": "5240:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5239:18:16"
									},
									"scope": 2477,
									"src": "5191:113:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										351
									],
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "5509:149:16",
										"statements": [
											{
												"assignments": [
													2376
												],
												"declarations": [
													{
														"constant": false,
														"id": 2376,
														"mutability": "mutable",
														"name": "salt",
														"nameLocation": "5528:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "5520:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2375,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5520:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2381,
												"initialValue": {
													"arguments": [
														{
															"id": 2378,
															"name": "_adminSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "5549:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2379,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "5563:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2377,
														"name": "_generateSalt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2466,
														"src": "5535:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (address,bytes memory) view returns (bytes32)"
														}
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:34:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5520:49:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2384,
															"name": "accountImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "5622:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2385,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "5645:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2382,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "5587:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$1296_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5594:27:16",
														"memberName": "predictDeterministicAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1295,
														"src": "5587:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view returns (address)"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5587:63:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2374,
												"id": 2387,
												"nodeType": "Return",
												"src": "5580:70:16"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "5312:97:16",
										"text": "@notice Returns the address of an Account that would be deployed with the given admin signer."
									},
									"functionSelector": "8878ed33",
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "5424:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "_adminSigner",
												"nameLocation": "5443:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "5435:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5472:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "5457:20:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5457:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5434:44:16"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "5500:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5500:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5499:9:16"
									},
									"scope": 2477,
									"src": "5415:243:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										360
									],
									"body": {
										"id": 2404,
										"nodeType": "Block",
										"src": "5838:59:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2398,
																"name": "accountsOfSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "5856:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressSet_$1608_storage_$",
																	"typeString": "mapping(address => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 2400,
															"indexExpression": {
																"id": 2399,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "5873:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5856:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1608_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5881:6:16",
														"memberName": "values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "5856:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1608_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1608_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
														}
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2397,
												"id": 2403,
												"nodeType": "Return",
												"src": "5849:40:16"
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "5666:71:16",
										"text": "@notice Returns all accounts that the given address is a signer of."
									},
									"functionSelector": "0e6254fd",
									"id": 2405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountsOfSigner",
									"nameLocation": "5752:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "5780:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "5772:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5771:16:16"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "5828:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "5811:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2394,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5811:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2395,
													"nodeType": "ArrayTypeName",
													"src": "5811:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5810:27:16"
									},
									"scope": 2477,
									"src": "5743:154:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2427,
										"nodeType": "Block",
										"src": "6276:142:16",
										"statements": [
											{
												"assignments": [
													2416
												],
												"declarations": [
													{
														"constant": false,
														"id": 2416,
														"mutability": "mutable",
														"name": "predicted",
														"nameLocation": "6295:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2427,
														"src": "6287:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2415,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6287:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2422,
												"initialValue": {
													"arguments": [
														{
															"id": 2419,
															"name": "accountImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "6342:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2420,
															"name": "_salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "6365:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2417,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "6307:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$1296_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 2418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6314:27:16",
														"memberName": "predictDeterministicAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1295,
														"src": "6307:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view returns (address)"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6307:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6287:84:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2423,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "6389:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2424,
														"name": "predicted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "6401:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6389:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2414,
												"id": 2426,
												"nodeType": "Return",
												"src": "6382:28:16"
											}
										]
									},
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "6096:75:16",
										"text": "@dev Returns whether the caller is an account deployed by this factory."
									},
									"id": 2428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAccountOfFactory",
									"nameLocation": "6186:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "6214:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "6206:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "_salt",
												"nameLocation": "6232:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "6224:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6205:33:16"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "6270:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6270:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6269:6:16"
									},
									"scope": 2477,
									"src": "6177:241:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2446,
										"nodeType": "Block",
										"src": "6508:102:16",
										"statements": [
											{
												"assignments": [
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "code",
														"nameLocation": "6532:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2446,
														"src": "6519:17:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6519:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2439,
												"initialValue": {
													"expression": {
														"id": 2437,
														"name": "cloneAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "6539:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6552:4:16",
													"memberName": "code",
													"nodeType": "MemberAccess",
													"src": "6539:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6519:37:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2442,
															"name": "code",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "6593:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "3130",
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6599:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 2440,
															"name": "BytesLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "6574:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BytesLib_$1216_$",
																"typeString": "type(library BytesLib)"
															}
														},
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6583:9:16",
														"memberName": "toAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1215,
														"src": "6574:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (bytes memory,uint256) pure returns (address)"
														}
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6574:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2434,
												"id": 2445,
												"nodeType": "Return",
												"src": "6567:35:16"
											}
										]
									},
									"id": 2447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "6435:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "cloneAddress",
												"nameLocation": "6462:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "6454:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6453:22:16"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2447,
												"src": "6499:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:9:16"
									},
									"scope": 2477,
									"src": "6426:184:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2465,
										"nodeType": "Block",
										"src": "6780:62:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2460,
																	"name": "_admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2450,
																	"src": "6819:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2461,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2452,
																	"src": "6827:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2458,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6808:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6812:6:16",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "6808:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6808:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2457,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6798:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6798:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2456,
												"id": 2464,
												"nodeType": "Return",
												"src": "6791:43:16"
											}
										]
									},
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "6618:57:16",
										"text": "@dev Returns the salt used when deploying an Account."
									},
									"id": 2466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateSalt",
									"nameLocation": "6690:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "6712:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "6704:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6733:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "6720:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:36:16"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "6771:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2454,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:9:16"
									},
									"scope": 2477,
									"src": "6681:161:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 2467,
										"nodeType": "StructuredDocumentation",
										"src": "6850:96:16",
										"text": "@dev Called in `createAccount`. Initializes the account contract created in `createAccount`."
									},
									"id": 2476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeAccount",
									"nameLocation": "6961:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "6988:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "6980:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "7006:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "6998:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6998:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7029:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "7014:20:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7014:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6979:56:16"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7052:0:16"
									},
									"scope": 2477,
									"src": "6952:101:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2478,
							"src": "1059:5997:16",
							"usedErrors": [],
							"usedEvents": [
								304,
								311,
								318
							]
						}
					],
					"src": "37:7019:16"
				},
				"id": 16
			},
			".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@thirdweb-dev/dynamic-contracts/src/utils/Helpers.sol",
					"exportedSymbols": {
						"ValidationData": [
							2487
						],
						"_intersectTimeRange": [
							2631
						],
						"_packValidationData": [
							2668,
							2706
						],
						"_parseValidationData": [
							2546
						],
						"calldataKeccak": [
							2716
						]
					},
					"id": 2717,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:17"
						},
						{
							"canonicalName": "ValidationData",
							"documentation": {
								"id": 2480,
								"nodeType": "StructuredDocumentation",
								"src": "148:589:17",
								"text": " returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n @param aggregator - address(0) - the account validated the signature by itself.\n              address(1) - the account failed to validate the signature.\n              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n @param validAfter - this UserOp is valid only after this timestamp.\n @param validaUntil - this UserOp is valid only up to this timestamp."
							},
							"id": 2487,
							"members": [
								{
									"constant": false,
									"id": 2482,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "776:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2487,
									"src": "768:18:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2481,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2484,
									"mutability": "mutable",
									"name": "validAfter",
									"nameLocation": "800:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2487,
									"src": "793:17:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 2483,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "793:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2486,
									"mutability": "mutable",
									"name": "validUntil",
									"nameLocation": "824:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2487,
									"src": "817:17:17",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 2485,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "817:6:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidationData",
							"nameLocation": "746:14:17",
							"nodeType": "StructDefinition",
							"scope": 2717,
							"src": "739:99:17",
							"visibility": "public"
						},
						{
							"body": {
								"id": 2545,
								"nodeType": "Block",
								"src": "1037:322:17",
								"statements": [
									{
										"assignments": [
											2496
										],
										"declarations": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1052:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "1044:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2504,
										"initialValue": {
											"arguments": [
												{
													"arguments": [
														{
															"id": 2501,
															"name": "validationData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "1081:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1073:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2499,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1073:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1073:23:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												],
												"id": 2498,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1065:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 2497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:17",
													"typeDescriptions": {}
												}
											},
											"id": 2503,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1065:32:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1044:53:17"
									},
									{
										"assignments": [
											2506
										],
										"declarations": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "1111:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "1104:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2505,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2513,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2509,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "1131:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "313630",
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1149:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "1131:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 2508,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1124:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 2507,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1124:6:17",
													"typeDescriptions": {}
												}
											},
											"id": 2512,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1124:29:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1104:49:17"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 2516,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2514,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2506,
												"src": "1164:10:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "30",
												"id": 2515,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1178:1:17",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "1164:15:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2526,
										"nodeType": "IfStatement",
										"src": "1160:69:17",
										"trueBody": {
											"id": 2525,
											"nodeType": "Block",
											"src": "1181:48:17",
											"statements": [
												{
													"expression": {
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2517,
															"name": "validUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1192:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"arguments": [
																	{
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1210:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 2519,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "1210:6:17",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		}
																	],
																	"id": 2518,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1205:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1205:12:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint48",
																	"typeString": "type(uint48)"
																}
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1218:3:17",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1205:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"src": "1192:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"id": 2524,
													"nodeType": "ExpressionStatement",
													"src": "1192:29:17"
												}
											]
										}
									},
									{
										"assignments": [
											2528
										],
										"declarations": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "1242:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "1235:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2527,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1235:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2538,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2531,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "1262:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3438",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1281:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	},
																	"value": "48"
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "313630",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1286:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	},
																	"value": "160"
																},
																"src": "1281:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																}
															}
														],
														"id": 2535,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1280:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_208_by_1",
															"typeString": "int_const 208"
														}
													},
													"src": "1262:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 2530,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1255:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 2529,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1255:6:17",
													"typeDescriptions": {}
												}
											},
											"id": 2537,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1255:36:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1235:56:17"
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 2540,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2496,
													"src": "1320:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 2541,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2528,
													"src": "1332:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 2542,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "1344:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 2539,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2487,
												"src": "1305:14:17",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$2487_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 2543,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1305:50:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 2494,
										"id": 2544,
										"nodeType": "Return",
										"src": "1298:57:17"
									}
								]
							},
							"id": 2546,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_parseValidationData",
							"nameLocation": "950:20:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2490,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2489,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "979:14:17",
										"nodeType": "VariableDeclaration",
										"scope": 2546,
										"src": "971:22:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2488,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "971:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "970:24:17"
							},
							"returnParameters": {
								"id": 2494,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2493,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "1031:4:17",
										"nodeType": "VariableDeclaration",
										"scope": 2546,
										"src": "1009:26:17",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 2492,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2491,
												"name": "ValidationData",
												"nameLocations": [
													"1009:14:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2487,
												"src": "1009:14:17"
											},
											"referencedDeclaration": 2487,
											"src": "1009:14:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1008:28:17"
							},
							"scope": 2717,
							"src": "941:418:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2630,
								"nodeType": "Block",
								"src": "1543:763:17",
								"statements": [
									{
										"assignments": [
											2558
										],
										"declarations": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "accountValidationData",
												"nameLocation": "1572:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "1550:43:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData"
												},
												"typeName": {
													"id": 2557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2556,
														"name": "ValidationData",
														"nameLocations": [
															"1550:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2487,
														"src": "1550:14:17"
													},
													"referencedDeclaration": 2487,
													"src": "1550:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidationData_$2487_storage_ptr",
														"typeString": "struct ValidationData"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2562,
										"initialValue": {
											"arguments": [
												{
													"id": 2560,
													"name": "validationData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2548,
													"src": "1617:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 2559,
												"name": "_parseValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2546,
												"src": "1596:20:17",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2487_memory_ptr_$",
													"typeString": "function (uint256) pure returns (struct ValidationData memory)"
												}
											},
											"id": 2561,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1596:36:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1550:82:17"
									},
									{
										"assignments": [
											2565
										],
										"declarations": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "pmValidationData",
												"nameLocation": "1661:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "1639:38:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData"
												},
												"typeName": {
													"id": 2564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2563,
														"name": "ValidationData",
														"nameLocations": [
															"1639:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2487,
														"src": "1639:14:17"
													},
													"referencedDeclaration": 2487,
													"src": "1639:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ValidationData_$2487_storage_ptr",
														"typeString": "struct ValidationData"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2569,
										"initialValue": {
											"arguments": [
												{
													"id": 2567,
													"name": "paymasterValidationData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2550,
													"src": "1701:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 2566,
												"name": "_parseValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2546,
												"src": "1680:20:17",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2487_memory_ptr_$",
													"typeString": "function (uint256) pure returns (struct ValidationData memory)"
												}
											},
											"id": 2568,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1680:45:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1639:86:17"
									},
									{
										"assignments": [
											2571
										],
										"declarations": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1740:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "1732:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2574,
										"initialValue": {
											"expression": {
												"id": 2572,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2558,
												"src": "1753:21:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 2573,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1775:10:17",
											"memberName": "aggregator",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2482,
											"src": "1753:32:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1732:53:17"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"id": 2580,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2575,
												"name": "aggregator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2571,
												"src": "1796:10:17",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"arguments": [
													{
														"hexValue": "30",
														"id": 2578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1818:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														}
													],
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1810:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_address_$",
														"typeString": "type(address)"
													},
													"typeName": {
														"id": 2576,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1810:7:17",
														"typeDescriptions": {}
													}
												},
												"id": 2579,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1810:10:17",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"src": "1796:24:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2587,
										"nodeType": "IfStatement",
										"src": "1792:89:17",
										"trueBody": {
											"id": 2586,
											"nodeType": "Block",
											"src": "1822:59:17",
											"statements": [
												{
													"expression": {
														"id": 2584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2581,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "1833:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 2582,
																"name": "pmValidationData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2565,
																"src": "1846:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1863:10:17",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2482,
															"src": "1846:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1833:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2585,
													"nodeType": "ExpressionStatement",
													"src": "1833:40:17"
												}
											]
										}
									},
									{
										"assignments": [
											2589
										],
										"declarations": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "1894:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "1887:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2588,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2592,
										"initialValue": {
											"expression": {
												"id": 2590,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2558,
												"src": "1907:21:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 2591,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1929:10:17",
											"memberName": "validAfter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2484,
											"src": "1907:32:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1887:52:17"
									},
									{
										"assignments": [
											2594
										],
										"declarations": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "1953:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "1946:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2593,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1946:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2597,
										"initialValue": {
											"expression": {
												"id": 2595,
												"name": "accountValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2558,
												"src": "1966:21:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 2596,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1988:10:17",
											"memberName": "validUntil",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2486,
											"src": "1966:32:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1946:52:17"
									},
									{
										"assignments": [
											2599
										],
										"declarations": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "pmValidAfter",
												"nameLocation": "2012:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "2005:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2598,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2005:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2602,
										"initialValue": {
											"expression": {
												"id": 2600,
												"name": "pmValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2565,
												"src": "2027:16:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 2601,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2044:10:17",
											"memberName": "validAfter",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2484,
											"src": "2027:27:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2005:49:17"
									},
									{
										"assignments": [
											2604
										],
										"declarations": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "pmValidUntil",
												"nameLocation": "2068:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "2061:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2603,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "2061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 2607,
										"initialValue": {
											"expression": {
												"id": 2605,
												"name": "pmValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2565,
												"src": "2083:16:17",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
													"typeString": "struct ValidationData memory"
												}
											},
											"id": 2606,
											"isConstant": false,
											"isLValue": true,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "2100:10:17",
											"memberName": "validUntil",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 2486,
											"src": "2083:27:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "2061:49:17"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 2610,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2608,
												"name": "validAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2589,
												"src": "2123:10:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "<",
											"rightExpression": {
												"id": 2609,
												"name": "pmValidAfter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2599,
												"src": "2136:12:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"src": "2123:25:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2615,
										"nodeType": "IfStatement",
										"src": "2119:56:17",
										"trueBody": {
											"expression": {
												"id": 2613,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftHandSide": {
													"id": 2611,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2589,
													"src": "2150:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "Assignment",
												"operator": "=",
												"rightHandSide": {
													"id": 2612,
													"name": "pmValidAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2599,
													"src": "2163:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"src": "2150:25:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"id": 2614,
											"nodeType": "ExpressionStatement",
											"src": "2150:25:17"
										}
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 2618,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 2616,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2594,
												"src": "2186:10:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": ">",
											"rightExpression": {
												"id": 2617,
												"name": "pmValidUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2604,
												"src": "2199:12:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"src": "2186:25:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2623,
										"nodeType": "IfStatement",
										"src": "2182:56:17",
										"trueBody": {
											"expression": {
												"id": 2621,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftHandSide": {
													"id": 2619,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2594,
													"src": "2213:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"nodeType": "Assignment",
												"operator": "=",
												"rightHandSide": {
													"id": 2620,
													"name": "pmValidUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2604,
													"src": "2226:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"src": "2213:25:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"id": 2622,
											"nodeType": "ExpressionStatement",
											"src": "2213:25:17"
										}
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 2625,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2571,
													"src": "2267:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 2626,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2589,
													"src": "2279:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 2627,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2594,
													"src": "2291:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 2624,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2487,
												"src": "2252:14:17",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$2487_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 2628,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2252:50:17",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 2555,
										"id": 2629,
										"nodeType": "Return",
										"src": "2245:57:17"
									}
								]
							},
							"id": 2631,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_intersectTimeRange",
							"nameLocation": "1416:19:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2551,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2548,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "1450:14:17",
										"nodeType": "VariableDeclaration",
										"scope": 2631,
										"src": "1442:22:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2547,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1442:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2550,
										"mutability": "mutable",
										"name": "paymasterValidationData",
										"nameLocation": "1479:23:17",
										"nodeType": "VariableDeclaration",
										"scope": 2631,
										"src": "1471:31:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2549,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1471:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1435:70:17"
							},
							"returnParameters": {
								"id": 2555,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2554,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2631,
										"src": "1520:21:17",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 2553,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2552,
												"name": "ValidationData",
												"nameLocations": [
													"1520:14:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2487,
												"src": "1520:14:17"
											},
											"referencedDeclaration": 2487,
											"src": "1520:14:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1519:23:17"
							},
							"scope": 2717,
							"src": "1407:899:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2667,
								"nodeType": "Block",
								"src": "2500:121:17",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2665,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2653,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"expression": {
																"id": 2642,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2635,
																"src": "2522:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2527:10:17",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2482,
															"src": "2522:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2514:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2640,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2514:7:17",
															"typeDescriptions": {}
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2647,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2635,
																			"src": "2550:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
																				"typeString": "struct ValidationData memory"
																			}
																		},
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2555:10:17",
																		"memberName": "validUntil",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2486,
																		"src": "2550:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2542:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2645,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2542:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2542:24:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2570:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "2542:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2652,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2541:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2514:60:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2656,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2635,
																		"src": "2586:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
																			"typeString": "struct ValidationData memory"
																		}
																	},
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2591:10:17",
																	"memberName": "validAfter",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2484,
																	"src": "2586:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2578:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2654,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2578:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2578:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2607:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2613:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "2607:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 2662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2606:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "2578:38:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 2664,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "2577:40:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "2514:103:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 2639,
										"id": 2666,
										"nodeType": "Return",
										"src": "2507:110:17"
									}
								]
							},
							"documentation": {
								"id": 2632,
								"nodeType": "StructuredDocumentation",
								"src": "2310:108:17",
								"text": " helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"
							},
							"id": 2668,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2429:19:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2636,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2635,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "2471:4:17",
										"nodeType": "VariableDeclaration",
										"scope": 2668,
										"src": "2449:26:17",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$2487_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 2634,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2633,
												"name": "ValidationData",
												"nameLocations": [
													"2449:14:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2487,
												"src": "2449:14:17"
											},
											"referencedDeclaration": 2487,
											"src": "2449:14:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$2487_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2448:28:17"
							},
							"returnParameters": {
								"id": 2639,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2638,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2668,
										"src": "2491:7:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2637,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2491:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2490:9:17"
							},
							"scope": 2717,
							"src": "2420:201:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2705,
								"nodeType": "Block",
								"src": "3049:106:17",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2703,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2692,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"condition": {
																"id": 2680,
																"name": "sigFailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2671,
																"src": "3064:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "30",
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3080:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3064:17:17",
															"trueExpression": {
																"hexValue": "31",
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3076:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 2684,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3063:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2687,
																		"name": "validUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "3094:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3086:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2685,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3086:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3086:19:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3109:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "3086:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2691,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3085:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "3063:50:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2695,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2675,
																	"src": "3125:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3117:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2693,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3117:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:19:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3141:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3147:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "3141:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 2700,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3140:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "3117:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 2702,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "3116:35:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "3063:88:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 2679,
										"id": 2704,
										"nodeType": "Return",
										"src": "3056:95:17"
									}
								]
							},
							"documentation": {
								"id": 2669,
								"nodeType": "StructuredDocumentation",
								"src": "2625:316:17",
								"text": " helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"
							},
							"id": 2706,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2952:19:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2676,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2671,
										"mutability": "mutable",
										"name": "sigFailed",
										"nameLocation": "2977:9:17",
										"nodeType": "VariableDeclaration",
										"scope": 2706,
										"src": "2972:14:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 2670,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2972:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2673,
										"mutability": "mutable",
										"name": "validUntil",
										"nameLocation": "2995:10:17",
										"nodeType": "VariableDeclaration",
										"scope": 2706,
										"src": "2988:17:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 2672,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "2988:6:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2675,
										"mutability": "mutable",
										"name": "validAfter",
										"nameLocation": "3014:10:17",
										"nodeType": "VariableDeclaration",
										"scope": 2706,
										"src": "3007:17:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 2674,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "3007:6:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2971:54:17"
							},
							"returnParameters": {
								"id": 2679,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2678,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2706,
										"src": "3040:7:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2677,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3040:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3039:9:17"
							},
							"scope": 2717,
							"src": "2943:212:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2715,
								"nodeType": "Block",
								"src": "3412:172:17",
								"statements": [
									{
										"AST": {
											"nativeSrc": "3428:153:17",
											"nodeType": "YulBlock",
											"src": "3428:153:17",
											"statements": [
												{
													"nativeSrc": "3439:22:17",
													"nodeType": "YulVariableDeclaration",
													"src": "3439:22:17",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3456:4:17",
																"nodeType": "YulLiteral",
																"src": "3456:4:17",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "mload",
															"nativeSrc": "3450:5:17",
															"nodeType": "YulIdentifier",
															"src": "3450:5:17"
														},
														"nativeSrc": "3450:11:17",
														"nodeType": "YulFunctionCall",
														"src": "3450:11:17"
													},
													"variables": [
														{
															"name": "mem",
															"nativeSrc": "3443:3:17",
															"nodeType": "YulTypedName",
															"src": "3443:3:17",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "3471:22:17",
													"nodeType": "YulVariableDeclaration",
													"src": "3471:22:17",
													"value": {
														"name": "data.length",
														"nativeSrc": "3482:11:17",
														"nodeType": "YulIdentifier",
														"src": "3482:11:17"
													},
													"variables": [
														{
															"name": "len",
															"nativeSrc": "3475:3:17",
															"nodeType": "YulTypedName",
															"src": "3475:3:17",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "mem",
																"nativeSrc": "3516:3:17",
																"nodeType": "YulIdentifier",
																"src": "3516:3:17"
															},
															{
																"name": "data.offset",
																"nativeSrc": "3521:11:17",
																"nodeType": "YulIdentifier",
																"src": "3521:11:17"
															},
															{
																"name": "len",
																"nativeSrc": "3534:3:17",
																"nodeType": "YulIdentifier",
																"src": "3534:3:17"
															}
														],
														"functionName": {
															"name": "calldatacopy",
															"nativeSrc": "3503:12:17",
															"nodeType": "YulIdentifier",
															"src": "3503:12:17"
														},
														"nativeSrc": "3503:35:17",
														"nodeType": "YulFunctionCall",
														"src": "3503:35:17"
													},
													"nativeSrc": "3503:35:17",
													"nodeType": "YulExpressionStatement",
													"src": "3503:35:17"
												},
												{
													"nativeSrc": "3548:26:17",
													"nodeType": "YulAssignment",
													"src": "3548:26:17",
													"value": {
														"arguments": [
															{
																"name": "mem",
																"nativeSrc": "3565:3:17",
																"nodeType": "YulIdentifier",
																"src": "3565:3:17"
															},
															{
																"name": "len",
																"nativeSrc": "3570:3:17",
																"nodeType": "YulIdentifier",
																"src": "3570:3:17"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nativeSrc": "3555:9:17",
															"nodeType": "YulIdentifier",
															"src": "3555:9:17"
														},
														"nativeSrc": "3555:19:17",
														"nodeType": "YulFunctionCall",
														"src": "3555:19:17"
													},
													"variableNames": [
														{
															"name": "ret",
															"nativeSrc": "3548:3:17",
															"nodeType": "YulIdentifier",
															"src": "3548:3:17"
														}
													]
												}
											]
										},
										"evmVersion": "shanghai",
										"externalReferences": [
											{
												"declaration": 2709,
												"isOffset": false,
												"isSlot": false,
												"src": "3482:11:17",
												"suffix": "length",
												"valueSize": 1
											},
											{
												"declaration": 2709,
												"isOffset": true,
												"isSlot": false,
												"src": "3521:11:17",
												"suffix": "offset",
												"valueSize": 1
											},
											{
												"declaration": 2712,
												"isOffset": false,
												"isSlot": false,
												"src": "3548:3:17",
												"valueSize": 1
											}
										],
										"id": 2714,
										"nodeType": "InlineAssembly",
										"src": "3419:162:17"
									}
								]
							},
							"documentation": {
								"id": 2707,
								"nodeType": "StructuredDocumentation",
								"src": "3159:179:17",
								"text": " keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."
							},
							"id": 2716,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "calldataKeccak",
							"nameLocation": "3349:14:17",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2710,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2709,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "3379:4:17",
										"nodeType": "VariableDeclaration",
										"scope": 2716,
										"src": "3364:19:17",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 2708,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "3364:5:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3363:21:17"
							},
							"returnParameters": {
								"id": 2713,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2712,
										"mutability": "mutable",
										"name": "ret",
										"nameLocation": "3407:3:17",
										"nodeType": "VariableDeclaration",
										"scope": 2716,
										"src": "3399:11:17",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2711,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3399:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3398:13:17"
							},
							"scope": 2717,
							"src": "3340:244:17",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "37:3547:17"
				},
				"id": 17
			}
		}
	}
}